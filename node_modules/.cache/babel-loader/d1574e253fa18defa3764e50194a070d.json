{"remainingRequest":"C:\\development\\freshnet-v2\\vue\\node_modules\\babel-loader\\lib\\index.js!C:\\development\\freshnet-v2\\vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\development\\freshnet-v2\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\development\\freshnet-v2\\vue\\src\\pages\\setting\\PageManageSetting.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\development\\freshnet-v2\\vue\\src\\pages\\setting\\PageManageSetting.vue","mtime":1662732594219},{"path":"C:\\development\\freshnet-v2\\vue\\babel.config.js","mtime":1662650914175},{"path":"C:\\development\\freshnet-v2\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1662650916242},{"path":"C:\\development\\freshnet-v2\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1662650915901},{"path":"C:\\development\\freshnet-v2\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1662650916242},{"path":"C:\\development\\freshnet-v2\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1662650934771}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IEFjdGlvbkJhck1hbmFnZSBmcm9tICJAL3BhZ2VzL21hbmFnZS9BY3Rpb25CYXJNYW5hZ2UudnVlIjsKaW1wb3J0IEVtcHR5IGZyb20gIkAvY29tcG9uZW50cy9FbXB0eS52dWUiOwppbXBvcnQgSXRlbVNldHRpbmcgZnJvbSAiLi9pdGVtL0l0ZW1TZXR0aW5nLnZ1ZSI7CmV4cG9ydCBkZWZhdWx0IHsKICBrZXk6ICJzZXR0aW5nIiwKICByZXNvdXJjZTogewogICAgdGl0bGU6ICJTZXR0aW5ncyIsCiAgICBpY29uOiB7CiAgICAgIGxpZ2h0OiAic2V0dGluZy1GRkZGRkYiLAogICAgICBkYXJrOiAic2V0dGluZy0yQTQ4NTgiCiAgICB9CiAgfSwKICBjb21wb25lbnRzOiB7CiAgICBBY3Rpb25CYXJNYW5hZ2U6IEFjdGlvbkJhck1hbmFnZSwKICAgIEVtcHR5OiBFbXB0eSwKICAgIEl0ZW1TZXR0aW5nOiBJdGVtU2V0dGluZwogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7fTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBpc0xvYWRpbmc6IGZ1bmN0aW9uIGlzTG9hZGluZyhjKSB7CiAgICAgIHJldHVybiBjLnNldHRpbmdTdG9yZS5nZXR0ZXJzLmlzTG9hZGluZzsKICAgIH0sCiAgICBzZXR0aW5nczogZnVuY3Rpb24gc2V0dGluZ3MoYykgewogICAgICByZXR1cm4gYy5zZXR0aW5nU3RvcmUuZ2V0dGVycy5pdGVtczsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLnJlZnJlc2goKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHJlZnJlc2g6IGZ1bmN0aW9uIHJlZnJlc2goKSB7CiAgICAgIHRoaXMuc2V0dGluZ1N0b3JlLmRpc3BhdGNoKCJyZWZyZXNoIikuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgdGhyb3cgZXJyb3I7CiAgICAgIH0pOwogICAgfQogIH0KfTs="},{"version":3,"sources":["PageManageSetting.vue"],"names":[],"mappings":"AACA,OAAA,eAAA,MAAA,oCAAA;AACA,OAAA,KAAA,MAAA,wBAAA;AACA,OAAA,WAAA,MAAA,wBAAA;AAEA,eAAA;AACA,EAAA,GAAA,EAAA,SADA;AAEA,EAAA,QAAA,EAAA;AACA,IAAA,KAAA,EAAA,UADA;AAEA,IAAA,IAAA,EAAA;AAAA,MAAA,KAAA,EAAA,gBAAA;AAAA,MAAA,IAAA,EAAA;AAAA;AAFA,GAFA;AAMA,EAAA,UAAA,EAAA;AAAA,IAAA,eAAA,EAAA,eAAA;AAAA,IAAA,KAAA,EAAA,KAAA;AAAA,IAAA,WAAA,EAAA;AAAA,GANA;AAOA,EAAA,IAPA,kBAOA;AACA,WAAA,EAAA;AACA,GATA;AAUA,EAAA,QAAA,EAAA;AACA,IAAA,SAAA,EAAA,mBAAA,CAAA;AAAA,aAAA,CAAA,CAAA,YAAA,CAAA,OAAA,CAAA,SAAA;AAAA,KADA;AAEA,IAAA,QAAA,EAAA,kBAAA,CAAA;AAAA,aAAA,CAAA,CAAA,YAAA,CAAA,OAAA,CAAA,KAAA;AAAA;AAFA,GAVA;AAcA,EAAA,OAdA,qBAcA;AACA,SAAA,OAAA;AACA,GAhBA;AAiBA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,qBACA;AACA,WAAA,YAAA,CAAA,QAAA,CAAA,SAAA,EAAA,KAAA,CAAA,UAAA,KAAA,EAAA;AACA,cAAA,KAAA;AACA,OAFA;AAGA;AALA;AAjBA,CAAA","sourcesContent":["<script>\r\n   import ActionBarManage from \"@/pages/manage/ActionBarManage.vue\";\r\n   import Empty from \"@/components/Empty.vue\";\r\n   import ItemSetting from \"./item/ItemSetting.vue\";\r\n\r\n   export default {\r\n      key: \"setting\",\r\n      resource: {\r\n         title: \"Settings\",\r\n         icon: { light: \"setting-FFFFFF\", dark: \"setting-2A4858\" },\r\n      },\r\n      components: { ActionBarManage, Empty, ItemSetting },\r\n      data() {\r\n         return {};\r\n      },\r\n      computed: {\r\n         isLoading: (c) => c.settingStore.getters.isLoading,\r\n         settings: (c) => c.settingStore.getters.items,\r\n      },\r\n      mounted() {\r\n         this.refresh();\r\n      },\r\n      methods: {\r\n         refresh() {\r\n            this.settingStore.dispatch(\"refresh\").catch((error) => {\r\n               throw error;\r\n            });\r\n         },\r\n      },\r\n   };\r\n</script>\r\n\r\n<template>\r\n   <div class=\"PageManageSetting\">\r\n      <ActionBarManage\r\n         class=\"PageManageSetting-actionbar\"\r\n         :title=\"$options.resource.title\"\r\n         :rightMenus=\"[\r\n            {\r\n               key: 'refresh',\r\n               title: 'Refresh',\r\n               icon: host.res('icon/refresh-2A4858.svg'),\r\n               click: () => refresh(),\r\n            },\r\n         ]\"\r\n         @click-drawer-expand=\"$emit('click-drawer-expand')\"\r\n      />\r\n\r\n      <div class=\"PageManageSetting-body\" v-if=\"settings.length\">\r\n         <ItemSetting\r\n            class=\"PageManageSetting-item\"\r\n            v-for=\"setting in settings\"\r\n            :key=\"setting.key\"\r\n            :item=\"setting\"\r\n         />\r\n      </div>\r\n\r\n      <Empty v-if=\"!settings.length && !isLoading\" />\r\n   </div>\r\n</template>\r\n\r\n<style lang=\"scss\" scoped>\r\n   .PageManageSetting {\r\n      width: 100%;\r\n      height: 100%;\r\n      overflow-y: auto;\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: stretch;\r\n      .PageManageSetting-actionbar {\r\n         box-shadow: 0 0 6rem hsla(0, 0%, 0%, 0.4);\r\n      }\r\n\r\n      .PageManageSetting-body {\r\n         padding: 1.5rem;\r\n         padding-top: 3rem;\r\n         display: flex;\r\n         flex-direction: column;\r\n         align-items: center;\r\n         gap: 0.2rem;\r\n         .PageManageSetting-item {\r\n            width: 100%;\r\n            max-width: 25rem;\r\n         }\r\n      }\r\n   }\r\n</style>\r\n"],"sourceRoot":"src/pages/setting"}]}