{"remainingRequest":"C:\\dev\\freshnet-vue\\node_modules\\babel-loader\\lib\\index.js!C:\\dev\\freshnet-vue\\src\\stores\\store.product.js","dependencies":[{"path":"C:\\dev\\freshnet-vue\\src\\stores\\store.product.js","mtime":1668340139939},{"path":"C:\\dev\\freshnet-vue\\babel.config.js","mtime":1662650914175},{"path":"C:\\dev\\freshnet-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1662650916242},{"path":"C:\\dev\\freshnet-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1662650915901}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/dev/freshnet-vue/src/stores/store.product.js"],"names":["Product","ProductSpecContent","Image","DataLoader","CollectionUpdater","Processor","ModuleBundle","ModulePrice","Category","Vuex","ApiHost","U","init","Stores","categoryStore","category","productStore","Store","state","lastModified","dataLoader","timeout","processor","loadData","request","url","send","api","error","getError","contents","getContent","Error","Array","isArray","Promise","all","map","content","fromData","setData","data","commit","Date","now","getData","getters","items","mutations","time","isLoading","actions","refresh","context","acquire","doTimeout","dispatch","getItems","getItemOfId","id","item","find","getGroupsByCategory","Key","Other","categoryOther","groups","fetchCategory","categoryId","group","push","getGroupsByBrand","brandId","brand","fetchBrand","addItem","arg","POST","body","productNew","onId","getItem","catch","console","removeItemOfId","DELETE","filter","onUpdateItem","callback","updateTitleOfId","title","PUT","productId","optString","updateDescriptionOfId","description","isString","trim","updateBrandIdOfId","setBrandId","updateCategoryIdOfId","setCategoryId","updateAvailabilityOfId","isAvailable","stock","updateSecondHandOfId","isSecondHand","updatePriceOfId","price","setPrice","normal","promotion","addBundleOfId","bundle","addBundle","removeBundleOfId","removeBundle","addGiftOfId","gift","addGift","removeGiftOfId","removeGift","addSpecificationOfId","specification","addSpecification","removeSpecificationOfId","toData","type","key","removeSpecification","updateSpecificationsOfId","specifications","setSpecifications","addImageOfId","imageFile","imageFileForm","FormData","append","name","fetch","method","addImages","images","removeImageOfId","image","removeImage"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,OAAP,MAAoB,qBAApB;AACA,OAAOC,kBAAP,MAA+B,gCAA/B;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AAEA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AAEA,OAAOC,YAAP,MAAyB,mDAAzB;AACA,OAAOC,WAAP,MAAwB,kDAAxB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AAEA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,eAAe;AACdC,EAAAA,IADc,gBACTC,MADS,EACD;AACZ,QAAMC,aAAa,GAAGD,MAAM,CAACE,QAA7B;AAEA,QAAMC,YAAY,GAAG,IAAIP,IAAI,CAACQ,KAAT,CAAe;AACnCC,MAAAA,KAAK,EAAE;AACNC,QAAAA,YAAY,EAAE,CADR;AAENC,QAAAA,UAAU,EAAE,IAAIjB,UAAJ,CAAe;AAAEkB,UAAAA,OAAO,EAAE,OAAO,EAAP,GAAY;AAAvB,SAAf,EAA4C;AAA5C,SACVC,SADU,CACA;AAAA,iBAAMN,YAAY,CAACE,KAAb,CAAmBI,SAAzB;AAAA,SADA,EAEVC,QAFU,uEAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACSb,OAAO,CAACc,OAAR,GAAkBC,GAAlB,CAAsB,iBAAtB,EAAyCC,IAAzC,EADT;;AAAA;AACHC,kBAAAA,GADG;AAEHC,kBAAAA,KAFG,GAEKD,GAAG,CAACE,QAAJ,EAFL;AAGHC,kBAAAA,QAHG,GAGQH,GAAG,CAACI,UAAJ,EAHR;;AAAA,uBAILH,KAJK;AAAA;AAAA;AAAA;;AAAA,wBAIQ,IAAII,KAAJ,CAAUJ,KAAV,CAJR;;AAAA;AAAA,sBAKJK,KAAK,CAACC,OAAN,CAAcJ,QAAd,CALI;AAAA;AAAA;AAAA;;AAAA,wBAMF,IAAIE,KAAJ,CAAU,sBAAV,CANE;;AAAA;AAAA,mDAOFG,OAAO,CAACC,GAAR,CACNN,QAAQ,CAACO,GAAT,CAAa,UAACC,OAAD;AAAA,2BAAa,IAAItC,OAAJ,CAAYa,MAAZ,EAAoB0B,QAApB,CAA6BD,OAA7B,CAAb;AAAA,mBAAb,CADM,CAPE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFC,IAaVE,OAbU,CAaF,UAACC,IAAD,EAAU;AAClBzB,UAAAA,YAAY,CAAC0B,MAAb,CAAoB,OAApB,EAA6BT,KAAK,CAACC,OAAN,CAAcO,IAAd,IAAsBA,IAAtB,GAA6B,EAA1D;AACAzB,UAAAA,YAAY,CAAC0B,MAAb,CAAoB,cAApB,EAAoCC,IAAI,CAACC,GAAL,EAApC;AACA,SAhBU,EAiBVC,OAjBU,CAiBF;AAAA,iBAAM7B,YAAY,CAAC8B,OAAb,CAAqBC,KAA3B;AAAA,SAjBE,CAFN;AAoBNA,QAAAA,KAAK,EAAE,EApBD;AAqBNzB,QAAAA,SAAS,EAAE,IAAIjB,SAAJ;AArBL,OAD4B;AAwBnC2C,MAAAA,SAAS,EAAE;AACV7B,QAAAA,YAAY,EAAE,sBAACD,KAAD,EAAQ+B,IAAR;AAAA,iBAAkB/B,KAAK,CAACC,YAAN,GAAqB8B,IAAvC;AAAA,SADJ;AAEVF,QAAAA,KAAK,EAAE,eAAC7B,KAAD,EAAQ6B,MAAR;AAAA,iBAAmB7B,KAAK,CAAC6B,KAAN,GAAcA,MAAjC;AAAA;AAFG,OAxBwB;AA4BnCD,MAAAA,OAAO,EAAE;AACR3B,QAAAA,YAAY,EAAE,sBAACD,KAAD;AAAA,iBAAWA,KAAK,CAACC,YAAjB;AAAA,SADN;AAER+B,QAAAA,SAAS,EAAE,mBAAChC,KAAD;AAAA,iBAAWA,KAAK,CAACI,SAAN,CAAgB4B,SAAhB,EAAX;AAAA,SAFH;AAGRH,QAAAA,KAAK,EAAE,eAAC7B,KAAD;AAAA,iBAAWA,KAAK,CAAC6B,KAAjB;AAAA;AAHC,OA5B0B;AAiCnCI,MAAAA,OAAO,EAAE;AACFC,QAAAA,OADE,mBACMC,OADN,EACe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACTA,OAAO,CAACnC,KAAR,CAAcI,SAAd,CAAwBgC,OAAxB,CAAgC,SAAhC,uEAA2C;AAAA;AAAA;AAAA;AAAA;AACvDD,8BAAAA,OAAO,CAACnC,KAAR,CAAcE,UAAd,CAAyBmC,SAAzB;AADuD;AAAA,qCAEjDF,OAAO,CAACG,QAAR,CAAiB,UAAjB,CAFiD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAA3C,GADS;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKtB,SANO;AAQFC,QAAAA,QARE,oBAQOJ,OARP,EAQgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDAChBA,OAAO,CAACnC,KAAR,CAAcI,SAAd,CAAwBgC,OAAxB,CAAgC,UAAhC,uEAA4C;AAAA;AAAA;AAAA;AAAA;AAAA,gEAC3CD,OAAO,CAACnC,KAAR,CAAcE,UAAd,CAAyBqB,IAAzB,EAD2C;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAA5C,GADgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIvB,SAZO;AAaFiB,QAAAA,WAbE,uBAaUL,OAbV,EAa4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAATM,oBAAAA,EAAS,0EAAJ,EAAI;AAAA,sDAC5BN,OAAO,CAACnC,KAAR,CAAcI,SAAd,CAAwBgC,OAAxB,CAAgC,aAAhC,uEAA+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCACnCD,OAAO,CAACG,QAAR,CAAiB,UAAjB,CADmC;;AAAA;AACjDT,8BAAAA,KADiD;AAEjDa,8BAAAA,IAFiD,GAE1Cb,KAAK,CAACc,IAAN,CAAW,UAACD,IAAD;AAAA,uCAAUA,IAAI,CAACD,EAAL,KAAYA,EAAtB;AAAA,+BAAX,CAF0C;;AAAA,kCAGhDC,IAHgD;AAAA;AAAA;AAAA;;AAAA;AAAA,qCAItCP,OAAO,CAACG,QAAR,CAAiB,cAAjB,CAJsC;;AAAA;AAIpDT,8BAAAA,KAJoD;AAKpDa,8BAAAA,IAAI,GAAGb,KAAK,CAACc,IAAN,CAAW,UAACD,IAAD;AAAA,uCAAUA,IAAI,CAACD,EAAL,KAAYA,EAAtB;AAAA,+BAAX,CAAP;;AALoD;AAAA,gEAO9CC,IAP8C;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAA/C,GAD4B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUnC,SAvBO;AAyBFE,QAAAA,mBAzBE,+BAyBkBT,OAzBlB,EAyB2B;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACdA,OAAO,CAACG,QAAR,CAAiB,UAAjB,CADc;;AAAA;AAC5BT,oBAAAA,KAD4B;AAAA;AAAA,2BAGNjC,aAAa,CAAC0C,QAAd,CAC3B,cAD2B,EAE3BhD,QAAQ,CAACuD,GAAT,CAAaC,KAFc,CAHM;;AAAA;AAG5BC,oBAAAA,aAH4B;AAQ5BC,oBAAAA,MAR4B,GAQnB,EARmB;AAAA,2DASfnB,KATe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASvBa,8BAAAA,IATuB;AAAA;AAAA,qCAUZA,IAAI,CAACO,aAAL,EAVY;;AAAA;AAU7BpD,8BAAAA,QAV6B;AAWjC,kCAAI,CAACA,QAAL,EAAeA,QAAQ,GAAGkD,aAAX;AACXG,8BAAAA,UAZ6B,GAYhBrD,QAAQ,GAAGA,QAAQ,CAAC4C,EAAZ,GAAiB,EAZT;AAc7BU,8BAAAA,KAd6B,GAcrBH,MAAM,CAACL,IAAP,CAAY,UAACQ,KAAD,EAAW;AAClC,uCAAOA,KAAK,CAACtD,QAAN,CAAe4C,EAAf,KAAsBS,UAA7B;AACA,+BAFW,CAdqB;;AAkBjC,kCAAI,CAACC,KAAL,EAAY;AACXH,gCAAAA,MAAM,CAACI,IAAP,CAAaD,KAAK,GAAG;AAAEtD,kCAAAA,QAAQ,EAARA,QAAF;AAAYgC,kCAAAA,KAAK,EAAE;AAAnB,iCAArB;AACA;;AAEDsB,8BAAAA,KAAK,CAACtB,KAAN,CAAYuB,IAAZ,CAAiBV,IAAjB;;AAtBiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA,sDAyB3BM,MAzB2B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0BlC,SAnDO;AAoDFK,QAAAA,gBApDE,4BAoDelB,OApDf,EAoDwB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACXA,OAAO,CAACG,QAAR,CAAiB,UAAjB,CADW;;AAAA;AACzBT,oBAAAA,KADyB;AAGzBmB,oBAAAA,MAHyB,GAGhB,EAHgB;AAAA,4DAIZnB,KAJY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIpBa,8BAAAA,IAJoB;AAK1BS,8BAAAA,KAL0B,GAKlBH,MAAM,CAACL,IAAP,CAAY,UAACQ,KAAD,EAAW;AAClC,oCAAMG,OAAO,GAAGH,KAAK,CAACI,KAAN,GAAcJ,KAAK,CAACI,KAAN,CAAYd,EAA1B,GAA+B,EAA/C;AACA,uCAAOa,OAAO,KAAKZ,IAAI,CAACY,OAAxB;AACA,+BAHW,CALkB;AAAA;AAAA,qCAUZZ,IAAI,CAACc,UAAL,EAVY;;AAAA;AAU1BD,8BAAAA,KAV0B;;AAW9B,kCAAI,CAACJ,KAAL,EAAY;AACXH,gCAAAA,MAAM,CAACI,IAAP,CAAaD,KAAK,GAAG;AAAEI,kCAAAA,KAAK,EAALA,KAAF;AAAS1B,kCAAAA,KAAK,EAAE;AAAhB,iCAArB;AACA;;AAEDsB,8BAAAA,KAAK,CAACtB,KAAN,CAAYuB,IAAZ,CAAiBV,IAAjB;;AAf8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA,uDAkBxBM,MAlBwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmB/B,SAvEO;AAyEFS,QAAAA,OAzEE,mBAyEMtB,OAzEN,EAyE+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAhBuB,oBAAAA,GAAgB,6EAAV;AAAEnC,sBAAAA,IAAI,EAAJA;AAAF,qBAAU;AAAA,uDAC/BY,OAAO,CAACnC,KAAR,CAAcI,SAAd,CACLgC,OADK,CACG,SADH,uEACc;AAAA;AAAA;AAAA;AAAA;AAAA;AACbb,8BAAAA,IADa,GACJmC,GADI,CACbnC,IADa;;AAAA,kCAEdA,IAFc;AAAA;AAAA;AAAA;;AAAA,oCAEF,IAAIT,KAAJ,CAAU,gBAAV,CAFE;;AAAA;AAAA;AAAA,qCAGHtB,OAAO,CAACc,OAAR,GACdqD,IADc,GAEdpD,GAFc,CAEV,YAFU,EAGdqD,IAHc,CAGT;AAAExC,gCAAAA,OAAO,EAAEG;AAAX,+BAHS,EAIdf,IAJc,EAHG;;AAAA;AAGfC,8BAAAA,GAHe;AAQfC,8BAAAA,KARe,GAQPD,GAAG,CAACE,QAAJ,EARO;AASfS,8BAAAA,OATe,GASLX,GAAG,CAACI,UAAJ,EATK;;AAAA,mCAUfH,KAVe;AAAA;AAAA;AAAA;;AAAA,oCAUF,IAAII,KAAJ,CAAUJ,KAAV,CAVE;;AAAA;AAWfmD,8BAAAA,UAXe,GAWF,IAAI/E,OAAJ,CAAYa,MAAZ,EAAoB0B,QAApB,CAA6BD,OAA7B,CAXE;AAYfsB,8BAAAA,IAZe,GAYR,IAAIxD,iBAAJ,CAAsBiD,OAAtB,EACT2B,IADS,CACJ,UAACpB,IAAD;AAAA,uCAAUA,IAAI,CAACD,EAAf;AAAA,+BADI,EAETsB,OAFS,CAEDF,UAFC,CAZQ;AAAA,iEAeZnB,IAfY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADd,IAkBLsB,KAlBK,CAkBC,UAACtD,KAAD,EAAW;AACjBuD,sBAAAA,OAAO,CAACvD,KAAR,CAAcA,KAAd;AACA,4BAAMA,KAAN;AACA,qBArBK,CAD+B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuBtC,SAhGO;AAiGFwD,QAAAA,cAjGE,0BAiGa/B,OAjGb,EAiGoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAduB,oBAAAA,GAAc,6EAAR;AAAEjB,sBAAAA,EAAE,EAAFA;AAAF,qBAAQ;AAAA,uDACpCN,OAAO,CAACnC,KAAR,CAAcI,SAAd,CAAwBgC,OAAxB,CAAgC,gBAAhC,uEAAkD;AAAA;AAAA;AAAA;AAAA;AAAA;AAClDK,8BAAAA,EADkD,GAC3CiB,GAD2C,CAClDjB,EADkD;AAAA;AAAA,qCAExCjD,OAAO,CAACc,OAAR,GACd6D,MADc,GAEd5D,GAFc,wBAEMkC,EAFN,GAGdmB,IAHc,CAGT;AAAEnB,gCAAAA,EAAE,EAAFA;AAAF,+BAHS,EAIdjC,IAJc,EAFwC;;AAAA;AAEpDC,8BAAAA,GAFoD;AAOpDC,8BAAAA,KAPoD,GAO5CD,GAAG,CAACE,QAAJ,EAP4C;;AAAA,mCAQpDD,KARoD;AAAA;AAAA;AAAA;;AAAA,oCAQvC,IAAII,KAAJ,CAAUJ,KAAV,CARuC;;AAAA;AASpDmB,8BAAAA,KAToD,GAS5CM,OAAO,CAACnC,KAAR,CAAc6B,KAAd,CAAoBuC,MAApB,CAA2B,UAAC1B,IAAD,EAAU;AAChD,uCAAOA,IAAI,CAACD,EAAL,KAAYA,EAAnB;AACA,+BAFW,CAT4C;AAYxDN,8BAAAA,OAAO,CAACX,MAAR,CAAe,OAAf,EAAwBK,KAAxB;AACAM,8BAAAA,OAAO,CAACX,MAAR,CAAe,cAAf,EAA+BC,IAAI,CAACC,GAAL,EAA/B;AAbwD,iEAcjD,IAdiD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAlD,GADoC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiB3C,SAlHO;AAoHF2C,QAAAA,YApHE,wBAoHWlC,OApHX,EAoH4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAxBuB,oBAAAA,GAAwB,6EAAlB;AAAEjB,sBAAAA,EAAE,EAAFA,EAAF;AAAM6B,sBAAAA,QAAQ,EAARA;AAAN,qBAAkB;AAAA,uDAC5CnC,OAAO,CAACnC,KAAR,CAAcI,SAAd,CAAwBgC,OAAxB,CAAgC,cAAhC,uEAAgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAChDK,8BAAAA,EADgD,GAC/BiB,GAD+B,CAChDjB,EADgD,EAC5C6B,QAD4C,GAC/BZ,GAD+B,CAC5CY,QAD4C;AAAA;AAAA,qCAErCnC,OAAO,CAACG,QAAR,CAAiB,aAAjB,EAAgCG,EAAhC,CAFqC;;AAAA;AAElDC,8BAAAA,IAFkD;AAGtD,kCAAIA,IAAJ,EAAU4B,QAAQ,CAAC5B,IAAD,CAAR;AAH4C,iEAI/CA,IAJ+C;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAhD,GAD4C;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOnD,SA3HO;AA6HF6B,QAAAA,eA7HE,2BA6HcpC,OA7Hd,EA6H4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAArBuB,oBAAAA,GAAqB,6EAAf;AAAEjB,sBAAAA,EAAE,EAAFA,EAAF;AAAM+B,sBAAAA,KAAK,EAALA;AAAN,qBAAe;AAAA,uDAC5CrC,OAAO,CAACnC,KAAR,CAAcI,SAAd,CAAwBgC,OAAxB,CACN,iBADM,uEAEN;AAAA;AAAA;AAAA;AAAA;AAAA;AACOK,8BAAAA,EADP,GACqBiB,GADrB,CACOjB,EADP,EACW+B,KADX,GACqBd,GADrB,CACWc,KADX;AAAA;AAAA,qCAEiBhF,OAAO,CAACc,OAAR,GACdmE,GADc,GAEdlE,GAFc,CAEV,kBAFU,EAGdqD,IAHc,CAGT;AAAExC,gCAAAA,OAAO,EAAE;AAAEsD,kCAAAA,SAAS,EAAEjC,EAAb;AAAiB+B,kCAAAA,KAAK,EAALA;AAAjB;AAAX,+BAHS,EAIdhE,IAJc,EAFjB;;AAAA;AAEKC,8BAAAA,GAFL;AAOKC,8BAAAA,KAPL,GAOaD,GAAG,CAACE,QAAJ,EAPb;AAQKS,8BAAAA,OARL,GAQeX,GAAG,CAACI,UAAJ,EARf;;AAAA,mCASKH,KATL;AAAA;AAAA;AAAA;;AAAA,oCAUQ,IAAII,KAAJ,CAAUJ,KAAV,CAVR;;AAAA;AAAA;AAAA,qCAYkByB,OAAO,CAACG,QAAR,CAAiB,cAAjB,EAAiC;AACjDG,gCAAAA,EAAE,EAAErB,OAAO,CAACsD,SADqC;AAEjDJ,gCAAAA,QAAQ,EAAE,kBAAC5B,IAAD,EAAU;AACnBA,kCAAAA,IAAI,CAAC8B,KAAL,GAAa/E,CAAC,CAACkF,SAAF,CAAYvD,OAAO,CAACoD,KAApB,CAAb;AACA;AAJgD,+BAAjC,CAZlB;;AAAA;AAYK9B,8BAAAA,IAZL;AAAA,iEAkBQA,IAlBR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFM,GAD4C;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwBnD,SArJO;AAsJFkC,QAAAA,qBAtJE,iCAsJoBzC,OAtJpB,EAsJwD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA3BuB,oBAAAA,GAA2B,6EAArB;AAAEjB,sBAAAA,EAAE,EAAFA,EAAF;AAAMoC,sBAAAA,WAAW,EAAXA;AAAN,qBAAqB;AAAA,uDACxD1C,OAAO,CAACnC,KAAR,CAAcI,SAAd,CAAwBgC,OAAxB,CACN,uBADM,uEAEN;AAAA;AAAA;AAAA;AAAA;AAAA;AACOK,8BAAAA,EADP,GAC2BiB,GAD3B,CACOjB,EADP,EACWoC,WADX,GAC2BnB,GAD3B,CACWmB,WADX;AAAA;AAAA,qCAEiBrF,OAAO,CAACc,OAAR,GACdmE,GADc,GAEdlE,GAFc,CAEV,wBAFU,EAGdqD,IAHc,CAGT;AAAExC,gCAAAA,OAAO,EAAE;AAAEsD,kCAAAA,SAAS,EAAEjC,EAAb;AAAiBoC,kCAAAA,WAAW,EAAXA;AAAjB;AAAX,+BAHS,EAIdrE,IAJc,EAFjB;;AAAA;AAEKC,8BAAAA,GAFL;AAOKC,8BAAAA,KAPL,GAOaD,GAAG,CAACE,QAAJ,EAPb;AAQKS,8BAAAA,OARL,GAQeX,GAAG,CAACI,UAAJ,EARf;;AAAA,mCASKH,KATL;AAAA;AAAA;AAAA;;AAAA,oCAUQ,IAAII,KAAJ,CAAUJ,KAAV,CAVR;;AAAA;AAAA;AAAA,qCAYkByB,OAAO,CAACG,QAAR,CAAiB,cAAjB,EAAiC;AACjDG,gCAAAA,EAAE,EAAErB,OAAO,CAACsD,SADqC;AAEjDJ,gCAAAA,QAAQ,EAAE,kBAAC5B,IAAD,EAAU;AACnBA,kCAAAA,IAAI,CAACmC,WAAL,GAAmBpF,CAAC,CAACqF,QAAF,CAAW1D,OAAO,CAACyD,WAAnB,IAChBzD,OAAO,CAACyD,WAAR,CAAoBE,IAApB,EADgB,GAEhB,EAFH;AAGA;AANgD,+BAAjC,CAZlB;;AAAA;AAYKrC,8BAAAA,IAZL;AAAA,iEAoBQA,IApBR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFM,GADwD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0B/D,SAhLO;AAiLFsC,QAAAA,iBAjLE,6BAiLgB7C,OAjLhB,EAiLgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAvBuB,oBAAAA,GAAuB,6EAAjB;AAAEjB,sBAAAA,EAAE,EAAFA,EAAF;AAAMa,sBAAAA,OAAO,EAAPA;AAAN,qBAAiB;AAAA,uDAChDnB,OAAO,CAACnC,KAAR,CAAcI,SAAd,CAAwBgC,OAAxB,CACN,mBADM,uEAEN;AAAA;AAAA;AAAA;AAAA;AAAA;AACOK,8BAAAA,EADP,GACuBiB,GADvB,CACOjB,EADP,EACWa,OADX,GACuBI,GADvB,CACWJ,OADX;AAAA;AAAA,qCAEiB9D,OAAO,CAACc,OAAR,GACdmE,GADc,GAEdlE,GAFc,CAEV,oBAFU,EAGdqD,IAHc,CAGT;AAAExC,gCAAAA,OAAO,EAAE;AAAEsD,kCAAAA,SAAS,EAAEjC,EAAb;AAAiBa,kCAAAA,OAAO,EAAPA;AAAjB;AAAX,+BAHS,EAId9C,IAJc,EAFjB;;AAAA;AAEKC,8BAAAA,GAFL;AAOKC,8BAAAA,KAPL,GAOaD,GAAG,CAACE,QAAJ,EAPb;AAQKS,8BAAAA,OARL,GAQeX,GAAG,CAACI,UAAJ,EARf;;AAAA,mCASKH,KATL;AAAA;AAAA;AAAA;;AAAA,oCAUQ,IAAII,KAAJ,CAAUJ,KAAV,CAVR;;AAAA;AAAA;AAAA,qCAYkByB,OAAO,CAACG,QAAR,CAAiB,cAAjB,EAAiC;AACjDG,gCAAAA,EAAE,EAAErB,OAAO,CAACsD,SADqC;AAEjDJ,gCAAAA,QAAQ,EAAE,kBAAC5B,IAAD;AAAA,yCAAUA,IAAI,CAACuC,UAAL,CAAgB7D,OAAO,CAACkC,OAAxB,CAAV;AAAA;AAFuC,+BAAjC,CAZlB;;AAAA;AAYKZ,8BAAAA,IAZL;AAAA,iEAgBQA,IAhBR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFM,GADgD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsBvD,SAvMO;AAwMFwC,QAAAA,oBAxME,gCAwMmB/C,OAxMnB,EAwMsD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA1BuB,oBAAAA,GAA0B,6EAApB;AAAEjB,sBAAAA,EAAE,EAAFA,EAAF;AAAMS,sBAAAA,UAAU,EAAVA;AAAN,qBAAoB;AAAA,uDACtDf,OAAO,CAACnC,KAAR,CAAcI,SAAd,CAAwBgC,OAAxB,CACN,sBADM,uEAEN;AAAA;AAAA;AAAA;AAAA;AAAA;AACOK,8BAAAA,EADP,GAC0BiB,GAD1B,CACOjB,EADP,EACWS,UADX,GAC0BQ,GAD1B,CACWR,UADX;AAAA;AAAA,qCAEiB1D,OAAO,CAACc,OAAR,GACdmE,GADc,GAEdlE,GAFc,CAEV,uBAFU,EAGdqD,IAHc,CAGT;AAAExC,gCAAAA,OAAO,EAAE;AAAEsD,kCAAAA,SAAS,EAAEjC,EAAb;AAAiBS,kCAAAA,UAAU,EAAVA;AAAjB;AAAX,+BAHS,EAId1C,IAJc,EAFjB;;AAAA;AAEKC,8BAAAA,GAFL;AAOKC,8BAAAA,KAPL,GAOaD,GAAG,CAACE,QAAJ,EAPb;AAQKS,8BAAAA,OARL,GAQeX,GAAG,CAACI,UAAJ,EARf;;AAAA,mCASKH,KATL;AAAA;AAAA;AAAA;;AAAA,oCAUQ,IAAII,KAAJ,CAAUJ,KAAV,CAVR;;AAAA;AAAA;AAAA,qCAYkByB,OAAO,CAACG,QAAR,CAAiB,cAAjB,EAAiC;AACjDG,gCAAAA,EAAE,EAAErB,OAAO,CAACsD,SADqC;AAEjDJ,gCAAAA,QAAQ,EAAE,kBAAC5B,IAAD;AAAA,yCAAUA,IAAI,CAACyC,aAAL,CAAmB/D,OAAO,CAAC8B,UAA3B,CAAV;AAAA;AAFuC,+BAAjC,CAZlB;;AAAA;AAYKR,8BAAAA,IAZL;AAAA,iEAgBQA,IAhBR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFM,GADsD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsB7D,SA9NO;AA+NF0C,QAAAA,sBA/NE,kCA+NqBjD,OA/NrB,EA+NyD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA3BuB,oBAAAA,GAA2B,6EAArB;AAAEjB,sBAAAA,EAAE,EAAFA,EAAF;AAAM4C,sBAAAA,WAAW,EAAXA;AAAN,qBAAqB;AAAA,uDACzDlD,OAAO,CAACnC,KAAR,CAAcI,SAAd,CAAwBgC,OAAxB,CACN,wBADM,uEAEN;AAAA;AAAA;AAAA;AAAA;AAAA;AACOK,8BAAAA,EADP,GAC2BiB,GAD3B,CACOjB,EADP,EACW4C,WADX,GAC2B3B,GAD3B,CACW2B,WADX;AAAA;AAAA,qCAEiB7F,OAAO,CAACc,OAAR,GACdmE,GADc,GAEdlE,GAFc,CAEV,wBAFU,EAGdqD,IAHc,CAGT;AAAExC,gCAAAA,OAAO,EAAE;AAAEsD,kCAAAA,SAAS,EAAEjC,EAAb;AAAiB4C,kCAAAA,WAAW,EAAXA;AAAjB;AAAX,+BAHS,EAId7E,IAJc,EAFjB;;AAAA;AAEKC,8BAAAA,GAFL;AAOKC,8BAAAA,KAPL,GAOaD,GAAG,CAACE,QAAJ,EAPb;AAQKS,8BAAAA,OARL,GAQeX,GAAG,CAACI,UAAJ,EARf;;AAAA,mCASKH,KATL;AAAA;AAAA;AAAA;;AAAA,oCAUQ,IAAII,KAAJ,CAAUJ,KAAV,CAVR;;AAAA;AAAA;AAAA,qCAYkByB,OAAO,CAACG,QAAR,CAAiB,cAAjB,EAAiC;AACjDG,gCAAAA,EAAE,EAAErB,OAAO,CAACsD,SADqC;AAEjDJ,gCAAAA,QAAQ,EAAE,kBAAC5B,IAAD,EAAU;AACnBA,kCAAAA,IAAI,CAAC4C,KAAL,CAAWD,WAAX,GAAyBjE,OAAO,CAACiE,WAAjC;AACA;AAJgD,+BAAjC,CAZlB;;AAAA;AAYK3C,8BAAAA,IAZL;AAAA,iEAkBQA,IAlBR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFM,GADyD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwBhE,SAvPO;AAwPF6C,QAAAA,oBAxPE,gCAwPmBpD,OAxPnB,EAwPwD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA5BuB,oBAAAA,GAA4B,gFAAtB;AAAEjB,sBAAAA,EAAE,EAAFA,EAAF;AAAM+C,sBAAAA,YAAY,EAAZA;AAAN,qBAAsB;AAAA,uDACxDrD,OAAO,CAACnC,KAAR,CAAcI,SAAd,CAAwBgC,OAAxB,CACN,sBADM,uEAEN;AAAA;AAAA;AAAA;AAAA;AAAA;AACOK,8BAAAA,EADP,GAC4BiB,GAD5B,CACOjB,EADP,EACW+C,YADX,GAC4B9B,GAD5B,CACW8B,YADX;AAAA;AAAA,qCAEiBhG,OAAO,CAACc,OAAR,GACdmE,GADc,GAEdlE,GAFc,CAEV,yBAFU,EAGdqD,IAHc,CAGT;AAAExC,gCAAAA,OAAO,EAAE;AAAEsD,kCAAAA,SAAS,EAAEjC,EAAb;AAAiB+C,kCAAAA,YAAY,EAAZA;AAAjB;AAAX,+BAHS,EAIdhF,IAJc,EAFjB;;AAAA;AAEKC,8BAAAA,GAFL;AAOKC,8BAAAA,KAPL,GAOaD,GAAG,CAACE,QAAJ,EAPb;AAQKS,8BAAAA,OARL,GAQeX,GAAG,CAACI,UAAJ,EARf;;AAAA,mCASKH,KATL;AAAA;AAAA;AAAA;;AAAA,oCAUQ,IAAII,KAAJ,CAAUJ,KAAV,CAVR;;AAAA;AAAA;AAAA,qCAYkByB,OAAO,CAACG,QAAR,CAAiB,cAAjB,EAAiC;AACjDG,gCAAAA,EAAE,EAAErB,OAAO,CAACsD,SADqC;AAEjDJ,gCAAAA,QAAQ,EAAE,kBAAC5B,IAAD,EAAU;AACnBA,kCAAAA,IAAI,CAAC4C,KAAL,CAAWE,YAAX,GAA0BpE,OAAO,CAACoE,YAAlC;AACA;AAJgD,+BAAjC,CAZlB;;AAAA;AAYK9C,8BAAAA,IAZL;AAAA,iEAkBQA,IAlBR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFM,GADwD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwB/D,SAhRO;AAiRF+C,QAAAA,eAjRE,2BAiRctD,OAjRd,EAiR4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAArBuB,oBAAAA,GAAqB,gFAAf;AAAEjB,sBAAAA,EAAE,EAAFA,EAAF;AAAMiD,sBAAAA,KAAK,EAALA;AAAN,qBAAe;AAAA,uDAC5CvD,OAAO,CAACnC,KAAR,CAAcI,SAAd,CAAwBgC,OAAxB,CACN,iBADM,uEAEN;AAAA;AAAA;AAAA;AAAA;AAAA;AACOK,8BAAAA,EADP,GACqBiB,GADrB,CACOjB,EADP,EACWiD,KADX,GACqBhC,GADrB,CACWgC,KADX;AAECA,8BAAAA,KAAK,GAAGrG,WAAW,CAAC0F,IAAZ,CAAiBW,KAAjB,CAAR;AAFD;AAAA,qCAIiBlG,OAAO,CAACc,OAAR,GACdmE,GADc,GAEdlE,GAFc,CAEV,kBAFU,EAGdqD,IAHc,CAGT;AAAExC,gCAAAA,OAAO,EAAE;AAAEsD,kCAAAA,SAAS,EAAEjC,EAAb;AAAiBiD,kCAAAA,KAAK,EAALA;AAAjB;AAAX,+BAHS,EAIdlF,IAJc,EAJjB;;AAAA;AAIKC,8BAAAA,GAJL;AASKC,8BAAAA,KATL,GASaD,GAAG,CAACE,QAAJ,EATb;AAUKS,8BAAAA,OAVL,GAUeX,GAAG,CAACI,UAAJ,EAVf;;AAAA,mCAWKH,KAXL;AAAA;AAAA;AAAA;;AAAA,oCAWkB,IAAII,KAAJ,CAAUJ,KAAV,CAXlB;;AAAA;AAAA;AAAA,qCAYkByB,OAAO,CAACG,QAAR,CAAiB,cAAjB,EAAiC;AACjDG,gCAAAA,EAAE,EAAErB,OAAO,CAACsD,SADqC;AAEjDJ,gCAAAA,QAAQ,EAAE,kBAAC5B,IAAD,EAAU;AACnBA,kCAAAA,IAAI,CAACiD,QAAL,CAAc;AACbC,oCAAAA,MAAM,EAAExE,OAAO,CAACsE,KAAR,CAAcE,MADT;AAEbC,oCAAAA,SAAS,EAAEzE,OAAO,CAACsE,KAAR,CAAcG;AAFZ,mCAAd;AAIA;AAPgD,+BAAjC,CAZlB;;AAAA;AAYKnD,8BAAAA,IAZL;AAAA,iEAqBQA,IArBR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFM,GAD4C;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2BnD,SA5SO;AA8SFoD,QAAAA,aA9SE,yBA8SY3D,OA9SZ,EA8S2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAtBuB,oBAAAA,GAAsB,gFAAhB;AAAEjB,sBAAAA,EAAE,EAAFA,EAAF;AAAMsD,sBAAAA,MAAM,EAANA;AAAN,qBAAgB;AAAA,uDAC3C5D,OAAO,CAACnC,KAAR,CAAcI,SAAd,CAAwBgC,OAAxB,CAAgC,eAAhC,uEAAiD;AAAA;AAAA;AAAA;AAAA;AAAA;AACjDK,8BAAAA,EADiD,GAClCiB,GADkC,CACjDjB,EADiD,EAC7CsD,MAD6C,GAClCrC,GADkC,CAC7CqC,MAD6C;AAAA;AAAA,qCAEvCvG,OAAO,CAACc,OAAR,GACdqD,IADc,GAEdpD,GAFc,CAEV,mBAFU,EAGdqD,IAHc,CAGT;AAAExC,gCAAAA,OAAO,EAAE;AAAEsD,kCAAAA,SAAS,EAAEjC,EAAb;AAAiBsD,kCAAAA,MAAM,EAANA;AAAjB;AAAX,+BAHS,EAIdvF,IAJc,EAFuC;;AAAA;AAEnDC,8BAAAA,GAFmD;AAOnDC,8BAAAA,KAPmD,GAO3CD,GAAG,CAACE,QAAJ,EAP2C;AAQnDS,8BAAAA,OARmD,GAQzCX,GAAG,CAACI,UAAJ,EARyC;;AAAA,mCASnDH,KATmD;AAAA;AAAA;AAAA;;AAAA,oCAStC,IAAII,KAAJ,CAAUJ,KAAV,CATsC;;AAAA;AAAA;AAAA,qCAUtCyB,OAAO,CAACG,QAAR,CAAiB,cAAjB,EAAiC;AACjDG,gCAAAA,EAAE,EAAErB,OAAO,CAACsD,SADqC;AAEjDJ,gCAAAA,QAAQ,EAAE,kBAAC5B,IAAD,EAAU;AACnBA,kCAAAA,IAAI,CAACsD,SAAL,CAAe5G,YAAY,CAAC2F,IAAb,CAAkB3D,OAAO,CAAC2E,MAA1B,CAAf;AACA;AAJgD,+BAAjC,CAVsC;;AAAA;AAUnDrD,8BAAAA,IAVmD;AAAA,iEAgBhDA,IAhBgD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAjD,GAD2C;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBlD,SAjUO;AAkUFuD,QAAAA,gBAlUE,4BAkUe9D,OAlUf,EAkU8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAtBuB,oBAAAA,GAAsB,gFAAhB;AAAEjB,sBAAAA,EAAE,EAAFA,EAAF;AAAMsD,sBAAAA,MAAM,EAANA;AAAN,qBAAgB;AAAA,uDAC9C5D,OAAO,CAACnC,KAAR,CAAcI,SAAd,CAAwBgC,OAAxB,CACN,kBADM,uEAEN;AAAA;AAAA;AAAA;AAAA;AAAA;AACOK,8BAAAA,EADP,GACsBiB,GADtB,CACOjB,EADP,EACWsD,MADX,GACsBrC,GADtB,CACWqC,MADX;AAAA;AAAA,qCAEiBvG,OAAO,CAACc,OAAR,GACd6D,MADc,GAEd5D,GAFc,CAEV,mBAFU,EAGdqD,IAHc,CAGT;AACLxC,gCAAAA,OAAO,EAAE;AACRsD,kCAAAA,SAAS,EAAEjC,EADH;AAERsD,kCAAAA,MAAM,EAAE3G,YAAY,CAAC2F,IAAb,CAAkBgB,MAAlB;AAFA;AADJ,+BAHS,EASdvF,IATc,EAFjB;;AAAA;AAEKC,8BAAAA,GAFL;AAYKC,8BAAAA,KAZL,GAYaD,GAAG,CAACE,QAAJ,EAZb;AAaKS,8BAAAA,OAbL,GAaeX,GAAG,CAACI,UAAJ,EAbf;;AAAA,mCAcKH,KAdL;AAAA;AAAA;AAAA;;AAAA,oCAckB,IAAII,KAAJ,CAAUJ,KAAV,CAdlB;;AAAA;AAAA;AAAA,qCAekByB,OAAO,CAACG,QAAR,CAAiB,cAAjB,EAAiC;AACjDG,gCAAAA,EAAE,EAAErB,OAAO,CAACsD,SADqC;AAEjDJ,gCAAAA,QAAQ,EAAE,kBAAC5B,IAAD;AAAA,yCAAUA,IAAI,CAACwD,YAAL,CAAkB9E,OAAO,CAAC2E,MAA1B,CAAV;AAAA;AAFuC,+BAAjC,CAflB;;AAAA;AAeKrD,8BAAAA,IAfL;AAAA,iEAmBQA,IAnBR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFM,GAD8C;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyBrD,SA3VO;AA6VFyD,QAAAA,WA7VE,uBA6VUhE,OA7VV,EA6VuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAApBuB,oBAAAA,GAAoB,gFAAd;AAAEjB,sBAAAA,EAAE,EAAFA,EAAF;AAAM2D,sBAAAA,IAAI,EAAJA;AAAN,qBAAc;AAAA,uDACvCjE,OAAO,CAACnC,KAAR,CAAcI,SAAd,CAAwBgC,OAAxB,CAAgC,aAAhC,uEAA+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAC/CK,8BAAAA,EAD+C,GAClCiB,GADkC,CAC/CjB,EAD+C,EAC3C2D,IAD2C,GAClC1C,GADkC,CAC3C0C,IAD2C;AAAA;AAAA,qCAErC5G,OAAO,CAACc,OAAR,GACdqD,IADc,GAEdpD,GAFc,CAEV,iBAFU,EAGdqD,IAHc,CAGT;AAAExC,gCAAAA,OAAO,EAAE;AAAEsD,kCAAAA,SAAS,EAAEjC,EAAb;AAAiB2D,kCAAAA,IAAI,EAAJA;AAAjB;AAAX,+BAHS,EAId5F,IAJc,EAFqC;;AAAA;AAEjDC,8BAAAA,GAFiD;AAOjDC,8BAAAA,KAPiD,GAOzCD,GAAG,CAACE,QAAJ,EAPyC;AAQjDS,8BAAAA,OARiD,GAQvCX,GAAG,CAACI,UAAJ,EARuC;;AAAA,mCASjDH,KATiD;AAAA;AAAA;AAAA;;AAAA,oCAU9C,IAAII,KAAJ,CAAUJ,KAAV,CAV8C;;AAAA;AAAA;AAAA,qCAYpCyB,OAAO,CAACG,QAAR,CAAiB,cAAjB,EAAiC;AACjDG,gCAAAA,EAAE,EAAErB,OAAO,CAACsD,SADqC;AAEjDJ,gCAAAA,QAAQ,EAAE,kBAAC5B,IAAD;AAAA,yCAAUA,IAAI,CAAC2D,OAAL,CAAajF,OAAO,CAACgF,IAArB,CAAV;AAAA;AAFuC,+BAAjC,CAZoC;;AAAA;AAYjD1D,8BAAAA,IAZiD;AAAA,iEAgB9CA,IAhB8C;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAA/C,GADuC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmB9C,SAhXO;AAiXF4D,QAAAA,cAjXE,0BAiXanE,OAjXb,EAiX0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAApBuB,oBAAAA,GAAoB,gFAAd;AAAEjB,sBAAAA,EAAE,EAAFA,EAAF;AAAM2D,sBAAAA,IAAI,EAAJA;AAAN,qBAAc;AAAA,uDAC1CjE,OAAO,CAACnC,KAAR,CAAcI,SAAd,CAAwBgC,OAAxB,CAAgC,gBAAhC,uEAAkD;AAAA;AAAA;AAAA;AAAA;AAAA;AAClDK,8BAAAA,EADkD,GACrCiB,GADqC,CAClDjB,EADkD,EAC9C2D,IAD8C,GACrC1C,GADqC,CAC9C0C,IAD8C;AAAA;AAAA,qCAExC5G,OAAO,CAACc,OAAR,GACd6D,MADc,GAEd5D,GAFc,CAEV,iBAFU,EAGdqD,IAHc,CAGT;AAAExC,gCAAAA,OAAO,EAAE;AAAEsD,kCAAAA,SAAS,EAAEjC,EAAb;AAAiB2D,kCAAAA,IAAI,EAAJA;AAAjB;AAAX,+BAHS,EAId5F,IAJc,EAFwC;;AAAA;AAEpDC,8BAAAA,GAFoD;AAOpDC,8BAAAA,KAPoD,GAO5CD,GAAG,CAACE,QAAJ,EAP4C;AAQpDS,8BAAAA,OARoD,GAQ1CX,GAAG,CAACI,UAAJ,EAR0C;;AAAA,mCASpDH,KAToD;AAAA;AAAA;AAAA;;AAAA,oCAUjD,IAAII,KAAJ,CAAUJ,KAAV,CAViD;;AAAA;AAAA;AAAA,qCAYvCyB,OAAO,CAACG,QAAR,CAAiB,cAAjB,EAAiC;AACjDG,gCAAAA,EAAE,EAAErB,OAAO,CAACsD,SADqC;AAEjDJ,gCAAAA,QAAQ,EAAE,kBAAC5B,IAAD;AAAA,yCAAUA,IAAI,CAAC6D,UAAL,CAAgBnF,OAAO,CAACgF,IAAxB,CAAV;AAAA;AAFuC,+BAAjC,CAZuC;;AAAA;AAYpD1D,8BAAAA,IAZoD;AAAA,iEAgBjDA,IAhBiD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAlD,GAD0C;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBjD,SApYO;AAsYF8D,QAAAA,oBAtYE,gCAsYmBrE,OAtYnB,EAsYyD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA7BuB,oBAAAA,GAA6B,gFAAvB;AAAEjB,sBAAAA,EAAE,EAAFA,EAAF;AAAMgE,sBAAAA,aAAa,EAAbA;AAAN,qBAAuB;AAAA,uDACzDtE,OAAO,CAACnC,KAAR,CAAcI,SAAd,CAAwBgC,OAAxB,CACN,sBADM,uEAEN;AAAA;AAAA;AAAA;AAAA;AAAA;AACOK,8BAAAA,EADP,GAC6BiB,GAD7B,CACOjB,EADP,EACWgE,aADX,GAC6B/C,GAD7B,CACW+C,aADX;AAAA;AAAA,qCAEiBjH,OAAO,CAACc,OAAR,GACdqD,IADc,GAEdpD,GAFc,CAEV,0BAFU,EAGdqD,IAHc,CAGT;AAAExC,gCAAAA,OAAO,EAAE;AAAEsD,kCAAAA,SAAS,EAAEjC,EAAb;AAAiBgE,kCAAAA,aAAa,EAAbA;AAAjB;AAAX,+BAHS,EAIdjG,IAJc,EAFjB;;AAAA;AAEKC,8BAAAA,GAFL;AAOKC,8BAAAA,KAPL,GAOaD,GAAG,CAACE,QAAJ,EAPb;AAQKS,8BAAAA,OARL,GAQeX,GAAG,CAACI,UAAJ,EARf;;AAAA,mCASKH,KATL;AAAA;AAAA;AAAA;;AAAA,oCASkB,IAAII,KAAJ,CAAUJ,KAAV,CATlB;;AAAA;AAAA;AAAA,qCAUkByB,OAAO,CAACG,QAAR,CAAiB,cAAjB,EAAiC;AACjDG,gCAAAA,EAAE,EAAErB,OAAO,CAACsD,SADqC;AAEjDJ,gCAAAA,QAFiD,oBAExC5B,IAFwC,EAElC;AACdA,kCAAAA,IAAI,CAACgE,gBAAL,CAAsBtF,OAAO,CAACqF,aAA9B;AACA;AAJgD,+BAAjC,CAVlB;;AAAA;AAUK/D,8BAAAA,IAVL;AAAA,iEAgBQA,IAhBR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFM,GADyD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsBhE,SA5ZO;AA6ZFiE,QAAAA,uBA7ZE,mCA6ZsBxE,OA7ZtB,EA6Z4D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA7BuB,oBAAAA,GAA6B,gFAAvB;AAAEjB,sBAAAA,EAAE,EAAFA,EAAF;AAAMgE,sBAAAA,aAAa,EAAbA;AAAN,qBAAuB;AAAA,uDAC5DtE,OAAO,CAACnC,KAAR,CAAcI,SAAd,CAAwBgC,OAAxB,CACN,yBADM,uEAEN;AAAA;AAAA;AAAA;AAAA;AAAA;AACOK,8BAAAA,EADP,GAC6BiB,GAD7B,CACOjB,EADP,EACWgE,aADX,GAC6B/C,GAD7B,CACW+C,aADX;AAECA,8BAAAA,aAAa,GACZA,aAAa,YAAY1H,kBAAzB,GACG0H,aAAa,CAACG,MAAd,EADH,GAEGH,aAHJ;AAIAA,8BAAAA,aAAa,CAACI,IAAd,GAAqBJ,aAAa,CAACK,GAAnC;AAND;AAAA,qCAOiBtH,OAAO,CAACc,OAAR,GACd6D,MADc,GAEd5D,GAFc,CAEV,0BAFU,EAGdqD,IAHc,CAGT;AAAExC,gCAAAA,OAAO,EAAE;AAAEsD,kCAAAA,SAAS,EAAEjC,EAAb;AAAiBgE,kCAAAA,aAAa,EAAbA;AAAjB;AAAX,+BAHS,EAIdjG,IAJc,EAPjB;;AAAA;AAOKC,8BAAAA,GAPL;AAYKC,8BAAAA,KAZL,GAYaD,GAAG,CAACE,QAAJ,EAZb;AAaKS,8BAAAA,OAbL,GAaeX,GAAG,CAACI,UAAJ,EAbf;;AAAA,mCAcKH,KAdL;AAAA;AAAA;AAAA;;AAAA,oCAckB,IAAII,KAAJ,CAAUJ,KAAV,CAdlB;;AAAA;AAAA;AAAA,qCAekByB,OAAO,CAACG,QAAR,CAAiB,cAAjB,EAAiC;AACjDG,gCAAAA,EAAE,EAAErB,OAAO,CAACsD,SADqC;AAEjDJ,gCAAAA,QAFiD,oBAExC5B,IAFwC,EAElC;AACdA,kCAAAA,IAAI,CAACqE,mBAAL,CAAyB3F,OAAO,CAACqF,aAAjC;AACA;AAJgD,+BAAjC,CAflB;;AAAA;AAeK/D,8BAAAA,IAfL;AAAA,iEAqBQA,IArBR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFM,GAD4D;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2BnE,SAxbO;AAybFsE,QAAAA,wBAzbE,oCAybuB7E,OAzbvB,EAyb8D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA9BuB,oBAAAA,GAA8B,gFAAxB;AAAEjB,sBAAAA,EAAE,EAAFA,EAAF;AAAMwE,sBAAAA,cAAc,EAAdA;AAAN,qBAAwB;AAAA,uDAC9D9E,OAAO,CAACnC,KAAR,CAAcI,SAAd,CAAwBgC,OAAxB,CACN,0BADM,uEAEN;AAAA;AAAA;AAAA;AAAA;AAAA;AACOK,8BAAAA,EADP,GAC8BiB,GAD9B,CACOjB,EADP,EACWwE,cADX,GAC8BvD,GAD9B,CACWuD,cADX;AAAA;AAAA,qCAEiBzH,OAAO,CAACc,OAAR,GACdmE,GADc,GAEdlE,GAFc,CAEV,8BAFU,EAGdqD,IAHc,CAGT;AAAExC,gCAAAA,OAAO,EAAE;AAAEsD,kCAAAA,SAAS,EAAEjC,EAAb;AAAiBwE,kCAAAA,cAAc,EAAdA;AAAjB;AAAX,+BAHS,EAIdzG,IAJc,EAFjB;;AAAA;AAEKC,8BAAAA,GAFL;AAOKC,8BAAAA,KAPL,GAOaD,GAAG,CAACE,QAAJ,EAPb;AAQKS,8BAAAA,OARL,GAQeX,GAAG,CAACI,UAAJ,EARf;;AAAA,mCASKH,KATL;AAAA;AAAA;AAAA;;AAAA,oCASkB,IAAII,KAAJ,CAAUJ,KAAV,CATlB;;AAAA;AAAA;AAAA,qCAUkByB,OAAO,CAACG,QAAR,CAAiB,cAAjB,EAAiC;AACjDG,gCAAAA,EAAE,EAAErB,OAAO,CAACsD,SADqC;AAEjDJ,gCAAAA,QAFiD,oBAExC5B,IAFwC,EAElC;AACdA,kCAAAA,IAAI,CAACwE,iBAAL,CAAuB9F,OAAO,CAAC6F,cAA/B;AACA;AAJgD,+BAAjC,CAVlB;;AAAA;AAUKvE,8BAAAA,IAVL;AAAA,iEAgBQA,IAhBR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFM,GAD8D;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsBrE,SA/cO;AAidFyE,QAAAA,YAjdE,wBAidWhF,OAjdX,EAid6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAzBuB,oBAAAA,GAAyB,gFAAnB;AAAEjB,sBAAAA,EAAE,EAAFA,EAAF;AAAM2E,sBAAAA,SAAS,EAATA;AAAN,qBAAmB;AAAA,uDAC7CjF,OAAO,CAACnC,KAAR,CAAcI,SAAd,CAAwBgC,OAAxB,CAAgC,cAAhC,uEAAgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAChDK,8BAAAA,EADgD,GAC9BiB,GAD8B,CAChDjB,EADgD,EAC5C2E,SAD4C,GAC9B1D,GAD8B,CAC5C0D,SAD4C;AAEhDC,8BAAAA,aAFgD,GAEhC,IAAIC,QAAJ,EAFgC;AAGtDD,8BAAAA,aAAa,CAACE,MAAd,CAAqBH,SAAS,CAACI,IAA/B,EAAqCJ,SAArC;AAHsD;AAAA,qCAItC5H,OAAO,CAACiI,KAAR,CAAc;AAC7BC,gCAAAA,MAAM,EAAE,MADqB;AAE7BnH,gCAAAA,GAAG,yBAAkBkC,EAAlB,YAF0B;AAG7BmB,gCAAAA,IAAI,EAAEyD;AAHuB,+BAAd,CAJsC;;AAAA;AAIlD5G,8BAAAA,GAJkD;;AAAA,mCASlDA,GAAG,CAACC,KAT8C;AAAA;AAAA;AAAA;;AAAA,oCASjC,IAAII,KAAJ,CAAUL,GAAG,CAACC,KAAd,CATiC;;AAAA;AAUhDU,8BAAAA,OAVgD,GAUpCX,GAVoC,CAUhDW,OAVgD;AAAA;AAAA,qCAWrCe,OAAO,CAACG,QAAR,CAAiB,cAAjB,EAAiC;AACjDG,gCAAAA,EAAE,EAAErB,OAAO,CAACsD,SADqC;AAEjDJ,gCAAAA,QAFiD,oBAExC5B,IAFwC,EAElC;AACdA,kCAAAA,IAAI,CAACiF,SAAL,CAAevG,OAAO,CAACwG,MAAvB;AACA;AAJgD,+BAAjC,CAXqC;;AAAA;AAWlDlF,8BAAAA,IAXkD;AAAA,iEAiB/CA,IAjB+C;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAhD,GAD6C;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBpD,SAreO;AAseFmF,QAAAA,eAteE,2BAsec1F,OAted,EAse4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAArBuB,oBAAAA,GAAqB,gFAAf;AAAEjB,sBAAAA,EAAE,EAAFA,EAAF;AAAMqF,sBAAAA,KAAK,EAALA;AAAN,qBAAe;AAAA,uDAC5C3F,OAAO,CAACnC,KAAR,CAAcI,SAAd,CAAwBgC,OAAxB,CACN,iBADM,uEAEN;AAAA;AAAA;AAAA;AAAA;AAAA;AACOK,8BAAAA,EADP,GACqBiB,GADrB,CACOjB,EADP,EACWqF,KADX,GACqBpE,GADrB,CACWoE,KADX;AAECA,8BAAAA,KAAK,GAAGA,KAAK,YAAY9I,KAAjB,GAAyB8I,KAAK,CAAClB,MAAN,EAAzB,GAA0CkB,KAAlD;AAFD;AAAA,qCAGiBtI,OAAO,CAACc,OAAR,GACd6D,MADc,GAEd5D,GAFc,wBAEMkC,EAFN,cAGdmB,IAHc,CAGT;AAAExC,gCAAAA,OAAO,EAAE;AAAE0G,kCAAAA,KAAK,EAALA;AAAF;AAAX,+BAHS,EAIdtH,IAJc,EAHjB;;AAAA;AAGKC,8BAAAA,GAHL;AAQKC,8BAAAA,KARL,GAQaD,GAAG,CAACE,QAAJ,EARb;AASKS,8BAAAA,OATL,GASeX,GAAG,CAACI,UAAJ,EATf;;AAAA,mCAUKH,KAVL;AAAA;AAAA;AAAA;;AAAA,oCAUkB,IAAII,KAAJ,CAAUJ,KAAV,CAVlB;;AAAA;AAAA;AAAA,qCAWkByB,OAAO,CAACG,QAAR,CAAiB,cAAjB,EAAiC;AACjDG,gCAAAA,EAAE,EAAErB,OAAO,CAACsD,SADqC;AAEjDJ,gCAAAA,QAFiD,oBAExC5B,IAFwC,EAElC;AACdA,kCAAAA,IAAI,CAACqF,WAAL,CAAiB3G,OAAO,CAAC0G,KAAzB;AACA;AAJgD,+BAAjC,CAXlB;;AAAA;AAWKpF,8BAAAA,IAXL;AAAA,iEAiBQA,IAjBR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFM,GAD4C;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuBnD;AA7fO;AAjC0B,KAAf,CAArB;AAkiBA,WAAO5C,YAAP;AACA;AAviBa,CAAf","sourcesContent":["import Product from \"../items/Product.js\";\r\nimport ProductSpecContent from \"../items/ProductSpecContent.js\";\r\nimport Image from \"../items/Image.js\";\r\n\r\nimport DataLoader from \"./tools/DataLoader\";\r\nimport CollectionUpdater from \"./tools/CollectionUpdater\";\r\nimport Processor from \"./tools/Processor.js\";\r\n\r\nimport ModuleBundle from \"../../../express/data_structures/ProductBundle.js\";\r\nimport ModulePrice from \"../../../express/data_structures/ProductPrice.js\";\r\nimport Category from \"@/items/Category.js\";\r\n\r\nimport Vuex from \"vuex\";\r\nimport ApiHost from \"@/host/ApiHost.js\";\r\nimport U from \"@/U.js\";\r\n\r\nexport default {\r\n\tinit(Stores) {\r\n\t\tconst categoryStore = Stores.category;\r\n\r\n\t\tconst productStore = new Vuex.Store({\r\n\t\t\tstate: {\r\n\t\t\t\tlastModified: 0,\r\n\t\t\t\tdataLoader: new DataLoader({ timeout: 1000 * 60 * 10 }) // 10min\r\n\t\t\t\t\t.processor(() => productStore.state.processor)\r\n\t\t\t\t\t.loadData(async () => {\r\n\t\t\t\t\t\tconst api = await ApiHost.request().url(\"productv2/list/\").send();\r\n\t\t\t\t\t\tconst error = api.getError();\r\n\t\t\t\t\t\tconst contents = api.getContent();\r\n\t\t\t\t\t\tif (error) throw new Error(error);\r\n\t\t\t\t\t\tif (!Array.isArray(contents))\r\n\t\t\t\t\t\t\tthrow new Error(\"content is not array\");\r\n\t\t\t\t\t\treturn Promise.all(\r\n\t\t\t\t\t\t\tcontents.map((content) => new Product(Stores).fromData(content)),\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.setData((data) => {\r\n\t\t\t\t\t\tproductStore.commit(\"items\", Array.isArray(data) ? data : []);\r\n\t\t\t\t\t\tproductStore.commit(\"lastModified\", Date.now());\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.getData(() => productStore.getters.items),\r\n\t\t\t\titems: [],\r\n\t\t\t\tprocessor: new Processor(),\r\n\t\t\t},\r\n\t\t\tmutations: {\r\n\t\t\t\tlastModified: (state, time) => (state.lastModified = time),\r\n\t\t\t\titems: (state, items) => (state.items = items),\r\n\t\t\t},\r\n\t\t\tgetters: {\r\n\t\t\t\tlastModified: (state) => state.lastModified,\r\n\t\t\t\tisLoading: (state) => state.processor.isLoading(),\r\n\t\t\t\titems: (state) => state.items,\r\n\t\t\t},\r\n\t\t\tactions: {\r\n\t\t\t\tasync refresh(context) {\r\n\t\t\t\t\treturn await context.state.processor.acquire(\"refresh\", async () => {\r\n\t\t\t\t\t\tcontext.state.dataLoader.doTimeout();\r\n\t\t\t\t\t\tawait context.dispatch(\"getItems\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\r\n\t\t\t\tasync getItems(context) {\r\n\t\t\t\t\treturn context.state.processor.acquire(\"getItems\", async () => {\r\n\t\t\t\t\t\treturn context.state.dataLoader.data();\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t\tasync getItemOfId(context, id = \"\") {\r\n\t\t\t\t\treturn context.state.processor.acquire(\"getItemOfId\", async () => {\r\n\t\t\t\t\t\tlet items = await context.dispatch(\"getItems\");\r\n\t\t\t\t\t\tlet item = items.find((item) => item.id === id);\r\n\t\t\t\t\t\tif (!item) {\r\n\t\t\t\t\t\t\titems = await context.dispatch(\"refreshItems\");\r\n\t\t\t\t\t\t\titem = items.find((item) => item.id === id);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\r\n\t\t\t\tasync getGroupsByCategory(context) {\r\n\t\t\t\t\tconst items = await context.dispatch(\"getItems\");\r\n\r\n\t\t\t\t\tconst categoryOther = await categoryStore.dispatch(\r\n\t\t\t\t\t\t\"getItemOfKey\",\r\n\t\t\t\t\t\tCategory.Key.Other,\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tconst groups = [];\r\n\t\t\t\t\tfor (const item of items) {\r\n\t\t\t\t\t\tlet category = await item.fetchCategory();\r\n\t\t\t\t\t\tif (!category) category = categoryOther;\r\n\t\t\t\t\t\tlet categoryId = category ? category.id : \"\";\r\n\r\n\t\t\t\t\t\tlet group = groups.find((group) => {\r\n\t\t\t\t\t\t\treturn group.category.id === categoryId;\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif (!group) {\r\n\t\t\t\t\t\t\tgroups.push((group = { category, items: [] }));\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tgroup.items.push(item);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn groups;\r\n\t\t\t\t},\r\n\t\t\t\tasync getGroupsByBrand(context) {\r\n\t\t\t\t\tconst items = await context.dispatch(\"getItems\");\r\n\r\n\t\t\t\t\tconst groups = [];\r\n\t\t\t\t\tfor (const item of items) {\r\n\t\t\t\t\t\tlet group = groups.find((group) => {\r\n\t\t\t\t\t\t\tconst brandId = group.brand ? group.brand.id : \"\";\r\n\t\t\t\t\t\t\treturn brandId === item.brandId;\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tlet brand = await item.fetchBrand();\r\n\t\t\t\t\t\tif (!group) {\r\n\t\t\t\t\t\t\tgroups.push((group = { brand, items: [] }));\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tgroup.items.push(item);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn groups;\r\n\t\t\t\t},\r\n\r\n\t\t\t\tasync addItem(context, arg = { data }) {\r\n\t\t\t\t\treturn context.state.processor\r\n\t\t\t\t\t\t.acquire(\"addItem\", async () => {\r\n\t\t\t\t\t\t\tlet { data } = arg;\r\n\t\t\t\t\t\t\tif (!data) throw new Error(\"data not valid\");\r\n\t\t\t\t\t\t\tlet api = await ApiHost.request()\r\n\t\t\t\t\t\t\t\t.POST()\r\n\t\t\t\t\t\t\t\t.url(\"productv2/\")\r\n\t\t\t\t\t\t\t\t.body({ content: data })\r\n\t\t\t\t\t\t\t\t.send();\r\n\t\t\t\t\t\t\tlet error = api.getError();\r\n\t\t\t\t\t\t\tlet content = api.getContent();\r\n\t\t\t\t\t\t\tif (error) throw new Error(error);\r\n\t\t\t\t\t\t\tlet productNew = new Product(Stores).fromData(content);\r\n\t\t\t\t\t\t\tlet item = new CollectionUpdater(context)\r\n\t\t\t\t\t\t\t\t.onId((item) => item.id)\r\n\t\t\t\t\t\t\t\t.getItem(productNew);\r\n\t\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch((error) => {\r\n\t\t\t\t\t\t\tconsole.error(error);\r\n\t\t\t\t\t\t\tthrow error;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t\tasync removeItemOfId(context, arg = { id }) {\r\n\t\t\t\t\treturn context.state.processor.acquire(\"removeItemOfId\", async () => {\r\n\t\t\t\t\t\tlet { id } = arg;\r\n\t\t\t\t\t\tlet api = await ApiHost.request()\r\n\t\t\t\t\t\t\t.DELETE()\r\n\t\t\t\t\t\t\t.url(`productv2/id/${id}`)\r\n\t\t\t\t\t\t\t.body({ id })\r\n\t\t\t\t\t\t\t.send();\r\n\t\t\t\t\t\tlet error = api.getError();\r\n\t\t\t\t\t\tif (error) throw new Error(error);\r\n\t\t\t\t\t\tlet items = context.state.items.filter((item) => {\r\n\t\t\t\t\t\t\treturn item.id !== id;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tcontext.commit(\"items\", items);\r\n\t\t\t\t\t\tcontext.commit(\"lastModified\", Date.now());\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\r\n\t\t\t\tasync onUpdateItem(context, arg = { id, callback }) {\r\n\t\t\t\t\treturn context.state.processor.acquire(\"onUpdateItem\", async () => {\r\n\t\t\t\t\t\tlet { id, callback } = arg;\r\n\t\t\t\t\t\tlet item = await context.dispatch(\"getItemOfId\", id);\r\n\t\t\t\t\t\tif (item) callback(item);\r\n\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\r\n\t\t\t\tasync updateTitleOfId(context, arg = { id, title }) {\r\n\t\t\t\t\treturn context.state.processor.acquire(\r\n\t\t\t\t\t\t\"updateTitleOfId\",\r\n\t\t\t\t\t\tasync () => {\r\n\t\t\t\t\t\t\tlet { id, title } = arg;\r\n\t\t\t\t\t\t\tlet api = await ApiHost.request()\r\n\t\t\t\t\t\t\t\t.PUT()\r\n\t\t\t\t\t\t\t\t.url(\"productv2/title/\")\r\n\t\t\t\t\t\t\t\t.body({ content: { productId: id, title } })\r\n\t\t\t\t\t\t\t\t.send();\r\n\t\t\t\t\t\t\tlet error = api.getError();\r\n\t\t\t\t\t\t\tlet content = api.getContent();\r\n\t\t\t\t\t\t\tif (error) {\r\n\t\t\t\t\t\t\t\tthrow new Error(error);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tlet item = await context.dispatch(\"onUpdateItem\", {\r\n\t\t\t\t\t\t\t\tid: content.productId,\r\n\t\t\t\t\t\t\t\tcallback: (item) => {\r\n\t\t\t\t\t\t\t\t\titem.title = U.optString(content.title);\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t\tasync updateDescriptionOfId(context, arg = { id, description }) {\r\n\t\t\t\t\treturn context.state.processor.acquire(\r\n\t\t\t\t\t\t\"updateDescriptionOfId\",\r\n\t\t\t\t\t\tasync () => {\r\n\t\t\t\t\t\t\tlet { id, description } = arg;\r\n\t\t\t\t\t\t\tlet api = await ApiHost.request()\r\n\t\t\t\t\t\t\t\t.PUT()\r\n\t\t\t\t\t\t\t\t.url(\"productv2/description/\")\r\n\t\t\t\t\t\t\t\t.body({ content: { productId: id, description } })\r\n\t\t\t\t\t\t\t\t.send();\r\n\t\t\t\t\t\t\tlet error = api.getError();\r\n\t\t\t\t\t\t\tlet content = api.getContent();\r\n\t\t\t\t\t\t\tif (error) {\r\n\t\t\t\t\t\t\t\tthrow new Error(error);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tlet item = await context.dispatch(\"onUpdateItem\", {\r\n\t\t\t\t\t\t\t\tid: content.productId,\r\n\t\t\t\t\t\t\t\tcallback: (item) => {\r\n\t\t\t\t\t\t\t\t\titem.description = U.isString(content.description)\r\n\t\t\t\t\t\t\t\t\t\t? content.description.trim()\r\n\t\t\t\t\t\t\t\t\t\t: \"\";\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t\tasync updateBrandIdOfId(context, arg = { id, brandId }) {\r\n\t\t\t\t\treturn context.state.processor.acquire(\r\n\t\t\t\t\t\t\"updateBrandIdOfId\",\r\n\t\t\t\t\t\tasync () => {\r\n\t\t\t\t\t\t\tlet { id, brandId } = arg;\r\n\t\t\t\t\t\t\tlet api = await ApiHost.request()\r\n\t\t\t\t\t\t\t\t.PUT()\r\n\t\t\t\t\t\t\t\t.url(\"productv2/brandId/\")\r\n\t\t\t\t\t\t\t\t.body({ content: { productId: id, brandId } })\r\n\t\t\t\t\t\t\t\t.send();\r\n\t\t\t\t\t\t\tlet error = api.getError();\r\n\t\t\t\t\t\t\tlet content = api.getContent();\r\n\t\t\t\t\t\t\tif (error) {\r\n\t\t\t\t\t\t\t\tthrow new Error(error);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tlet item = await context.dispatch(\"onUpdateItem\", {\r\n\t\t\t\t\t\t\t\tid: content.productId,\r\n\t\t\t\t\t\t\t\tcallback: (item) => item.setBrandId(content.brandId),\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t\tasync updateCategoryIdOfId(context, arg = { id, categoryId }) {\r\n\t\t\t\t\treturn context.state.processor.acquire(\r\n\t\t\t\t\t\t\"updateCategoryIdOfId\",\r\n\t\t\t\t\t\tasync () => {\r\n\t\t\t\t\t\t\tlet { id, categoryId } = arg;\r\n\t\t\t\t\t\t\tlet api = await ApiHost.request()\r\n\t\t\t\t\t\t\t\t.PUT()\r\n\t\t\t\t\t\t\t\t.url(\"productv2/categoryId/\")\r\n\t\t\t\t\t\t\t\t.body({ content: { productId: id, categoryId } })\r\n\t\t\t\t\t\t\t\t.send();\r\n\t\t\t\t\t\t\tlet error = api.getError();\r\n\t\t\t\t\t\t\tlet content = api.getContent();\r\n\t\t\t\t\t\t\tif (error) {\r\n\t\t\t\t\t\t\t\tthrow new Error(error);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tlet item = await context.dispatch(\"onUpdateItem\", {\r\n\t\t\t\t\t\t\t\tid: content.productId,\r\n\t\t\t\t\t\t\t\tcallback: (item) => item.setCategoryId(content.categoryId),\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t\tasync updateAvailabilityOfId(context, arg = { id, isAvailable }) {\r\n\t\t\t\t\treturn context.state.processor.acquire(\r\n\t\t\t\t\t\t\"updateAvailabilityOfId\",\r\n\t\t\t\t\t\tasync () => {\r\n\t\t\t\t\t\t\tlet { id, isAvailable } = arg;\r\n\t\t\t\t\t\t\tlet api = await ApiHost.request()\r\n\t\t\t\t\t\t\t\t.PUT()\r\n\t\t\t\t\t\t\t\t.url(\"productv2/isAvailable/\")\r\n\t\t\t\t\t\t\t\t.body({ content: { productId: id, isAvailable } })\r\n\t\t\t\t\t\t\t\t.send();\r\n\t\t\t\t\t\t\tlet error = api.getError();\r\n\t\t\t\t\t\t\tlet content = api.getContent();\r\n\t\t\t\t\t\t\tif (error) {\r\n\t\t\t\t\t\t\t\tthrow new Error(error);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tlet item = await context.dispatch(\"onUpdateItem\", {\r\n\t\t\t\t\t\t\t\tid: content.productId,\r\n\t\t\t\t\t\t\t\tcallback: (item) => {\r\n\t\t\t\t\t\t\t\t\titem.stock.isAvailable = content.isAvailable;\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t\tasync updateSecondHandOfId(context, arg = { id, isSecondHand }) {\r\n\t\t\t\t\treturn context.state.processor.acquire(\r\n\t\t\t\t\t\t\"updateSecondHandOfId\",\r\n\t\t\t\t\t\tasync () => {\r\n\t\t\t\t\t\t\tlet { id, isSecondHand } = arg;\r\n\t\t\t\t\t\t\tlet api = await ApiHost.request()\r\n\t\t\t\t\t\t\t\t.PUT()\r\n\t\t\t\t\t\t\t\t.url(\"productv2/isSecondHand/\")\r\n\t\t\t\t\t\t\t\t.body({ content: { productId: id, isSecondHand } })\r\n\t\t\t\t\t\t\t\t.send();\r\n\t\t\t\t\t\t\tlet error = api.getError();\r\n\t\t\t\t\t\t\tlet content = api.getContent();\r\n\t\t\t\t\t\t\tif (error) {\r\n\t\t\t\t\t\t\t\tthrow new Error(error);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tlet item = await context.dispatch(\"onUpdateItem\", {\r\n\t\t\t\t\t\t\t\tid: content.productId,\r\n\t\t\t\t\t\t\t\tcallback: (item) => {\r\n\t\t\t\t\t\t\t\t\titem.stock.isSecondHand = content.isSecondHand;\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t\tasync updatePriceOfId(context, arg = { id, price }) {\r\n\t\t\t\t\treturn context.state.processor.acquire(\r\n\t\t\t\t\t\t\"updatePriceOfId\",\r\n\t\t\t\t\t\tasync () => {\r\n\t\t\t\t\t\t\tlet { id, price } = arg;\r\n\t\t\t\t\t\t\tprice = ModulePrice.trim(price);\r\n\r\n\t\t\t\t\t\t\tlet api = await ApiHost.request()\r\n\t\t\t\t\t\t\t\t.PUT()\r\n\t\t\t\t\t\t\t\t.url(\"productv2/price/\")\r\n\t\t\t\t\t\t\t\t.body({ content: { productId: id, price } })\r\n\t\t\t\t\t\t\t\t.send();\r\n\t\t\t\t\t\t\tlet error = api.getError();\r\n\t\t\t\t\t\t\tlet content = api.getContent();\r\n\t\t\t\t\t\t\tif (error) throw new Error(error);\r\n\t\t\t\t\t\t\tlet item = await context.dispatch(\"onUpdateItem\", {\r\n\t\t\t\t\t\t\t\tid: content.productId,\r\n\t\t\t\t\t\t\t\tcallback: (item) => {\r\n\t\t\t\t\t\t\t\t\titem.setPrice({\r\n\t\t\t\t\t\t\t\t\t\tnormal: content.price.normal,\r\n\t\t\t\t\t\t\t\t\t\tpromotion: content.price.promotion,\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\r\n\t\t\t\tasync addBundleOfId(context, arg = { id, bundle }) {\r\n\t\t\t\t\treturn context.state.processor.acquire(\"addBundleOfId\", async () => {\r\n\t\t\t\t\t\tlet { id, bundle } = arg;\r\n\t\t\t\t\t\tlet api = await ApiHost.request()\r\n\t\t\t\t\t\t\t.POST()\r\n\t\t\t\t\t\t\t.url(\"productv2/bundle/\")\r\n\t\t\t\t\t\t\t.body({ content: { productId: id, bundle } })\r\n\t\t\t\t\t\t\t.send();\r\n\t\t\t\t\t\tlet error = api.getError();\r\n\t\t\t\t\t\tlet content = api.getContent();\r\n\t\t\t\t\t\tif (error) throw new Error(error);\r\n\t\t\t\t\t\tlet item = await context.dispatch(\"onUpdateItem\", {\r\n\t\t\t\t\t\t\tid: content.productId,\r\n\t\t\t\t\t\t\tcallback: (item) => {\r\n\t\t\t\t\t\t\t\titem.addBundle(ModuleBundle.trim(content.bundle));\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t\tasync removeBundleOfId(context, arg = { id, bundle }) {\r\n\t\t\t\t\treturn context.state.processor.acquire(\r\n\t\t\t\t\t\t\"removeBundleOfId\",\r\n\t\t\t\t\t\tasync () => {\r\n\t\t\t\t\t\t\tlet { id, bundle } = arg;\r\n\t\t\t\t\t\t\tlet api = await ApiHost.request()\r\n\t\t\t\t\t\t\t\t.DELETE()\r\n\t\t\t\t\t\t\t\t.url(\"productv2/bundle/\")\r\n\t\t\t\t\t\t\t\t.body({\r\n\t\t\t\t\t\t\t\t\tcontent: {\r\n\t\t\t\t\t\t\t\t\t\tproductId: id,\r\n\t\t\t\t\t\t\t\t\t\tbundle: ModuleBundle.trim(bundle),\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t.send();\r\n\t\t\t\t\t\t\tlet error = api.getError();\r\n\t\t\t\t\t\t\tlet content = api.getContent();\r\n\t\t\t\t\t\t\tif (error) throw new Error(error);\r\n\t\t\t\t\t\t\tlet item = await context.dispatch(\"onUpdateItem\", {\r\n\t\t\t\t\t\t\t\tid: content.productId,\r\n\t\t\t\t\t\t\t\tcallback: (item) => item.removeBundle(content.bundle),\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\r\n\t\t\t\tasync addGiftOfId(context, arg = { id, gift }) {\r\n\t\t\t\t\treturn context.state.processor.acquire(\"addGiftOfId\", async () => {\r\n\t\t\t\t\t\tlet { id, gift } = arg;\r\n\t\t\t\t\t\tlet api = await ApiHost.request()\r\n\t\t\t\t\t\t\t.POST()\r\n\t\t\t\t\t\t\t.url(\"productv2/gift/\")\r\n\t\t\t\t\t\t\t.body({ content: { productId: id, gift } })\r\n\t\t\t\t\t\t\t.send();\r\n\t\t\t\t\t\tlet error = api.getError();\r\n\t\t\t\t\t\tlet content = api.getContent();\r\n\t\t\t\t\t\tif (error) {\r\n\t\t\t\t\t\t\tthrow new Error(error);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlet item = await context.dispatch(\"onUpdateItem\", {\r\n\t\t\t\t\t\t\tid: content.productId,\r\n\t\t\t\t\t\t\tcallback: (item) => item.addGift(content.gift),\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t\tasync removeGiftOfId(context, arg = { id, gift }) {\r\n\t\t\t\t\treturn context.state.processor.acquire(\"removeGiftOfId\", async () => {\r\n\t\t\t\t\t\tlet { id, gift } = arg;\r\n\t\t\t\t\t\tlet api = await ApiHost.request()\r\n\t\t\t\t\t\t\t.DELETE()\r\n\t\t\t\t\t\t\t.url(\"productv2/gift/\")\r\n\t\t\t\t\t\t\t.body({ content: { productId: id, gift } })\r\n\t\t\t\t\t\t\t.send();\r\n\t\t\t\t\t\tlet error = api.getError();\r\n\t\t\t\t\t\tlet content = api.getContent();\r\n\t\t\t\t\t\tif (error) {\r\n\t\t\t\t\t\t\tthrow new Error(error);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlet item = await context.dispatch(\"onUpdateItem\", {\r\n\t\t\t\t\t\t\tid: content.productId,\r\n\t\t\t\t\t\t\tcallback: (item) => item.removeGift(content.gift),\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\r\n\t\t\t\tasync addSpecificationOfId(context, arg = { id, specification }) {\r\n\t\t\t\t\treturn context.state.processor.acquire(\r\n\t\t\t\t\t\t\"addSpecificationOfId\",\r\n\t\t\t\t\t\tasync () => {\r\n\t\t\t\t\t\t\tlet { id, specification } = arg;\r\n\t\t\t\t\t\t\tlet api = await ApiHost.request()\r\n\t\t\t\t\t\t\t\t.POST()\r\n\t\t\t\t\t\t\t\t.url(\"productv2/specification/\")\r\n\t\t\t\t\t\t\t\t.body({ content: { productId: id, specification } })\r\n\t\t\t\t\t\t\t\t.send();\r\n\t\t\t\t\t\t\tlet error = api.getError();\r\n\t\t\t\t\t\t\tlet content = api.getContent();\r\n\t\t\t\t\t\t\tif (error) throw new Error(error);\r\n\t\t\t\t\t\t\tlet item = await context.dispatch(\"onUpdateItem\", {\r\n\t\t\t\t\t\t\t\tid: content.productId,\r\n\t\t\t\t\t\t\t\tcallback(item) {\r\n\t\t\t\t\t\t\t\t\titem.addSpecification(content.specification);\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t\tasync removeSpecificationOfId(context, arg = { id, specification }) {\r\n\t\t\t\t\treturn context.state.processor.acquire(\r\n\t\t\t\t\t\t\"removeSpecificationOfId\",\r\n\t\t\t\t\t\tasync () => {\r\n\t\t\t\t\t\t\tlet { id, specification } = arg;\r\n\t\t\t\t\t\t\tspecification =\r\n\t\t\t\t\t\t\t\tspecification instanceof ProductSpecContent\r\n\t\t\t\t\t\t\t\t\t? specification.toData()\r\n\t\t\t\t\t\t\t\t\t: specification;\r\n\t\t\t\t\t\t\tspecification.type = specification.key;\r\n\t\t\t\t\t\t\tlet api = await ApiHost.request()\r\n\t\t\t\t\t\t\t\t.DELETE()\r\n\t\t\t\t\t\t\t\t.url(\"productv2/specification/\")\r\n\t\t\t\t\t\t\t\t.body({ content: { productId: id, specification } })\r\n\t\t\t\t\t\t\t\t.send();\r\n\t\t\t\t\t\t\tlet error = api.getError();\r\n\t\t\t\t\t\t\tlet content = api.getContent();\r\n\t\t\t\t\t\t\tif (error) throw new Error(error);\r\n\t\t\t\t\t\t\tlet item = await context.dispatch(\"onUpdateItem\", {\r\n\t\t\t\t\t\t\t\tid: content.productId,\r\n\t\t\t\t\t\t\t\tcallback(item) {\r\n\t\t\t\t\t\t\t\t\titem.removeSpecification(content.specification);\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t\tasync updateSpecificationsOfId(context, arg = { id, specifications }) {\r\n\t\t\t\t\treturn context.state.processor.acquire(\r\n\t\t\t\t\t\t\"updateSpecificationsOfId\",\r\n\t\t\t\t\t\tasync () => {\r\n\t\t\t\t\t\t\tlet { id, specifications } = arg;\r\n\t\t\t\t\t\t\tlet api = await ApiHost.request()\r\n\t\t\t\t\t\t\t\t.PUT()\r\n\t\t\t\t\t\t\t\t.url(\"productv2/specification/list\")\r\n\t\t\t\t\t\t\t\t.body({ content: { productId: id, specifications } })\r\n\t\t\t\t\t\t\t\t.send();\r\n\t\t\t\t\t\t\tlet error = api.getError();\r\n\t\t\t\t\t\t\tlet content = api.getContent();\r\n\t\t\t\t\t\t\tif (error) throw new Error(error);\r\n\t\t\t\t\t\t\tlet item = await context.dispatch(\"onUpdateItem\", {\r\n\t\t\t\t\t\t\t\tid: content.productId,\r\n\t\t\t\t\t\t\t\tcallback(item) {\r\n\t\t\t\t\t\t\t\t\titem.setSpecifications(content.specifications);\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\r\n\t\t\t\tasync addImageOfId(context, arg = { id, imageFile }) {\r\n\t\t\t\t\treturn context.state.processor.acquire(\"addImageOfId\", async () => {\r\n\t\t\t\t\t\tlet { id, imageFile } = arg;\r\n\t\t\t\t\t\tconst imageFileForm = new FormData();\r\n\t\t\t\t\t\timageFileForm.append(imageFile.name, imageFile);\r\n\t\t\t\t\t\tlet api = await ApiHost.fetch({\r\n\t\t\t\t\t\t\tmethod: \"POST\",\r\n\t\t\t\t\t\t\turl: `productv2/id/${id}/image/`,\r\n\t\t\t\t\t\t\tbody: imageFileForm,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tif (api.error) throw new Error(api.error);\r\n\t\t\t\t\t\tlet { content } = api;\r\n\t\t\t\t\t\tlet item = await context.dispatch(\"onUpdateItem\", {\r\n\t\t\t\t\t\t\tid: content.productId,\r\n\t\t\t\t\t\t\tcallback(item) {\r\n\t\t\t\t\t\t\t\titem.addImages(content.images);\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t\tasync removeImageOfId(context, arg = { id, image }) {\r\n\t\t\t\t\treturn context.state.processor.acquire(\r\n\t\t\t\t\t\t\"removeImageOfId\",\r\n\t\t\t\t\t\tasync () => {\r\n\t\t\t\t\t\t\tlet { id, image } = arg;\r\n\t\t\t\t\t\t\timage = image instanceof Image ? image.toData() : image;\r\n\t\t\t\t\t\t\tlet api = await ApiHost.request()\r\n\t\t\t\t\t\t\t\t.DELETE()\r\n\t\t\t\t\t\t\t\t.url(`productv2/id/${id}/image/`)\r\n\t\t\t\t\t\t\t\t.body({ content: { image } })\r\n\t\t\t\t\t\t\t\t.send();\r\n\t\t\t\t\t\t\tlet error = api.getError();\r\n\t\t\t\t\t\t\tlet content = api.getContent();\r\n\t\t\t\t\t\t\tif (error) throw new Error(error);\r\n\t\t\t\t\t\t\tlet item = await context.dispatch(\"onUpdateItem\", {\r\n\t\t\t\t\t\t\t\tid: content.productId,\r\n\t\t\t\t\t\t\t\tcallback(item) {\r\n\t\t\t\t\t\t\t\t\titem.removeImage(content.image);\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\treturn productStore;\r\n\t},\r\n};\r\n"]}]}