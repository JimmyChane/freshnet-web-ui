{"remainingRequest":"C:\\dev\\freshnet-vue\\node_modules\\babel-loader\\lib\\index.js!C:\\dev\\freshnet-vue\\src\\stores\\store.order.js","dependencies":[{"path":"C:\\dev\\freshnet-vue\\src\\stores\\store.order.js","mtime":1668341329303},{"path":"C:\\dev\\freshnet-vue\\babel.config.js","mtime":1662650914175},{"path":"C:\\dev\\freshnet-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1662650916242},{"path":"C:\\dev\\freshnet-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1662650915901}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/dev/freshnet-vue/src/stores/store.order.js"],"names":["Vuex","ApiHost","Order","OrderModule","DataLoader","CollectionUpdater","Processor","init","Stores","store","Store","state","lastModified","dataLoader","timeout","processor","loadData","request","url","send","api","error","getError","content","getContent","Error","contents","Array","isArray","items","map","data","fromData","setData","commit","Date","now","getData","getters","mutations","time","isLoading","actions","refresh","context","acquire","doTimeout","dispatch","getItems","getGroupsByCustomer","groups","reduce","item","group","find","customer","isEqual","push","getGroupsByStatus","status","addItem","arg","POST","body","order","onId","id","getItem","removeOItemOfId","DELETE","filter","updateStatusOfId","PUT","onUpdate","getItemById","updateToPendingOfId","STATUS","PENDING","updateToCompletedOfId"],"mappings":"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","sourcesContent":["import Vuex from \"vuex\";\r\nimport ApiHost from \"@/host/ApiHost.js\";\r\nimport Order from \"@/items/Order.js\";\r\nimport OrderModule from \"@/items/data/Order.js\";\r\n\r\nimport DataLoader from \"./tools/DataLoader\";\r\nimport CollectionUpdater from \"./tools/CollectionUpdater\";\r\nimport Processor from \"./tools/Processor.js\";\r\n\r\nexport default {\r\n\tinit(Stores) {\r\n\t\tconst store = new Vuex.Store({\r\n\t\t\tstate: {\r\n\t\t\t\tlastModified: 0,\r\n\t\t\t\tdataLoader: new DataLoader({ timeout: 1000 * 60 * 10 }) // 10min\r\n\t\t\t\t\t.processor(() => store.state.processor)\r\n\t\t\t\t\t.loadData(async () => {\r\n\t\t\t\t\t\tconst api = await ApiHost.request().url(\"order/\").send();\r\n\t\t\t\t\t\tconst error = api.getError();\r\n\t\t\t\t\t\tconst content = api.getContent();\r\n\t\t\t\t\t\tif (error) throw new Error(error);\r\n\t\t\t\t\t\tconst contents = Array.isArray(content) ? content : [];\r\n\t\t\t\t\t\tconst items = contents.map((data) => {\r\n\t\t\t\t\t\t\treturn new Order(Stores).fromData(data);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\treturn items;\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.setData((data) => {\r\n\t\t\t\t\t\tstore.commit(\"items\", Array.isArray(data) ? data : []);\r\n\t\t\t\t\t\tstore.commit(\"lastModified\", Date.now());\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.getData(() => store.getters.items),\r\n\t\t\t\titems: [],\r\n\t\t\t\tprocessor: new Processor(),\r\n\t\t\t},\r\n\t\t\tmutations: {\r\n\t\t\t\tlastModified: (state, time) => (state.lastModified = time),\r\n\t\t\t\titems: (state, items) => (state.items = items),\r\n\t\t\t},\r\n\t\t\tgetters: {\r\n\t\t\t\tlastModified: (state) => state.lastModified,\r\n\t\t\t\tisLoading: (state) => state.processor.isLoading(),\r\n\t\t\t\titems: (state) => (Array.isArray(state.items) ? state.items : []),\r\n\t\t\t},\r\n\t\t\tactions: {\r\n\t\t\t\tasync refresh(context) {\r\n\t\t\t\t\treturn context.state.processor.acquire(\"refresh\", async () => {\r\n\t\t\t\t\t\tcontext.state.dataLoader.doTimeout();\r\n\t\t\t\t\t\tawait context.dispatch(\"getItems\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\r\n\t\t\t\tasync getItems(context) {\r\n\t\t\t\t\treturn context.state.processor.acquire(\"getItems\", async () => {\r\n\t\t\t\t\t\treturn context.state.dataLoader.data();\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\r\n\t\t\t\tasync getGroupsByCustomer(context) {\r\n\t\t\t\t\tconst items = await context.dispatch(\"getItems\");\r\n\t\t\t\t\tconst groups = items.reduce((groups, item) => {\r\n\t\t\t\t\t\tlet group = groups.find((group) => {\r\n\t\t\t\t\t\t\treturn group.customer.isEqual(item.customer);\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif (!group) {\r\n\t\t\t\t\t\t\tgroup = { customer: item.customer, items: [] };\r\n\t\t\t\t\t\t\tgroups.push(group);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tgroup.items.push(item);\r\n\t\t\t\t\t\treturn groups;\r\n\t\t\t\t\t}, []);\r\n\r\n\t\t\t\t\treturn groups;\r\n\t\t\t\t},\r\n\t\t\t\tasync getGroupsByStatus(context) {\r\n\t\t\t\t\tconst items = await context.dispatch(\"getItems\");\r\n\t\t\t\t\tconst groups = items.reduce((groups, item) => {\r\n\t\t\t\t\t\tlet group = groups.find((group) => group.status === item.status);\r\n\r\n\t\t\t\t\t\tif (!group) {\r\n\t\t\t\t\t\t\tgroup = { status: item.status, items: [] };\r\n\t\t\t\t\t\t\tgroups.push(group);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tgroup.items.push(item);\r\n\t\t\t\t\t\treturn groups;\r\n\t\t\t\t\t}, []);\r\n\r\n\t\t\t\t\treturn groups;\r\n\t\t\t\t},\r\n\r\n\t\t\t\tasync addItem(context, arg = { data }) {\r\n\t\t\t\t\treturn context.state.processor.acquire(\"addItem\", async () => {\r\n\t\t\t\t\t\tlet { data } = arg;\r\n\t\t\t\t\t\tif (!data) return null;\r\n\t\t\t\t\t\tlet api = await ApiHost.request()\r\n\t\t\t\t\t\t\t.POST()\r\n\t\t\t\t\t\t\t.url(\"order/\")\r\n\t\t\t\t\t\t\t.body(data)\r\n\t\t\t\t\t\t\t.send();\r\n\t\t\t\t\t\tlet error = api.getError();\r\n\t\t\t\t\t\tlet content = api.getContent();\r\n\t\t\t\t\t\tif (error) throw new Error();\r\n\t\t\t\t\t\tlet order = new Order().fromData(content);\r\n\r\n\t\t\t\t\t\torder = new CollectionUpdater(context)\r\n\t\t\t\t\t\t\t.onId((item) => item.id)\r\n\t\t\t\t\t\t\t.getItem(order);\r\n\r\n\t\t\t\t\t\treturn order;\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t\tasync removeOItemOfId(context, arg = { id }) {\r\n\t\t\t\t\treturn context.state.processor.acquire(\r\n\t\t\t\t\t\t\"removeOItemOfId\",\r\n\t\t\t\t\t\tasync () => {\r\n\t\t\t\t\t\t\tlet { id } = arg;\r\n\t\t\t\t\t\t\tlet api = await ApiHost.request()\r\n\t\t\t\t\t\t\t\t.DELETE()\r\n\t\t\t\t\t\t\t\t.url(\"order/\")\r\n\t\t\t\t\t\t\t\t.body({ id })\r\n\t\t\t\t\t\t\t\t.send();\r\n\t\t\t\t\t\t\tlet error = api.getError();\r\n\t\t\t\t\t\t\tif (error) throw new Error();\r\n\t\t\t\t\t\t\tlet items = context.state.items.filter((item) => item.id !== id);\r\n\t\t\t\t\t\t\tcontext.commit(\"items\", items);\r\n\t\t\t\t\t\t\tcontext.commit(\"lastModified\", Date.now());\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t\tasync updateStatusOfId(context, arg = { id, status }) {\r\n\t\t\t\t\treturn context.state.processor.acquire(\r\n\t\t\t\t\t\t\"updateStatusOfId\",\r\n\t\t\t\t\t\tasync () => {\r\n\t\t\t\t\t\t\tlet { id, status } = arg;\r\n\t\t\t\t\t\t\tlet api = await ApiHost.request()\r\n\t\t\t\t\t\t\t\t.PUT()\r\n\t\t\t\t\t\t\t\t.url(\"order/\")\r\n\t\t\t\t\t\t\t\t.body({ id, status })\r\n\t\t\t\t\t\t\t\t.send();\r\n\t\t\t\t\t\t\tlet error = api.getError();\r\n\t\t\t\t\t\t\tif (error) throw new Error();\r\n\r\n\t\t\t\t\t\t\tlet order = new CollectionUpdater(context)\r\n\t\t\t\t\t\t\t\t.onId((item) => item.id)\r\n\t\t\t\t\t\t\t\t.onUpdate((item) => (item.status = status))\r\n\t\t\t\t\t\t\t\t.getItemById(id);\r\n\r\n\t\t\t\t\t\t\treturn order;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t\tasync updateToPendingOfId(context, id = \"\") {\r\n\t\t\t\t\treturn context.dispatch(\"updateStatusOfId\", {\r\n\t\t\t\t\t\tid,\r\n\t\t\t\t\t\tstatus: Order.STATUS.PENDING,\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t\tasync updateToCompletedOfId(context, id = \"\") {\r\n\t\t\t\t\treturn context.dispatch(\"updateStatusOfId\", {\r\n\t\t\t\t\t\tid,\r\n\t\t\t\t\t\tstatus: Order.STATUS.PENDING,\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\treturn store;\r\n\t},\r\n};\r\n"]}]}