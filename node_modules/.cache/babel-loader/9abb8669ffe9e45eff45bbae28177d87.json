{"remainingRequest":"C:\\development\\freshnet-v2\\vue\\node_modules\\babel-loader\\lib\\index.js!C:\\development\\freshnet-v2\\vue\\src\\stores\\components\\Loading.js","dependencies":[{"path":"C:\\development\\freshnet-v2\\vue\\src\\stores\\components\\Loading.js","mtime":1663426540866},{"path":"C:\\development\\freshnet-v2\\vue\\babel.config.js","mtime":1662650914175},{"path":"C:\\development\\freshnet-v2\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1662650916242},{"path":"C:\\development\\freshnet-v2\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1662650915901}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6XFxkZXZlbG9wbWVudFxcZnJlc2huZXQtdjJcXHZ1ZVxcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWVcXGhlbHBlcnNcXGVzbVxcYXN5bmNUb0dlbmVyYXRvci5qcyI7CmltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSAiQzpcXGRldmVsb3BtZW50XFxmcmVzaG5ldC12MlxcdnVlXFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZVxcaGVscGVyc1xcZXNtXFxjbGFzc0NhbGxDaGVjay5qcyI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiQzpcXGRldmVsb3BtZW50XFxmcmVzaG5ldC12MlxcdnVlXFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZVxcaGVscGVyc1xcZXNtXFxjcmVhdGVDbGFzcy5qcyI7CmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSAiQzpcXGRldmVsb3BtZW50XFxmcmVzaG5ldC12MlxcdnVlXFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZVxcaGVscGVyc1xcZXNtXFxkZWZpbmVQcm9wZXJ0eS5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNwbGljZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbmQuanMiOwoKdmFyIExvYWRpbmcgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIGZ1bmN0aW9uIExvYWRpbmcoKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgTG9hZGluZyk7CgogICAgX2RlZmluZVByb3BlcnR5KHRoaXMsICJsb2FkaW5ncyIsIFtdKTsKICB9CgogIF9jcmVhdGVDbGFzcyhMb2FkaW5nLCBbewogICAga2V5OiAicXVldWUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHF1ZXVlKGtleSwgcnVuKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgICAgIF90aGlzLmxvYWRpbmdzLnB1c2gocnVuKTsKICAgICAgfSk7CiAgICB9CiAgfSwgewogICAga2V5OiAiYWNxdWlyZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gYWNxdWlyZShrZXksIGNhbGxiYWNrKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgICAgICB2YXIgcnVuID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICAgICAgICAgIHZhciBfcmVmID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgICAgICB2YXIgcmVzdWx0LCBpbmRleDsKICAgICAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgICAgIGlmICghX3RoaXMyLmlzTG9hZGluZyhrZXkpKSB7CiAgICAgICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgc2V0VGltZW91dChydW4sIDIwMCkpOwoKICAgICAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgICAgIF90aGlzMi5sb2FkaW5ncy5wdXNoKGtleSk7CgogICAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA1OwogICAgICAgICAgICAgICAgICAgIHJldHVybiBjYWxsYmFjaygpOwoKICAgICAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgICAgIHJlc3VsdCA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICAgICAgaW5kZXggPSBfdGhpczIubG9hZGluZ3MuaW5kZXhPZihrZXkpOwogICAgICAgICAgICAgICAgICAgIGlmIChpbmRleCA+IC0xKSBfdGhpczIubG9hZGluZ3Muc3BsaWNlKGluZGV4LCAxKTsKICAgICAgICAgICAgICAgICAgICByZXNvbHZlKHJlc3VsdCk7CgogICAgICAgICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sIF9jYWxsZWUpOwogICAgICAgICAgfSkpOwoKICAgICAgICAgIHJldHVybiBmdW5jdGlvbiBydW4oKSB7CiAgICAgICAgICAgIHJldHVybiBfcmVmLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgICAgICB9OwogICAgICAgIH0oKTsKCiAgICAgICAgcnVuKCk7CiAgICAgIH0pOwogICAgfQogIH0sIHsKICAgIGtleTogImlzTG9hZGluZyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gaXNMb2FkaW5nKGtleSkgewogICAgICBjb25zb2xlLmxvZyh0aGlzLmxvYWRpbmdzLmxlbmd0aCk7CiAgICAgIGlmICh0eXBlb2Yga2V5ICE9PSAic3RyaW5nIikgcmV0dXJuIHRoaXMubG9hZGluZ3MubGVuZ3RoID4gMDsKICAgICAgcmV0dXJuICEhdGhpcy5sb2FkaW5ncy5maW5kKGZ1bmN0aW9uIChsb2FkaW5nKSB7CiAgICAgICAgcmV0dXJuIGxvYWRpbmcgPT09IGtleTsKICAgICAgfSk7CiAgICB9CiAgfV0pOwoKICByZXR1cm4gTG9hZGluZzsKfSgpOwoKZXhwb3J0IGRlZmF1bHQgTG9hZGluZzs="},{"version":3,"sources":["C:/development/freshnet-v2/vue/src/stores/components/Loading.js"],"names":["Loading","key","run","Promise","resolve","reject","loadings","push","callback","isLoading","setTimeout","result","index","indexOf","splice","console","log","length","find","loading"],"mappings":";;;;;;;;;IAAMA,O;AAGH,qBAAc;AAAA;;AAAA,sCAFH,EAEG;AAAE;;;;WAEhB,eAAMC,GAAN,EAAWC,GAAX,EAAgB;AAAA;;AACb,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACrC,QAAA,KAAI,CAACC,QAAL,CAAcC,IAAd,CAAmBL,GAAnB;AACF,OAFM,CAAP;AAGF;;;WAED,iBAAQD,GAAR,EAAaO,QAAb,EAAuB;AAAA;;AACpB,aAAO,IAAIL,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACrC,YAAMH,GAAG;AAAA,6EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACL,MAAI,CAACO,SAAL,CAAeR,GAAf,CADK;AAAA;AAAA;AAAA;;AAAA,qDACuBS,UAAU,CAACR,GAAD,EAAM,GAAN,CADjC;;AAAA;AAGT,oBAAA,MAAI,CAACI,QAAL,CAAcC,IAAd,CAAmBN,GAAnB;;AAHS;AAAA,2BAIYO,QAAQ,EAJpB;;AAAA;AAIHG,oBAAAA,MAJG;AAKHC,oBAAAA,KALG,GAKK,MAAI,CAACN,QAAL,CAAcO,OAAd,CAAsBZ,GAAtB,CALL;AAMT,wBAAIW,KAAK,GAAG,CAAC,CAAb,EAAgB,MAAI,CAACN,QAAL,CAAcQ,MAAd,CAAqBF,KAArB,EAA4B,CAA5B;AAEhBR,oBAAAA,OAAO,CAACO,MAAD,CAAP;;AARS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAH;;AAAA,0BAAHT,GAAG;AAAA;AAAA;AAAA,WAAT;;AAUAA,QAAAA,GAAG;AACL,OAZM,CAAP;AAaF;;;WAED,mBAAUD,GAAV,EAAe;AACZc,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,QAAL,CAAcW,MAA1B;AACA,UAAI,OAAOhB,GAAP,KAAe,QAAnB,EAA6B,OAAO,KAAKK,QAAL,CAAcW,MAAd,GAAuB,CAA9B;AAC7B,aAAO,CAAC,CAAC,KAAKX,QAAL,CAAcY,IAAd,CAAmB,UAACC,OAAD;AAAA,eAAaA,OAAO,KAAKlB,GAAzB;AAAA,OAAnB,CAAT;AACF;;;;;;AAGJ,eAAeD,OAAf","sourcesContent":["class Loading {\r\n   loadings = [];\r\n\r\n   constructor() {}\r\n\r\n   queue(key, run) {\r\n      return new Promise((resolve, reject) => {\r\n         this.loadings.push(run);\r\n      });\r\n   }\r\n\r\n   acquire(key, callback) {\r\n      return new Promise((resolve, reject) => {\r\n         const run = async () => {\r\n            if (this.isLoading(key)) return setTimeout(run, 200);\r\n\r\n            this.loadings.push(key);\r\n            const result = await callback();\r\n            const index = this.loadings.indexOf(key);\r\n            if (index > -1) this.loadings.splice(index, 1);\r\n\r\n            resolve(result);\r\n         };\r\n         run();\r\n      });\r\n   }\r\n\r\n   isLoading(key) {\r\n      console.log(this.loadings.length);\r\n      if (typeof key !== \"string\") return this.loadings.length > 0;\r\n      return !!this.loadings.find((loading) => loading === key);\r\n   }\r\n}\r\n\r\nexport default Loading;\r\n"]}]}