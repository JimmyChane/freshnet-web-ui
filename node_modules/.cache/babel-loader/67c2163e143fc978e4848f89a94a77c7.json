{"remainingRequest":"C:\\development\\freshnet-v2\\vue\\node_modules\\babel-loader\\lib\\index.js!C:\\development\\freshnet-v2\\vue\\src\\items\\Image.js","dependencies":[{"path":"C:\\development\\freshnet-v2\\vue\\src\\items\\Image.js","mtime":1662650937366},{"path":"C:\\development\\freshnet-v2\\vue\\babel.config.js","mtime":1662650914175},{"path":"C:\\development\\freshnet-v2\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1662650916242},{"path":"C:\\development\\freshnet-v2\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1662650915901}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6XFxkZXZlbG9wbWVudFxcZnJlc2huZXQtdjJcXHZ1ZVxcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWVcXGhlbHBlcnNcXGVzbVxcYXN5bmNUb0dlbmVyYXRvci5qcyI7CmltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSAiQzpcXGRldmVsb3BtZW50XFxmcmVzaG5ldC12MlxcdnVlXFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZVxcaGVscGVyc1xcZXNtXFxjbGFzc0NhbGxDaGVjay5qcyI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiQzpcXGRldmVsb3BtZW50XFxmcmVzaG5ldC12MlxcdnVlXFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZVxcaGVscGVyc1xcZXNtXFxjcmVhdGVDbGFzcy5qcyI7CmltcG9ydCBfY2xhc3NQcml2YXRlRmllbGRJbml0U3BlYyBmcm9tICJDOlxcZGV2ZWxvcG1lbnRcXGZyZXNobmV0LXYyXFx2dWVcXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lXFxoZWxwZXJzXFxlc21cXGNsYXNzUHJpdmF0ZUZpZWxkSW5pdFNwZWMuanMiOwppbXBvcnQgX2RlZmluZVByb3BlcnR5IGZyb20gIkM6XFxkZXZlbG9wbWVudFxcZnJlc2huZXQtdjJcXHZ1ZVxcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWVcXGhlbHBlcnNcXGVzbVxcZGVmaW5lUHJvcGVydHkuanMiOwppbXBvcnQgX2NsYXNzUHJpdmF0ZUZpZWxkR2V0IGZyb20gIkM6XFxkZXZlbG9wbWVudFxcZnJlc2huZXQtdjJcXHZ1ZVxcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWVcXGhlbHBlcnNcXGVzbVxcY2xhc3NQcml2YXRlRmllbGRHZXQuanMiOwppbXBvcnQgX2NsYXNzUHJpdmF0ZUZpZWxkU2V0IGZyb20gIkM6XFxkZXZlbG9wbWVudFxcZnJlc2huZXQtdjJcXHZ1ZVxcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWVcXGhlbHBlcnNcXGVzbVxcY2xhc3NQcml2YXRlRmllbGRTZXQuanMiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMud2Vhay1tYXAuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yLmpzIjsKaW1wb3J0IEFwaUhvc3QgZnJvbSAiQC9ob3N0L0FwaUhvc3QuanMiOwppbXBvcnQgTW9kdWxlSW1hZ2UgZnJvbSAiQC8uLi8uLi9leHByZXNzL2RhdGFfc3RydWN0dXJlcy9JbWFnZS5qcyI7Cgp2YXIgZ2V0Q29sb3JzID0gcmVxdWlyZSgiZ2V0LWltYWdlLWNvbG9ycyIpOyAvLyBodHRwczovL3d3dy5ucG1qcy5jb20vcGFja2FnZS9nZXQtaW1hZ2UtY29sb3JzCgoKdmFyIEhvc3RJbWFnZUFwaSA9IEFwaUhvc3QuaW1nRmlsZTsKCnZhciBfbWV0aG9kID0gLyojX19QVVJFX18qL25ldyBXZWFrTWFwKCk7Cgp2YXIgX3BhdGggPSAvKiNfX1BVUkVfXyovbmV3IFdlYWtNYXAoKTsKCnZhciBJbWFnZSA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgZnVuY3Rpb24gSW1hZ2UoKSB7CiAgICB2YXIgZGF0YSA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogbnVsbDsKCiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgSW1hZ2UpOwoKICAgIF9jbGFzc1ByaXZhdGVGaWVsZEluaXRTcGVjKHRoaXMsIF9tZXRob2QsIHsKICAgICAgd3JpdGFibGU6IHRydWUsCiAgICAgIHZhbHVlOiB2b2lkIDAKICAgIH0pOwoKICAgIF9jbGFzc1ByaXZhdGVGaWVsZEluaXRTcGVjKHRoaXMsIF9wYXRoLCB7CiAgICAgIHdyaXRhYmxlOiB0cnVlLAogICAgICB2YWx1ZTogdm9pZCAwCiAgICB9KTsKCiAgICBkYXRhID0gbmV3IE1vZHVsZUltYWdlKGRhdGEpOwoKICAgIF9jbGFzc1ByaXZhdGVGaWVsZFNldCh0aGlzLCBfbWV0aG9kLCBkYXRhLm1ldGhvZCk7CgogICAgX2NsYXNzUHJpdmF0ZUZpZWxkU2V0KHRoaXMsIF9wYXRoLCBkYXRhLnBhdGgpOwogIH0KCiAgX2NyZWF0ZUNsYXNzKEltYWdlLCBbewogICAga2V5OiAidG9EYXRhIiwKICAgIHZhbHVlOiBmdW5jdGlvbiB0b0RhdGEoKSB7CiAgICAgIHJldHVybiBuZXcgTW9kdWxlSW1hZ2UoewogICAgICAgIG1ldGhvZDogX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9tZXRob2QpLAogICAgICAgIHBhdGg6IF9jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfcGF0aCkKICAgICAgfSk7CiAgICB9CiAgfSwgewogICAga2V5OiAiZ2V0TWV0aG9kIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRNZXRob2QoKSB7CiAgICAgIHJldHVybiBfY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX21ldGhvZCk7CiAgICB9CiAgfSwgewogICAga2V5OiAiZ2V0UGF0aCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0UGF0aCgpIHsKICAgICAgcmV0dXJuIF9jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfcGF0aCk7CiAgICB9CiAgfSwgewogICAga2V5OiAidG9VcmwiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHRvVXJsKCkgewogICAgICB2YXIgb3B0aW9uID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiB7CiAgICAgICAgd2lkdGg6IDAsCiAgICAgICAgaGVpZ2h0OiAwCiAgICAgIH07CiAgICAgIHZhciBfb3B0aW9uJHdpZHRoID0gb3B0aW9uLndpZHRoLAogICAgICAgICAgd2lkdGggPSBfb3B0aW9uJHdpZHRoID09PSB2b2lkIDAgPyAwIDogX29wdGlvbiR3aWR0aCwKICAgICAgICAgIF9vcHRpb24kaGVpZ2h0ID0gb3B0aW9uLmhlaWdodCwKICAgICAgICAgIGhlaWdodCA9IF9vcHRpb24kaGVpZ2h0ID09PSB2b2lkIDAgPyAwIDogX29wdGlvbiRoZWlnaHQ7CiAgICAgIHZhciBtZXRob2QgPSB0aGlzLmdldE1ldGhvZCgpOwogICAgICB2YXIgcGF0aCA9IHRoaXMuZ2V0UGF0aCgpOwoKICAgICAgaWYgKG1ldGhvZCAmJiBwYXRoKSB7CiAgICAgICAgaWYgKG1ldGhvZCA9PT0gSW1hZ2UuTWV0aG9kLkxvY2FsKSByZXR1cm4gIiIuY29uY2F0KEFwaUhvc3Qub3JpZ2luLCAiLyIpLmNvbmNhdChwYXRoKTsKICAgICAgICBpZiAobWV0aG9kID09PSBJbWFnZS5NZXRob2QuTGluaykgcmV0dXJuIHBhdGg7CgogICAgICAgIGlmIChtZXRob2QgPT09IEltYWdlLk1ldGhvZC5TdG9yYWdlSW1hZ2UpIHsKICAgICAgICAgIHZhciBwcmVmaXggPSAiL2FwaS9pbWFnZS9uYW1lLyI7CiAgICAgICAgICB2YXIgbmFtZSA9IHBhdGguc3Vic3RyaW5nKHByZWZpeC5sZW5ndGgsIHBhdGgubGVuZ3RoKTsKICAgICAgICAgIHJldHVybiBIb3N0SW1hZ2VBcGkubmFtZShuYW1lLCB7CiAgICAgICAgICAgIHdpZHRoOiB3aWR0aCwKICAgICAgICAgICAgaGVpZ2h0OiBoZWlnaHQKICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfQoKICAgICAgcmV0dXJuICIiOwogICAgfQogIH0sIHsKICAgIGtleTogInRvQ29sb3IiLAogICAgdmFsdWU6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF90b0NvbG9yID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBwYWxldHRlczsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBnZXRDb2xvcnModGhpcy50b1VybCh7CiAgICAgICAgICAgICAgICAgIHdpZHRoOiAyMAogICAgICAgICAgICAgICAgfSksIHsKICAgICAgICAgICAgICAgICAgY291bnQ6IDEKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICBwYWxldHRlcyA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBwYWxldHRlc1swXSk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIHRoaXMpOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiB0b0NvbG9yKCkgewogICAgICAgIHJldHVybiBfdG9Db2xvci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gdG9Db2xvcjsKICAgIH0oKSAvLyBkZXByZWNhdGVkCgogIH0sIHsKICAgIGtleTogInVybCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gdXJsKCkgewogICAgICB2YXIgb3B0aW9uID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiB7CiAgICAgICAgd2lkdGg6IDAsCiAgICAgICAgaGVpZ2h0OiAwCiAgICAgIH07CiAgICAgIHJldHVybiB0aGlzLnRvVXJsKG9wdGlvbik7CiAgICB9IC8vIGRlcHJlY2F0ZWQKCiAgfSwgewogICAga2V5OiAibWV0aG9kIiwKICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICByZXR1cm4gdGhpcy5nZXRNZXRob2QoKTsKICAgIH0gLy8gZGVwcmVjYXRlZAoKICB9LCB7CiAgICBrZXk6ICJwYXRoIiwKICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICByZXR1cm4gdGhpcy5nZXRQYXRoKCk7CiAgICB9IC8vIGRlcHJlY2F0ZWQKCiAgfSwgewogICAga2V5OiAiZnVsbFBhdGgiLAogICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgIHJldHVybiB0aGlzLnRvVXJsKCk7CiAgICB9CiAgfV0sIFt7CiAgICBrZXk6ICJjb3B5SW5zdGFuY2UiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGNvcHlJbnN0YW5jZShmcm9tKSB7CiAgICAgIHJldHVybiBuZXcgSW1hZ2UoZnJvbS50b0RhdGEoKSk7CiAgICB9CiAgfSwgewogICAga2V5OiAiaW1wb3J0RGF0YSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gaW1wb3J0RGF0YShkYXRhKSB7CiAgICAgIHZhciBpbWFnZSA9IG5ldyBJbWFnZShkYXRhKTsKICAgICAgaWYgKCFpbWFnZS5nZXRNZXRob2QoKSB8fCAhaW1hZ2UuZ2V0UGF0aCgpKSByZXR1cm4gbnVsbDsKICAgICAgcmV0dXJuIGltYWdlOwogICAgfQogIH0sIHsKICAgIGtleTogImV4cG9ydEZyb20iLAogICAgdmFsdWU6IGZ1bmN0aW9uIGV4cG9ydEZyb20oaW1hZ2UpIHsKICAgICAgaWYgKCEoaW1hZ2UgaW5zdGFuY2VvZiBJbWFnZSkpIHJldHVybiB7fTsKICAgICAgcmV0dXJuIGltYWdlLnRvRGF0YSgpOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIEltYWdlOwp9KCk7CgpfZGVmaW5lUHJvcGVydHkoSW1hZ2UsICJNZXRob2QiLCBNb2R1bGVJbWFnZS5NZXRob2QpOwoKZXhwb3J0IGRlZmF1bHQgSW1hZ2U7"},{"version":3,"sources":["C:/development/freshnet-v2/vue/src/items/Image.js"],"names":["ApiHost","ModuleImage","getColors","require","HostImageApi","imgFile","Image","data","method","path","option","width","height","getMethod","getPath","Method","Local","origin","Link","StorageImage","prefix","name","substring","length","toUrl","count","palettes","from","toData","image"],"mappings":"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","sourcesContent":["import ApiHost from \"@/host/ApiHost.js\";\r\nimport ModuleImage from \"@/../../express/data_structures/Image.js\";\r\n\r\nconst getColors = require(\"get-image-colors\"); // https://www.npmjs.com/package/get-image-colors\r\n\r\nconst HostImageApi = ApiHost.imgFile;\r\n\r\nclass Image {\r\n   static Method = ModuleImage.Method;\r\n\r\n   static copyInstance(from) {\r\n      return new Image(from.toData());\r\n   }\r\n   static importData(data) {\r\n      let image = new Image(data);\r\n      if (!image.getMethod() || !image.getPath()) return null;\r\n      return image;\r\n   }\r\n   static exportFrom(image) {\r\n      if (!(image instanceof Image)) return {};\r\n      return image.toData();\r\n   }\r\n\r\n   #method;\r\n   #path;\r\n\r\n   constructor(data = null) {\r\n      data = new ModuleImage(data);\r\n      this.#method = data.method;\r\n      this.#path = data.path;\r\n   }\r\n   toData() {\r\n      return new ModuleImage({\r\n         method: this.#method,\r\n         path: this.#path,\r\n      });\r\n   }\r\n\r\n   getMethod() {\r\n      return this.#method;\r\n   }\r\n   getPath() {\r\n      return this.#path;\r\n   }\r\n\r\n   toUrl(option = { width: 0, height: 0 }) {\r\n      let { width = 0, height = 0 } = option;\r\n      let method = this.getMethod();\r\n      let path = this.getPath();\r\n\r\n      if (method && path) {\r\n         if (method === Image.Method.Local) return `${ApiHost.origin}/${path}`;\r\n         if (method === Image.Method.Link) return path;\r\n         if (method === Image.Method.StorageImage) {\r\n            const prefix = \"/api/image/name/\";\r\n            const name = path.substring(prefix.length, path.length);\r\n            return HostImageApi.name(name, { width, height });\r\n         }\r\n      }\r\n      return \"\";\r\n   }\r\n\r\n   async toColor() {\r\n      const palettes = await getColors(this.toUrl({ width: 20 }), { count: 1 });\r\n      return palettes[0];\r\n   }\r\n\r\n   // deprecated\r\n   url(option = { width: 0, height: 0 }) {\r\n      return this.toUrl(option);\r\n   }\r\n   // deprecated\r\n   get method() {\r\n      return this.getMethod();\r\n   }\r\n   // deprecated\r\n   get path() {\r\n      return this.getPath();\r\n   }\r\n   // deprecated\r\n   get fullPath() {\r\n      return this.toUrl();\r\n   }\r\n}\r\n\r\nexport default Image;\r\n"]}]}