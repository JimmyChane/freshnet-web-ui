{"remainingRequest":"C:\\dev\\freshnet-vue\\node_modules\\babel-loader\\lib\\index.js!C:\\dev\\freshnet-vue\\src\\stores\\store.login.js","dependencies":[{"path":"C:\\dev\\freshnet-vue\\src\\stores\\store.login.js","mtime":1666953105335},{"path":"C:\\dev\\freshnet-vue\\babel.config.js","mtime":1662650914175},{"path":"C:\\dev\\freshnet-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1662650916242},{"path":"C:\\dev\\freshnet-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1662650915901}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/dev/freshnet-vue/src/stores/store.login.js"],"names":["Vuex","ApiHost","ItemUser","Processor","storageTokenKey","getToken","window","localStorage","getItem","setToken","token","setItem","deleteToken","removeItem","onNewCredentail","context","arg","user","Stores","newUser","fromData","commit","Date","now","init","store","loginStore","Store","state","lastModified","loader","mutations","time","getters","isLoading","actions","refresh","acquire","dispatch","getUser","request","POST","url","body","send","api","content","getContent","userNow","isUsernameSame","username","isNameSame","name","isUserTypeSame","userType","message","changePassword","Error","passwordVerify","passwordNew","login","password","error","getError","logout"],"mappings":"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","sourcesContent":["import Vuex from \"vuex\";\r\nimport ApiHost from \"@/host/ApiHost.js\";\r\nimport ItemUser from \"../items/User.js\";\r\nimport Processor from \"./tools/Processor.js\";\r\n\r\nconst storageTokenKey = \"userToken\";\r\nconst getToken = () => window.localStorage.getItem(storageTokenKey);\r\nconst setToken = (token) => window.localStorage.setItem(storageTokenKey, token);\r\nconst deleteToken = () => window.localStorage.removeItem(storageTokenKey);\r\nconst onNewCredentail = (context, arg = { token, user }, Stores) => {\r\n\tconst { token, user } = arg;\r\n\tconst newUser = new ItemUser(Stores).fromData(user);\r\n\tsetToken(token);\r\n\tcontext.commit(\"user\", newUser);\r\n\tcontext.commit(\"lastModified\", Date.now());\r\n\treturn newUser;\r\n};\r\n\r\nexport default {\r\n\tinit(Stores) {\r\n\t\tconst { store } = Stores;\r\n\r\n\t\tconst loginStore = new Vuex.Store({\r\n\t\t\tstate: { lastModified: 0, user: null, loader: new Processor() },\r\n\t\t\tmutations: {\r\n\t\t\t\tlastModified: (state, time) => (state.lastModified = time),\r\n\t\t\t\tuser: (state, user) => (state.user = user),\r\n\t\t\t},\r\n\t\t\tgetters: {\r\n\t\t\t\tlastModified: (state) => state.lastModified,\r\n\t\t\t\tisLoading: (state) => state.loader.isLoading(),\r\n\t\t\t\tuser: (state) => state.user,\r\n\t\t\t\ttoken: () => getToken(),\r\n\t\t\t},\r\n\t\t\tactions: {\r\n\t\t\t\tasync refresh(context) {\r\n\t\t\t\t\treturn context.state.loader.acquire(\"refresh\", async () => {\r\n\t\t\t\t\t\tawait context.dispatch(\"getUser\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\r\n\t\t\t\tasync getUser(context) {\r\n\t\t\t\t\treturn context.state.loader.acquire(\"getUser\", async () => {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tconst token = getToken();\r\n\t\t\t\t\t\t\tif (!token) {\r\n\t\t\t\t\t\t\t\tcontext.commit(\"user\", null);\r\n\t\t\t\t\t\t\t\tcontext.commit(\"lastModified\", Date.now());\r\n\t\t\t\t\t\t\t\tdeleteToken();\r\n\t\t\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tconst api = await ApiHost.request()\r\n\t\t\t\t\t\t\t\t.POST()\r\n\t\t\t\t\t\t\t\t.url(\"session/verifyToken/\")\r\n\t\t\t\t\t\t\t\t.body({ token })\r\n\t\t\t\t\t\t\t\t.send();\r\n\r\n\t\t\t\t\t\t\tconst content = api.getContent();\r\n\t\t\t\t\t\t\tconst user = new ItemUser().fromData(content.user);\r\n\r\n\t\t\t\t\t\t\tconst userNow = context.state.user;\r\n\t\t\t\t\t\t\tif (userNow) {\r\n\t\t\t\t\t\t\t\tconst isUsernameSame = userNow.username === user.username;\r\n\t\t\t\t\t\t\t\tconst isNameSame = userNow.name === user.name;\r\n\t\t\t\t\t\t\t\tconst isUserTypeSame = userNow.userType === user.userType;\r\n\t\t\t\t\t\t\t\tif (isUsernameSame && isNameSame && isUserTypeSame) {\r\n\t\t\t\t\t\t\t\t\treturn userNow;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tsetToken(token);\r\n\t\t\t\t\t\t\tcontext.commit(\"user\", user);\r\n\t\t\t\t\t\t\tcontext.commit(\"lastModified\", Date.now());\r\n\r\n\t\t\t\t\t\t\treturn user;\r\n\t\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\t\tif (error.message === \"not signed in\") {\r\n\t\t\t\t\t\t\t\tcontext.commit(\"user\", null);\r\n\t\t\t\t\t\t\t\tcontext.commit(\"lastModified\", Date.now());\r\n\t\t\t\t\t\t\t\tdeleteToken();\r\n\t\t\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthrow error;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t\tasync changePassword(context, arg = {}) {\r\n\t\t\t\t\treturn context.state.loader.acquire(\"changePassword\", async () => {\r\n\t\t\t\t\t\tlet { user } = context.getters;\r\n\t\t\t\t\t\tif (!user || !user.username) {\r\n\t\t\t\t\t\t\tthrow new Error(\"cannot find username with current user\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlet username = user.username;\r\n\t\t\t\t\t\tlet { passwordVerify, passwordNew } = arg;\r\n\t\t\t\t\t\tlet api = await ApiHost.request()\r\n\t\t\t\t\t\t\t.POST()\r\n\t\t\t\t\t\t\t.url(`session/user/${username}/changePassword`)\r\n\t\t\t\t\t\t\t.body({ passwordVerify, passwordNew })\r\n\t\t\t\t\t\t\t.send();\r\n\t\t\t\t\t\tlet content = api.getContent();\r\n\t\t\t\t\t\tlet { token } = content;\r\n\t\t\t\t\t\tuser = content;\r\n\t\t\t\t\t\tuser = onNewCredentail(context, { token, user }, Stores);\r\n\t\t\t\t\t\tstore.dispatch(\"restartSocket\");\r\n\r\n\t\t\t\t\t\treturn user;\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\r\n\t\t\t\tasync login(context, arg = { username, password }) {\r\n\t\t\t\t\treturn context.state.loader.acquire(\"login\", async () => {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tdeleteToken();\r\n\t\t\t\t\t\t\tlet api = await ApiHost.request()\r\n\t\t\t\t\t\t\t\t.POST()\r\n\t\t\t\t\t\t\t\t.url(\"session/login/\")\r\n\t\t\t\t\t\t\t\t.body({\r\n\t\t\t\t\t\t\t\t\tusername: arg.username,\r\n\t\t\t\t\t\t\t\t\tpassword: arg.password,\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t.send();\r\n\t\t\t\t\t\t\tlet error = api.getError();\r\n\t\t\t\t\t\t\tlet content = api.getContent();\r\n\t\t\t\t\t\t\tif (error || !content) throw new Error();\r\n\t\t\t\t\t\t\tconst { token, user } = content;\r\n\t\t\t\t\t\t\tconst newUser = onNewCredentail(context, { token, user }, Stores);\r\n\t\t\t\t\t\t\tstore.dispatch(\"restartSocket\");\r\n\t\t\t\t\t\t\treturn newUser;\r\n\t\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\t\tdeleteToken();\r\n\t\t\t\t\t\t\tcontext.commit(\"user\", null);\r\n\t\t\t\t\t\t\tcontext.commit(\"lastModified\", Date.now());\r\n\t\t\t\t\t\t\tthrow error;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t\tasync logout(context) {\r\n\t\t\t\t\treturn context.state.loader.acquire(\"logout\", async () => {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tdeleteToken();\r\n\t\t\t\t\t\t\tstore.dispatch(\"restartSocket\");\r\n\t\t\t\t\t\t\tlet user = context.getters.user;\r\n\t\t\t\t\t\t\tcontext.commit(\"user\", null);\r\n\t\t\t\t\t\t\tcontext.commit(\"lastModified\", Date.now());\r\n\t\t\t\t\t\t\treturn user;\r\n\t\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\t\tdeleteToken();\r\n\t\t\t\t\t\t\tcontext.commit(\"user\", null);\r\n\t\t\t\t\t\t\tcontext.commit(\"lastModified\", Date.now());\r\n\t\t\t\t\t\t\tthrow error;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\treturn loginStore;\r\n\t},\r\n};\r\n"]}]}