{"remainingRequest":"C:\\dev\\freshnet-vue\\node_modules\\babel-loader\\lib\\index.js!C:\\dev\\freshnet-vue\\src\\stores\\store.customer.js","dependencies":[{"path":"C:\\dev\\freshnet-vue\\src\\stores\\store.customer.js","mtime":1666954375023},{"path":"C:\\dev\\freshnet-vue\\babel.config.js","mtime":1662650914175},{"path":"C:\\dev\\freshnet-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1662650916242},{"path":"C:\\dev\\freshnet-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1662650915901}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/dev/freshnet-vue/src/stores/store.customer.js"],"names":["DataLoader","CollectionUpdater","Processor","Vuex","ApiHost","ItemCustomer","DeviceStore","U","apiThenContent","api","error","getError","friendlyError","getErrorFriendly","Error","getContent","getItemOfId","context","id","state","processor","acquire","isString","dispatch","items","item","find","getItemsOfIds","ids","isArray","results","map","init","Stores","deviceStore","customerStore","Store","lastModified","dataLoader","timeout","loadData","request","url","send","content","optArray","fromData","setData","data","commit","Date","now","getData","getters","mutations","time","isLoading","devices","actions","refresh","doTimeout","getItems","generateCustomersAcross","customers","customer","toData","services","orders","optCustomer","eCustomer","eName","optString","name","ePhoneNumber","phoneNumber","ePhoneNumberValue","value","phoneNumberValue","push","service","serviceGroups","order","orderGroups","serviceGroup","orderGroup","addItem","arg","POST","body","onId","getItem","removeItemOfId","_id","DELETE","filter","x","updateNamePhoneNumberOfId","PUT","onUpdate","item1","item2","updateDescriptionOfId","description","getDevices","getDeviceById","getDevicesByIds","addDevice","removeDevice","updateDeviceSpecifications","updateDeviceDescription"],"mappings":"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","sourcesContent":["import DataLoader from \"./tools/DataLoader\";\r\nimport CollectionUpdater from \"./tools/CollectionUpdater\";\r\nimport Processor from \"./tools/Processor.js\";\r\n\r\nimport Vuex from \"vuex\";\r\nimport ApiHost from \"@/host/ApiHost.js\";\r\nimport ItemCustomer from \"../items/Customer.js\";\r\nimport DeviceStore from \"./store.device.js\";\r\nimport U from \"@/U\";\r\n\r\nconst apiThenContent = (api) => {\r\n\tlet error = api.getError();\r\n\tlet friendlyError = api.getErrorFriendly();\r\n\r\n\tif (error) throw new Error(error);\r\n\tif (friendlyError) throw new Error(friendlyError);\r\n\treturn api.getContent();\r\n};\r\nconst getItemOfId = async (context, id = \"\") => {\r\n\treturn context.state.processor.acquire(\"getItemOfId\", async () => {\r\n\t\tif (!U.isString(id)) return null;\r\n\t\tconst items = await context.dispatch(\"getItems\");\r\n\t\tconst item = items.find((item) => item.id === id);\r\n\t\treturn item ? item : null;\r\n\t});\r\n};\r\nconst getItemsOfIds = async (context, ids = []) => {\r\n\treturn context.state.processor.acquire(\"getItemsOfIds\", async () => {\r\n\t\tif (!U.isArray(ids)) return [];\r\n\r\n\t\tconst items = await context.dispatch(\"getItems\");\r\n\t\tconst results = ids.map((id) => {\r\n\t\t\tconst item = items.find((item) => item.id === id);\r\n\t\t\treturn item ? item : null;\r\n\t\t});\r\n\t\treturn results;\r\n\t});\r\n};\r\n\r\nexport default {\r\n\tinit(Stores) {\r\n\t\tconst deviceStore = DeviceStore.init(Stores);\r\n\r\n\t\tconst customerStore = new Vuex.Store({\r\n\t\t\tstate: {\r\n\t\t\t\tlastModified: 0,\r\n\t\t\t\tdataLoader: new DataLoader({ timeout: 1000 * 60 * 10 }) // 10min\r\n\t\t\t\t\t.processor(() => customerStore.state.processor)\r\n\t\t\t\t\t.loadData(async () => {\r\n\t\t\t\t\t\tconst api = await ApiHost.request().url(\"customer/list\").send();\r\n\t\t\t\t\t\tconst content = apiThenContent(api);\r\n\t\t\t\t\t\tconst items = U.optArray(content).map((content) => {\r\n\t\t\t\t\t\t\treturn new ItemCustomer(Stores).fromData(content);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\treturn items;\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.setData((data) => {\r\n\t\t\t\t\t\tcustomerStore.commit(\"items\", U.optArray(data));\r\n\t\t\t\t\t\tcustomerStore.commit(\"lastModified\", Date.now());\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.getData(() => customerStore.getters.items),\r\n\t\t\t\titems: [],\r\n\t\t\t\tprocessor: new Processor(),\r\n\t\t\t},\r\n\t\t\tmutations: {\r\n\t\t\t\tlastModified: (state, time) => (state.lastModified = time),\r\n\t\t\t\titems: (state, items) => (state.items = items),\r\n\t\t\t},\r\n\t\t\tgetters: {\r\n\t\t\t\tlastModified: (state) => state.lastModified,\r\n\t\t\t\tisLoading: (state) => {\r\n\t\t\t\t\treturn state.processor.isLoading() || deviceStore.getters.isLoading;\r\n\t\t\t\t},\r\n\t\t\t\titems: (state) => state.items,\r\n\r\n\t\t\t\t// legacy\r\n\r\n\t\t\t\tdevices: () => deviceStore.getters.items,\r\n\t\t\t},\r\n\t\t\tactions: {\r\n\t\t\t\tasync refresh(context) {\r\n\t\t\t\t\tawait context.state.processor.acquire(\"refresh\", async () => {\r\n\t\t\t\t\t\tcontext.state.dataLoader.doTimeout();\r\n\t\t\t\t\t\tawait context.dispatch(\"getItems\");\r\n\t\t\t\t\t});\r\n\t\t\t\t\tawait deviceStore.dispatch(\"refresh\");\r\n\t\t\t\t},\r\n\r\n\t\t\t\tasync getItems(context) {\r\n\t\t\t\t\treturn context.state.processor.acquire(\"getItems\", async () => {\r\n\t\t\t\t\t\treturn context.state.dataLoader.data();\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t\tasync getItemOfId(context, id = \"\") {\r\n\t\t\t\t\treturn getItemOfId(context, id);\r\n\t\t\t\t},\r\n\t\t\t\tasync getItemsOfIds(context, ids = []) {\r\n\t\t\t\t\treturn getItemsOfIds(context, ids);\r\n\t\t\t\t},\r\n\r\n\t\t\t\tasync generateCustomersAcross(context) {\r\n\t\t\t\t\tconst customers = (await context.dispatch(\"getItems\")).map(\r\n\t\t\t\t\t\t(customer) => {\r\n\t\t\t\t\t\t\tcustomer = new ItemCustomer(Stores).fromData(customer.toData());\r\n\t\t\t\t\t\t\tcustomer.services = [];\r\n\t\t\t\t\t\t\tcustomer.orders = [];\r\n\r\n\t\t\t\t\t\t\treturn customer;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t);\r\n\t\t\t\t\tconst optCustomer = (eCustomer) => {\r\n\t\t\t\t\t\tlet customer = customers.find((customer) => {\r\n\t\t\t\t\t\t\tconst eName = U.optString(customer.name);\r\n\t\t\t\t\t\t\tconst ePhoneNumber = customer.phoneNumber;\r\n\t\t\t\t\t\t\tconst ePhoneNumberValue = ePhoneNumber ? ePhoneNumber.value : \"\";\r\n\r\n\t\t\t\t\t\t\tconst name = U.optString(eCustomer.name);\r\n\t\t\t\t\t\t\tconst phoneNumber = eCustomer.phoneNumber;\r\n\t\t\t\t\t\t\tconst phoneNumberValue = phoneNumber ? phoneNumber.value : \"\";\r\n\r\n\t\t\t\t\t\t\treturn eName === name && ePhoneNumberValue === phoneNumberValue;\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif (!customer) {\r\n\t\t\t\t\t\t\tcustomer = new ItemCustomer(Stores).fromData(eCustomer.toData());\r\n\t\t\t\t\t\t\tcustomer.services = [];\r\n\t\t\t\t\t\t\tcustomer.orders = [];\r\n\t\t\t\t\t\t\tcustomers.push(customer);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn customer;\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tconst serviceGroups = await Stores.service.dispatch(\r\n\t\t\t\t\t\t\"getGroupsByCustomer\",\r\n\t\t\t\t\t);\r\n\t\t\t\t\tconst orderGroups = await Stores.order.dispatch(\r\n\t\t\t\t\t\t\"getGroupsByCustomer\",\r\n\t\t\t\t\t);\r\n\t\t\t\t\tfor (const serviceGroup of serviceGroups) {\r\n\t\t\t\t\t\toptCustomer(serviceGroup.customer).services.push(\r\n\t\t\t\t\t\t\t...serviceGroup.items,\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor (const orderGroup of orderGroups) {\r\n\t\t\t\t\t\toptCustomer(orderGroup.customer).orders.push(...orderGroup.items);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn customers;\r\n\t\t\t\t},\r\n\r\n\t\t\t\tasync addItem(context, arg = {}) {\r\n\t\t\t\t\treturn context.state.processor.acquire(\"addItem\", async () => {\r\n\t\t\t\t\t\tlet data = new ItemCustomer(Stores).fromData(arg).toData();\r\n\t\t\t\t\t\tdelete data.id;\r\n\t\t\t\t\t\tlet api = await ApiHost.request()\r\n\t\t\t\t\t\t\t.POST()\r\n\t\t\t\t\t\t\t.url(\"customer/add\")\r\n\t\t\t\t\t\t\t.body({ content: data })\r\n\t\t\t\t\t\t\t.send();\r\n\t\t\t\t\t\tlet content = apiThenContent(api);\r\n\t\t\t\t\t\tlet item = new ItemCustomer(Stores).fromData(content);\r\n\t\t\t\t\t\titem = new CollectionUpdater(context)\r\n\t\t\t\t\t\t\t.onId((item) => item.id)\r\n\t\t\t\t\t\t\t.getItem(item);\r\n\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t\tasync removeItemOfId(context, arg = { _id }) {\r\n\t\t\t\t\treturn context.state.processor.acquire(\"removeItemOfId\", async () => {\r\n\t\t\t\t\t\tconst { _id } = arg;\r\n\t\t\t\t\t\tconst api = await ApiHost.request()\r\n\t\t\t\t\t\t\t.DELETE()\r\n\t\t\t\t\t\t\t.url(\"customer/remove\")\r\n\t\t\t\t\t\t\t.body({ content: { _id } })\r\n\t\t\t\t\t\t\t.send();\r\n\t\t\t\t\t\tconst content = apiThenContent(api);\r\n\t\t\t\t\t\tconst item = new ItemCustomer(Stores).fromData(content);\r\n\t\t\t\t\t\tconst items = context.state.items.filter((x) => {\r\n\t\t\t\t\t\t\treturn x.id !== item.id;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tcontext.commit(\"items\", items);\r\n\t\t\t\t\t\tcontext.commit(\"lastModified\", Date.now());\r\n\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\r\n\t\t\t\tasync updateNamePhoneNumberOfId(\r\n\t\t\t\t\tcontext,\r\n\t\t\t\t\targ = { _id, name, phoneNumber },\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn context.state.processor.acquire(\r\n\t\t\t\t\t\t\"updateNamePhoneNumberOfItemId\",\r\n\t\t\t\t\t\tasync () => {\r\n\t\t\t\t\t\t\tlet { _id, name, phoneNumber } = arg;\r\n\t\t\t\t\t\t\tlet api = await ApiHost.request()\r\n\t\t\t\t\t\t\t\t.PUT()\r\n\t\t\t\t\t\t\t\t.url(\"customer/update/namePhoneNumber\")\r\n\t\t\t\t\t\t\t\t.body({ content: { _id, name, phoneNumber } })\r\n\t\t\t\t\t\t\t\t.send();\r\n\t\t\t\t\t\t\tlet content = apiThenContent(api);\r\n\t\t\t\t\t\t\tlet item = new ItemCustomer(Stores).fromData(content);\r\n\t\t\t\t\t\t\titem = new CollectionUpdater(context)\r\n\t\t\t\t\t\t\t\t.onId((item) => item.id)\r\n\t\t\t\t\t\t\t\t.onUpdate((item1, item2) => {\r\n\t\t\t\t\t\t\t\t\titem1.name = item2.name;\r\n\t\t\t\t\t\t\t\t\titem1.phoneNumber = item2.phoneNumber;\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t.getItem(item);\r\n\t\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t\tasync updateDescriptionOfId(context, arg = { _id, description }) {\r\n\t\t\t\t\treturn context.state.processor.acquire(\r\n\t\t\t\t\t\t\"updateDescriptionOfId\",\r\n\t\t\t\t\t\tasync () => {\r\n\t\t\t\t\t\t\tlet { _id, description } = arg;\r\n\t\t\t\t\t\t\tlet api = await ApiHost.request()\r\n\t\t\t\t\t\t\t\t.PUT()\r\n\t\t\t\t\t\t\t\t.url(\"customer/update/description\")\r\n\t\t\t\t\t\t\t\t.body({ content: { _id, description } })\r\n\t\t\t\t\t\t\t\t.send();\r\n\t\t\t\t\t\t\tlet content = apiThenContent(api);\r\n\t\t\t\t\t\t\tlet item = new ItemCustomer(Stores).fromData(content);\r\n\t\t\t\t\t\t\titem = new CollectionUpdater(context)\r\n\t\t\t\t\t\t\t\t.onId((item) => item.id)\r\n\t\t\t\t\t\t\t\t.onUpdate((item1, item2) => {\r\n\t\t\t\t\t\t\t\t\titem1.description = item2.description;\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t.getItem(item);\r\n\t\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// legacy\r\n\r\n\t\t\t\tgetDevices: () => deviceStore.dispatch(\"getItems\"),\r\n\t\t\t\tgetDeviceById: (context, id) => deviceStore.dispatch(\"getItemOfId\", id),\r\n\t\t\t\tgetDevicesByIds: (context, ids) =>\r\n\t\t\t\t\tdeviceStore.dispatch(\"getItemsOfIds\", ids),\r\n\t\t\t\taddDevice: (context, arg) => deviceStore.dispatch(\"addItem\", arg),\r\n\t\t\t\tremoveDevice: (context, arg) =>\r\n\t\t\t\t\tdeviceStore.dispatch(\"removeItemOfId\", arg),\r\n\t\t\t\tupdateDeviceSpecifications: (context, arg) =>\r\n\t\t\t\t\tdeviceStore.dispatch(\"updateSpecificationsOfId\", arg),\r\n\t\t\t\tupdateDeviceDescription: (context, arg) =>\r\n\t\t\t\t\tdeviceStore.dispatch(\"updateDescriptionOfId\", arg),\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\treturn customerStore;\r\n\t},\r\n};\r\n"]}]}