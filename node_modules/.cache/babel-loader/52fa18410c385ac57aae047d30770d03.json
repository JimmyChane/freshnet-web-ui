{"remainingRequest":"C:\\dev\\freshnet-vue\\node_modules\\babel-loader\\lib\\index.js!C:\\dev\\freshnet-vue\\src\\stores\\store.category.js","dependencies":[{"path":"C:\\dev\\freshnet-vue\\src\\stores\\store.category.js","mtime":1666954339570},{"path":"C:\\dev\\freshnet-vue\\babel.config.js","mtime":1662650914175},{"path":"C:\\dev\\freshnet-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1662650916242},{"path":"C:\\dev\\freshnet-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1662650915901}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/dev/freshnet-vue/src/stores/store.category.js"],"names":["Vuex","ApiHost","Category","DataLoader","Processor","U","init","Stores","store","Store","state","lastModified","dataLoader","timeout","processor","loadData","request","url","send","api","error","getError","content","getContent","Error","items","optArray","map","fromData","setData","data","commit","Date","now","getData","getters","mutations","time","isLoading","actions","refresh","context","acquire","doTimeout","dispatch","getItems","getItemOfId","id","find","item","getItemOfKey","key"],"mappings":"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","sourcesContent":["import Vuex from \"vuex\";\r\nimport ApiHost from \"@/host/ApiHost.js\";\r\nimport Category from \"@/items/Category.js\";\r\nimport DataLoader from \"./tools/DataLoader\";\r\nimport Processor from \"./tools/Processor.js\";\r\nimport U from \"@/U\";\r\n\r\nexport default {\r\n\tinit(Stores) {\r\n\t\tconst store = new Vuex.Store({\r\n\t\t\tstate: {\r\n\t\t\t\tlastModified: 0,\r\n\t\t\t\tdataLoader: new DataLoader({ timeout: 1000 * 60 * 10 }) // 10min\r\n\t\t\t\t\t.processor(() => store.state.processor)\r\n\t\t\t\t\t.loadData(async () => {\r\n\t\t\t\t\t\tconst api = await ApiHost.request()\r\n\t\t\t\t\t\t\t.url(\"productv2/category/list/\")\r\n\t\t\t\t\t\t\t.send();\r\n\t\t\t\t\t\tconst error = api.getError();\r\n\t\t\t\t\t\tconst content = api.getContent();\r\n\t\t\t\t\t\tif (error) throw new Error(error);\r\n\t\t\t\t\t\tconst items = U.optArray(content).map((content) => {\r\n\t\t\t\t\t\t\treturn new Category(Stores).fromData(content);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\treturn items;\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.setData((data) => {\r\n\t\t\t\t\t\tstore.commit(\"items\", U.optArray(data));\r\n\t\t\t\t\t\tstore.commit(\"lastModified\", Date.now());\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.getData(() => store.getters.items),\r\n\t\t\t\titems: [],\r\n\t\t\t\tprocessor: new Processor(),\r\n\t\t\t},\r\n\t\t\tmutations: {\r\n\t\t\t\tlastModified: (state, time) => (state.lastModified = time),\r\n\t\t\t\titems: (state, items) => (state.items = items),\r\n\t\t\t},\r\n\t\t\tgetters: {\r\n\t\t\t\tlastModified: (state) => state.lastModified,\r\n\t\t\t\tisLoading: (state) => state.processor.isLoading(),\r\n\t\t\t\titems: (state) => state.items,\r\n\t\t\t},\r\n\t\t\tactions: {\r\n\t\t\t\tasync refresh(context) {\r\n\t\t\t\t\treturn context.state.processor.acquire(\"refresh\", async () => {\r\n\t\t\t\t\t\tcontext.state.dataLoader.doTimeout();\r\n\t\t\t\t\t\tawait context.dispatch(\"getItems\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\r\n\t\t\t\tasync getItems(context) {\r\n\t\t\t\t\treturn context.state.processor.acquire(\"getItems\", async () => {\r\n\t\t\t\t\t\treturn context.state.dataLoader.data();\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t\tasync getItemOfId(context, id = \"\") {\r\n\t\t\t\t\treturn context.state.processor.acquire(\"getItemOfId\", async () => {\r\n\t\t\t\t\t\tconst items = await context.dispatch(\"getItems\");\r\n\t\t\t\t\t\treturn items.find((item) => item.id === id);\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t\tasync getItemOfKey(context, key = \"\") {\r\n\t\t\t\t\treturn context.state.processor.acquire(\"getItemOfKey\", async () => {\r\n\t\t\t\t\t\tconst items = await context.dispatch(\"getItems\");\r\n\t\t\t\t\t\treturn items.find((item) => item.key === key);\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\treturn store;\r\n\t},\r\n};\r\n"]}]}