{"remainingRequest":"C:\\dev\\freshnet-v2\\vue\\node_modules\\babel-loader\\lib\\index.js!C:\\dev\\freshnet-v2\\vue\\src\\stores\\components\\Processor.js","dependencies":[{"path":"C:\\dev\\freshnet-v2\\vue\\src\\stores\\components\\Processor.js","mtime":1666020150057},{"path":"C:\\dev\\freshnet-v2\\vue\\babel.config.js","mtime":1662650914175},{"path":"C:\\dev\\freshnet-v2\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1662650916242},{"path":"C:\\dev\\freshnet-v2\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1662650915901}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6XFxkZXZcXGZyZXNobmV0LXYyXFx2dWVcXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lXFxoZWxwZXJzXFxlc21cXGFzeW5jVG9HZW5lcmF0b3IuanMiOwppbXBvcnQgX2NsYXNzQ2FsbENoZWNrIGZyb20gIkM6XFxkZXZcXGZyZXNobmV0LXYyXFx2dWVcXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lXFxoZWxwZXJzXFxlc21cXGNsYXNzQ2FsbENoZWNrLmpzIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICJDOlxcZGV2XFxmcmVzaG5ldC12MlxcdnVlXFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZVxcaGVscGVyc1xcZXNtXFxjcmVhdGVDbGFzcy5qcyI7CmltcG9ydCBfY2xhc3NQcml2YXRlTWV0aG9kSW5pdFNwZWMgZnJvbSAiQzpcXGRldlxcZnJlc2huZXQtdjJcXHZ1ZVxcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWVcXGhlbHBlcnNcXGVzbVxcY2xhc3NQcml2YXRlTWV0aG9kSW5pdFNwZWMuanMiOwppbXBvcnQgX2NsYXNzUHJpdmF0ZUZpZWxkSW5pdFNwZWMgZnJvbSAiQzpcXGRldlxcZnJlc2huZXQtdjJcXHZ1ZVxcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWVcXGhlbHBlcnNcXGVzbVxcY2xhc3NQcml2YXRlRmllbGRJbml0U3BlYy5qcyI7CmltcG9ydCBfY2xhc3NQcml2YXRlTWV0aG9kR2V0IGZyb20gIkM6XFxkZXZcXGZyZXNobmV0LXYyXFx2dWVcXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lXFxoZWxwZXJzXFxlc21cXGNsYXNzUHJpdmF0ZU1ldGhvZEdldC5qcyI7CmltcG9ydCBfY2xhc3NQcml2YXRlRmllbGRHZXQgZnJvbSAiQzpcXGRldlxcZnJlc2huZXQtdjJcXHZ1ZVxcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWVcXGhlbHBlcnNcXGVzbVxcY2xhc3NQcml2YXRlRmllbGRHZXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maW5kLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLndlYWstbWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLndlYWstc2V0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlLmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwoKdmFyIF9rZXlzID0gLyojX19QVVJFX18qL25ldyBXZWFrTWFwKCk7Cgp2YXIgX2FkZCA9IC8qI19fUFVSRV9fKi9uZXcgV2Vha1NldCgpOwoKdmFyIF9yZW1vdmUgPSAvKiNfX1BVUkVfXyovbmV3IFdlYWtTZXQoKTsKCnZhciBQcm9jZXNzb3IgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIGZ1bmN0aW9uIFByb2Nlc3NvcigpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBQcm9jZXNzb3IpOwoKICAgIF9jbGFzc1ByaXZhdGVNZXRob2RJbml0U3BlYyh0aGlzLCBfcmVtb3ZlKTsKCiAgICBfY2xhc3NQcml2YXRlTWV0aG9kSW5pdFNwZWModGhpcywgX2FkZCk7CgogICAgX2NsYXNzUHJpdmF0ZUZpZWxkSW5pdFNwZWModGhpcywgX2tleXMsIHsKICAgICAgd3JpdGFibGU6IHRydWUsCiAgICAgIHZhbHVlOiBbXQogICAgfSk7CiAgfQoKICBfY3JlYXRlQ2xhc3MoUHJvY2Vzc29yLCBbewogICAga2V5OiAiYWNxdWlyZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX2FjcXVpcmUgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoa2V5LCBjYWxsYmFjaykgewogICAgICAgIHZhciByZXN1bHQ7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDA7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBfY2xhc3NQcml2YXRlTWV0aG9kR2V0KHRoaXMsIF9hZGQsIF9hZGQyKS5jYWxsKHRoaXMsIGtleSk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA1OwogICAgICAgICAgICAgICAgcmV0dXJuIGNhbGxiYWNrKCk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgIHJlc3VsdCA9IF9jb250ZXh0LnNlbnQ7CgogICAgICAgICAgICAgICAgX2NsYXNzUHJpdmF0ZU1ldGhvZEdldCh0aGlzLCBfcmVtb3ZlLCBfcmVtb3ZlMikuY2FsbCh0aGlzLCBrZXkpOwoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIHJlc3VsdCk7CgogICAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTA7CiAgICAgICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDApOwoKICAgICAgICAgICAgICAgIF9jbGFzc1ByaXZhdGVNZXRob2RHZXQodGhpcywgX3JlbW92ZSwgX3JlbW92ZTIpLmNhbGwodGhpcywga2V5KTsKCiAgICAgICAgICAgICAgICB0aHJvdyBfY29udGV4dC50MDsKCiAgICAgICAgICAgICAgY2FzZSAxNDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIHRoaXMsIFtbMCwgMTBdXSk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIGFjcXVpcmUoX3gsIF94MikgewogICAgICAgIHJldHVybiBfYWNxdWlyZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gYWNxdWlyZTsKICAgIH0oKQogIH0sIHsKICAgIGtleTogImlzTG9hZGluZyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gaXNMb2FkaW5nKGtleSkgewogICAgICBpZiAodHlwZW9mIGtleSAhPT0gInN0cmluZyIpIHJldHVybiBfY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX2tleXMpLmxlbmd0aCA+IDA7CiAgICAgIHJldHVybiAhIV9jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfa2V5cykuZmluZChmdW5jdGlvbiAobG9hZGluZykgewogICAgICAgIHJldHVybiBsb2FkaW5nID09PSBrZXk7CiAgICAgIH0pOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIFByb2Nlc3NvcjsKfSgpOwoKZnVuY3Rpb24gX2FkZDIoX3gzKSB7CiAgcmV0dXJuIF9hZGQzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn0KCmZ1bmN0aW9uIF9hZGQzKCkgewogIF9hZGQzID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMihrZXkpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIsIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgICAgICAgICAgICB2YXIgcnVuID0gZnVuY3Rpb24gcnVuKCkgewogICAgICAgICAgICAgICAgaWYgKF90aGlzLmlzTG9hZGluZyhrZXkpKSByZXR1cm4gc2V0VGltZW91dChydW4sIDEwMCk7CgogICAgICAgICAgICAgICAgX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KF90aGlzLCBfa2V5cykucHVzaChrZXkpOwoKICAgICAgICAgICAgICAgIHJlc29sdmUoa2V5KTsKICAgICAgICAgICAgICB9OwoKICAgICAgICAgICAgICBydW4oKTsKICAgICAgICAgICAgfSkpOwoKICAgICAgICAgIGNhc2UgMToKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZTIpOwogIH0pKTsKICByZXR1cm4gX2FkZDMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfQoKZnVuY3Rpb24gX3JlbW92ZTIoa2V5KSB7CiAgdmFyIGluZGV4ID0gX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9rZXlzKS5pbmRleE9mKGtleSk7CgogIGlmIChpbmRleCA+IC0xKSBfY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX2tleXMpLnNwbGljZShpbmRleCwgMSk7Cn0KCmV4cG9ydCBkZWZhdWx0IFByb2Nlc3Nvcjs="},{"version":3,"sources":["C:/dev/freshnet-v2/vue/src/stores/components/Processor.js"],"names":["Processor","key","callback","result","length","find","loading","Promise","resolve","reject","run","isLoading","setTimeout","push","index","indexOf","splice"],"mappings":";;;;;;;;;;;;;;;;;;;;;;IAAMA,S;;;;;;;;;;aACG;;;;;;;6EAkBR,iBAAcC,GAAd,EAAmBC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAEQ,IAFR,oBAEQ,IAFR,EAEkBD,GAFlB;;AAAA;AAAA;AAAA,uBAGuBC,QAAQ,EAH/B;;AAAA;AAGQC,gBAAAA,MAHR;;AAIE,2EAAaF,GAAb;;AAJF,iDAKSE,MALT;;AAAA;AAAA;AAAA;;AAOE,2EAAaF,GAAb;;AAPF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;WAYA,mBAAUA,GAAV,EAAe;AACd,UAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B,OAAO,mCAAWG,MAAX,GAAoB,CAA3B;AAC7B,aAAO,CAAC,CAAC,mCAAWC,IAAX,CAAgB,UAACC,OAAD;AAAA,eAAaA,OAAO,KAAKL,GAAzB;AAAA,OAAhB,CAAT;AACA;;;;;;;;;;;oFA/BUA,G;;;;;;;8CACH,IAAIM,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACvC,kBAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AACjB,oBAAI,KAAI,CAACC,SAAL,CAAeV,GAAf,CAAJ,EAAyB,OAAOW,UAAU,CAACF,GAAD,EAAM,GAAN,CAAjB;;AAEzB,sCAAA,KAAI,QAAJ,CAAWG,IAAX,CAAgBZ,GAAhB;;AACAO,gBAAAA,OAAO,CAACP,GAAD,CAAP;AACA,eALD;;AAMAS,cAAAA,GAAG;AACH,aARM,C;;;;;;;;;;;;kBAUAT,G,EAAK;AACZ,MAAMa,KAAK,GAAG,mCAAWC,OAAX,CAAmBd,GAAnB,CAAd;;AACA,MAAIa,KAAK,GAAG,CAAC,CAAb,EAAgB,mCAAWE,MAAX,CAAkBF,KAAlB,EAAyB,CAAzB;AAChB;;AAoBF,eAAed,SAAf","sourcesContent":["class Processor {\r\n\t#keys = [];\r\n\r\n\tasync #add(key) {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst run = () => {\r\n\t\t\t\tif (this.isLoading(key)) return setTimeout(run, 100);\r\n\r\n\t\t\t\tthis.#keys.push(key);\r\n\t\t\t\tresolve(key);\r\n\t\t\t};\r\n\t\t\trun();\r\n\t\t});\r\n\t}\r\n\t#remove(key) {\r\n\t\tconst index = this.#keys.indexOf(key);\r\n\t\tif (index > -1) this.#keys.splice(index, 1);\r\n\t}\r\n\r\n\tasync acquire(key, callback) {\r\n\t\ttry {\r\n\t\t\tawait this.#add(key);\r\n\t\t\tconst result = await callback();\r\n\t\t\tthis.#remove(key);\r\n\t\t\treturn result;\r\n\t\t} catch (error) {\r\n\t\t\tthis.#remove(key);\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t}\r\n\r\n\tisLoading(key) {\r\n\t\tif (typeof key !== \"string\") return this.#keys.length > 0;\r\n\t\treturn !!this.#keys.find((loading) => loading === key);\r\n\t}\r\n}\r\n\r\nexport default Processor;\r\n"]}]}