{"remainingRequest":"C:\\dev\\freshnet-v2\\vue\\node_modules\\babel-loader\\lib\\index.js!C:\\dev\\freshnet-v2\\vue\\src\\stores\\store.device.js","dependencies":[{"path":"C:\\dev\\freshnet-v2\\vue\\src\\stores\\store.device.js","mtime":1666953101741},{"path":"C:\\dev\\freshnet-v2\\vue\\babel.config.js","mtime":1662650914175},{"path":"C:\\dev\\freshnet-v2\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1662650916242},{"path":"C:\\dev\\freshnet-v2\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1662650915901}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/dev/freshnet-v2/vue/src/stores/store.device.js"],"names":["DataLoader","CollectionUpdater","Processor","Vuex","ApiHost","ItemCustomerDevice","apiThenContent","api","error","getError","friendlyError","getErrorFriendly","Error","getContent","updateThenItem","context","id","callback","items","state","item","find","commit","Date","now","getItemOfId","processor","acquire","dispatch","getItemsOfIds","ids","U","isArray","results","map","init","Stores","deviceStore","Store","lastModified","dataLoader","timeout","loadData","request","url","send","content","contents","Array","fromData","setData","data","getData","getters","mutations","time","isLoading","actions","refresh","doTimeout","getItems","addItem","arg","toData","POST","body","onId","getItem","customer","customers","ownerCustomerId","deviceIds","push","removeItemOfId","DELETE","deviceId","filter","existing","updateSpecificationsOfId","_id","specifications","PUT","itemNow","updateDescriptionOfId","description"],"mappings":";;;;;;;;AAAA,OAAOA,UAAP,MAAuB,oBAAvB;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AAEA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,kBAAP,MAA+B,4BAA/B;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,GAAD,EAAS;AAC/B,MAAIC,KAAK,GAAGD,GAAG,CAACE,QAAJ,EAAZ;AACA,MAAIC,aAAa,GAAGH,GAAG,CAACI,gBAAJ,EAApB;AAEA,MAAIH,KAAJ,EAAW,MAAM,IAAII,KAAJ,CAAUJ,KAAV,CAAN;AACX,MAAIE,aAAJ,EAAmB,MAAM,IAAIE,KAAJ,CAAUF,aAAV,CAAN;AACnB,SAAOH,GAAG,CAACM,UAAJ,EAAP;AACA,CAPD;;AAQA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,OAAD,EAAUC,EAAV,EAAcC,QAAd,EAA2B;AACjD,MAAMC,KAAK,GAAGH,OAAO,CAACI,KAAR,CAAcD,KAA5B;AACA,MAAME,IAAI,GAAGF,KAAK,CAACG,IAAN,CAAW,UAACD,IAAD;AAAA,WAAUA,IAAI,CAACJ,EAAL,KAAYA,EAAtB;AAAA,GAAX,CAAb;AACAC,EAAAA,QAAQ,CAACG,IAAD,CAAR;AACAL,EAAAA,OAAO,CAACO,MAAR,CAAe,OAAf,EAAwBJ,KAAxB;AACAH,EAAAA,OAAO,CAACO,MAAR,CAAe,cAAf,EAA+BC,IAAI,CAACC,GAAL,EAA/B;AACA,SAAOJ,IAAP;AACA,CAPD;;AAQA,IAAMK,YAAW;AAAA,qEAAG,kBAAOV,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgBC,YAAAA,EAAhB,8DAAqB,EAArB;AAAA,8CACZD,OAAO,CAACI,KAAR,CAAcO,SAAd,CAAwBC,OAAxB,CAAgC,aAAhC,uEAA+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACjD,OAAOX,EAAP,KAAc,QADmC;AAAA;AAAA;AAAA;;AAAA,uDAClB,IADkB;;AAAA;AAAA;AAAA,6BAEjCD,OAAO,CAACa,QAAR,CAAiB,UAAjB,CAFiC;;AAAA;AAE/CV,sBAAAA,KAF+C;AAG/CE,sBAAAA,IAH+C,GAGxCF,KAAK,CAACG,IAAN,CAAW,UAACD,IAAD;AAAA,+BAAUA,IAAI,CAACJ,EAAL,KAAYA,EAAtB;AAAA,uBAAX,CAHwC;AAAA,uDAI9CI,IAAI,GAAGA,IAAH,GAAU,IAJgC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA/C,GADY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXK,WAAW;AAAA;AAAA;AAAA,GAAjB;;AAQA,IAAMI,cAAa;AAAA,sEAAG,kBAAOd,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgBe,YAAAA,GAAhB,8DAAsB,EAAtB;AAAA,8CACdf,OAAO,CAACI,KAAR,CAAcO,SAAd,CAAwBC,OAAxB,CAAgC,eAAhC,uEAAiD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAClDI,CAAC,CAACC,OAAF,CAAUF,GAAV,CADkD;AAAA;AAAA;AAAA;;AAAA,wDAC3B,EAD2B;;AAAA;AAAA;AAAA,6BAGnCf,OAAO,CAACa,QAAR,CAAiB,UAAjB,CAHmC;;AAAA;AAGjDV,sBAAAA,KAHiD;AAIjDe,sBAAAA,OAJiD,GAIvCH,GAAG,CAACI,GAAJ,CAAQ,UAAClB,EAAD,EAAQ;AAC/B,4BAAMI,IAAI,GAAGF,KAAK,CAACG,IAAN,CAAW,UAACD,IAAD;AAAA,iCAAUA,IAAI,CAACJ,EAAL,KAAYA,EAAtB;AAAA,yBAAX,CAAb;AACA,+BAAOI,IAAI,GAAGA,IAAH,GAAU,IAArB;AACA,uBAHe,CAJuC;AAAA,wDAQhDa,OARgD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAjD,GADc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbJ,aAAa;AAAA;AAAA;AAAA,GAAnB;;AAaA,eAAe;AACdM,EAAAA,IADc,gBACTC,MADS,EACD;AACZ,QAAMC,WAAW,GAAG,IAAIlC,IAAI,CAACmC,KAAT,CAAe;AAClCnB,MAAAA,KAAK,EAAE;AACNoB,QAAAA,YAAY,EAAE,CADR;AAENC,QAAAA,UAAU,EAAE,IAAIxC,UAAJ,CAAe;AAAEyC,UAAAA,OAAO,EAAE,OAAO,EAAP,GAAY;AAAvB,SAAf,EAA4C;AAA5C,SACVf,SADU,CACA;AAAA,iBAAMW,WAAW,CAAClB,KAAZ,CAAkBO,SAAxB;AAAA,SADA,EAEVgB,QAFU,uEAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACOtC,OAAO,CAACuC,OAAR,GACdC,GADc,CACV,sBADU,EAEdC,IAFc,EADP;;AAAA;AACLtC,kBAAAA,GADK;AAILuC,kBAAAA,OAJK,GAIKxC,cAAc,CAACC,GAAD,CAJnB;AAKLwC,kBAAAA,QALK,GAKMC,KAAK,CAAChB,OAAN,CAAcc,OAAd,IAAyBA,OAAzB,GAAmC,EALzC;AAML5B,kBAAAA,KANK,GAMG6B,QAAQ,CAACb,GAAT,CAAa,UAACY,OAAD,EAAa;AACrC,2BAAO,IAAIzC,kBAAJ,CAAuB+B,MAAvB,EAA+Ba,QAA/B,CAAwCH,OAAxC,CAAP;AACA,mBAFW,CANH;AAAA,oDASF5B,KATE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFC,IAaVgC,OAbU,CAaF,UAACC,IAAD,EAAU;AAClBd,UAAAA,WAAW,CAACf,MAAZ,CAAmB,OAAnB,EAA4B0B,KAAK,CAAChB,OAAN,CAAcmB,IAAd,IAAsBA,IAAtB,GAA6B,EAAzD;AACAd,UAAAA,WAAW,CAACf,MAAZ,CAAmB,cAAnB,EAAmCC,IAAI,CAACC,GAAL,EAAnC;AACA,SAhBU,EAiBV4B,OAjBU,CAiBF;AAAA,iBAAMf,WAAW,CAACgB,OAAZ,CAAoBnC,KAA1B;AAAA,SAjBE,CAFN;AAoBNA,QAAAA,KAAK,EAAE,EApBD;AAqBNQ,QAAAA,SAAS,EAAE,IAAIxB,SAAJ;AArBL,OAD2B;AAwBlCoD,MAAAA,SAAS,EAAE;AACVf,QAAAA,YAAY,EAAE,sBAACpB,KAAD,EAAQoC,IAAR;AAAA,iBAAkBpC,KAAK,CAACoB,YAAN,GAAqBgB,IAAvC;AAAA,SADJ;AAEVrC,QAAAA,KAAK,EAAE,eAACC,KAAD,EAAQD,MAAR;AAAA,iBAAmBC,KAAK,CAACD,KAAN,GAAcA,MAAjC;AAAA;AAFG,OAxBuB;AA4BlCmC,MAAAA,OAAO,EAAE;AACRd,QAAAA,YAAY,EAAE,sBAACpB,KAAD;AAAA,iBAAWA,KAAK,CAACoB,YAAjB;AAAA,SADN;AAERiB,QAAAA,SAAS,EAAE,mBAACrC,KAAD;AAAA,iBAAWA,KAAK,CAACO,SAAN,CAAgB8B,SAAhB,EAAX;AAAA,SAFH;AAGRtC,QAAAA,KAAK,EAAE,eAACC,KAAD;AAAA,iBAAWA,KAAK,CAACD,KAAjB;AAAA;AAHC,OA5ByB;AAiClCuC,MAAAA,OAAO,EAAE;AACFC,QAAAA,OADE,mBACM3C,OADN,EACe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDACfA,OAAO,CAACI,KAAR,CAAcO,SAAd,CAAwBC,OAAxB,CAAgC,SAAhC,uEAA2C;AAAA;AAAA;AAAA;AAAA;AACjDZ,8BAAAA,OAAO,CAACI,KAAR,CAAcqB,UAAd,CAAyBmB,SAAzB;AADiD;AAAA,qCAE3C5C,OAAO,CAACa,QAAR,CAAiB,UAAjB,CAF2C;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAA3C,GADe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKtB,SANO;AAQFgC,QAAAA,QARE,oBAQO7C,OARP,EAQgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDAChBA,OAAO,CAACI,KAAR,CAAcO,SAAd,CAAwBC,OAAxB,CAAgC,UAAhC,uEAA4C;AAAA;AAAA;AAAA;AAAA;AAAA,gEAC3CZ,OAAO,CAACI,KAAR,CAAcqB,UAAd,CAAyBW,IAAzB,EAD2C;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAA5C,GADgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIvB,SAZO;AAaF1B,QAAAA,WAbE,uBAaUV,OAbV,EAa4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAATC,oBAAAA,EAAS,0EAAJ,EAAI;AAAA,uDAC5BS,YAAW,CAACV,OAAD,EAAUC,EAAV,CADiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEnC,SAfO;AAgBFa,QAAAA,aAhBE,yBAgBYd,OAhBZ,EAgB+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAVe,oBAAAA,GAAU,6EAAJ,EAAI;AAAA,uDAC/BD,cAAa,CAACd,OAAD,EAAUe,GAAV,CADkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEtC,SAlBO;AAoBF+B,QAAAA,OApBE,mBAoBM9C,OApBN,EAoByB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAV+C,oBAAAA,GAAU,6EAAJ,EAAI;AAAA,uDACzB/C,OAAO,CAACI,KAAR,CAAcO,SAAd,CAAwBC,OAAxB,CAAgC,SAAhC,uEAA2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAC7CwB,8BAAAA,IAD6C,GACtC,IAAI9C,kBAAJ,CAAuB+B,MAAvB,EAA+Ba,QAA/B,CAAwCa,GAAxC,EAA6CC,MAA7C,EADsC;AAEjD,qCAAOZ,IAAI,CAACnC,EAAZ;AAFiD;AAAA,qCAGjCZ,OAAO,CAACuC,OAAR,GACdqB,IADc,GAEdpB,GAFc,CAEV,qBAFU,EAGdqB,IAHc,CAGT;AAAEnB,gCAAAA,OAAO,EAAEK;AAAX,+BAHS,EAIdN,IAJc,EAHiC;;AAAA;AAG7CtC,8BAAAA,GAH6C;AAQ7CuC,8BAAAA,OAR6C,GAQnCxC,cAAc,CAACC,GAAD,CARqB;AAS7Ca,8BAAAA,IAT6C,GAStC,IAAIf,kBAAJ,CAAuB+B,MAAvB,EAA+Ba,QAA/B,CAAwCH,OAAxC,CATsC;AAUjD1B,8BAAAA,IAAI,GAAG,IAAInB,iBAAJ,CAAsBc,OAAtB,EACLmD,IADK,CACA,UAAC9C,IAAD;AAAA,uCAAUA,IAAI,CAACJ,EAAf;AAAA,+BADA,EAELmD,OAFK,CAEG/C,IAFH,CAAP;AAGIgD,8BAAAA,QAb6C,GAalChC,MAAM,CAACgC,QAAP,CAAgBf,OAAhB,CAAwBgB,SAAxB,CAAkChD,IAAlC,CACd,UAAC+C,QAAD,EAAc;AACb,uCAAOA,QAAQ,CAACpD,EAAT,KAAgBI,IAAI,CAACkD,eAA5B;AACA,+BAHa,CAbkC;AAkBjD,kCAAIF,QAAJ,EAAcA,QAAQ,CAACG,SAAT,CAAmBC,IAAnB,CAAwBpD,IAAI,CAACJ,EAA7B;AAlBmC,iEAmB1CI,IAnB0C;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAA3C,GADyB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsBhC,SA1CO;AA2CFqD,QAAAA,cA3CE,0BA2Ca1D,OA3Cb,EA2CgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAV+C,oBAAAA,GAAU,6EAAJ,EAAI;AAAA,uDAChC/C,OAAO,CAACI,KAAR,CAAcO,SAAd,CAAwBC,OAAxB,CAAgC,gBAAhC,uEAAkD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCACxCvB,OAAO,CAACuC,OAAR,GACd+B,MADc,GAEd9B,GAFc,CAEV,wBAFU,EAGdqB,IAHc,CAGT;AACLnB,gCAAAA,OAAO,EAAE;AACRwB,kCAAAA,eAAe,EAAER,GAAG,CAACQ,eADb;AAERK,kCAAAA,QAAQ,EAAEb,GAAG,CAAC9C;AAFN;AADJ,+BAHS,EASd6B,IATc,EADwC;;AAAA;AACpDtC,8BAAAA,GADoD;AAWpDuC,8BAAAA,OAXoD,GAW1CxC,cAAc,CAACC,GAAD,CAX4B;AAYpDa,8BAAAA,IAZoD,GAY7C,IAAIf,kBAAJ,CAAuB+B,MAAvB,EAA+Ba,QAA/B,CAAwCH,OAAxC,CAZ6C;AAapDsB,8BAAAA,QAboD,GAazChC,MAAM,CAACgC,QAAP,CAAgBf,OAAhB,CAAwBgB,SAAxB,CAAkChD,IAAlC,CACd,UAAC+C,QAAD,EAAc;AACb,uCAAOA,QAAQ,CAACpD,EAAT,KAAgBI,IAAI,CAACkD,eAA5B;AACA,+BAHa,CAbyC;AAkBxDF,8BAAAA,QAAQ,CAACG,SAAT,GAAqBH,QAAQ,CAACG,SAAT,CAAmBK,MAAnB,CAA0B,UAACD,QAAD,EAAc;AAC5D,uCAAOA,QAAQ,KAAKvD,IAAI,CAACJ,EAAzB;AACA,+BAFoB,CAArB;AAGIE,8BAAAA,KArBoD,GAqB5CH,OAAO,CAACI,KAAR,CAAcD,KArB8B;AAsBxDA,8BAAAA,KAAK,GAAGA,KAAK,CAAC0D,MAAN,CAAa,UAACC,QAAD;AAAA,uCAAcA,QAAQ,CAAC7D,EAAT,KAAgBI,IAAI,CAACJ,EAAnC;AAAA,+BAAb,CAAR;AACAD,8BAAAA,OAAO,CAACO,MAAR,CAAe,OAAf,EAAwBJ,KAAxB;AACAH,8BAAAA,OAAO,CAACO,MAAR,CAAe,cAAf,EAA+BC,IAAI,CAACC,GAAL,EAA/B;AAxBwD,iEAyBjDJ,IAzBiD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAlD,GADgC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4BvC,SAvEO;AAyEF0D,QAAAA,wBAzEE,oCAyEuB/D,OAzEvB,EAyE+D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA/B+C,oBAAAA,GAA+B,6EAAzB;AAAEiB,sBAAAA,GAAG,EAAHA,GAAF;AAAOC,sBAAAA,cAAc,EAAdA;AAAP,qBAAyB;AAAA,uDAC/DjE,OAAO,CAACI,KAAR,CAAcO,SAAd,CAAwBC,OAAxB,CACN,0BADM,uEAEN;AAAA;;AAAA;AAAA;AAAA;AAAA;AACOoD,8BAAAA,GADP,GAC+BjB,GAD/B,CACOiB,GADP,EACYC,cADZ,GAC+BlB,GAD/B,CACYkB,cADZ;AAAA;AAAA,qCAEiB5E,OAAO,CAACuC,OAAR,GACdsC,GADc,GAEdrC,GAFc,CAEV,uCAFU,EAGdqB,IAHc,CAGT;AAAEnB,gCAAAA,OAAO,EAAE;AAAEiC,kCAAAA,GAAG,EAAHA,GAAF;AAAOC,kCAAAA,cAAc,EAAdA;AAAP;AAAX,+BAHS,EAIdnC,IAJc,EAFjB;;AAAA;AAEKtC,8BAAAA,GAFL;AAOKuC,8BAAAA,OAPL,GAOexC,cAAc,CAACC,GAAD,CAP7B;AAQKa,8BAAAA,IARL,GAQY,IAAIf,kBAAJ,CAAuB+B,MAAvB,EAA+Ba,QAA/B,CAAwCH,OAAxC,CARZ;AASC1B,8BAAAA,IAAI,GAAGN,cAAc,CAACC,OAAD,EAAUK,IAAI,CAACJ,EAAf,EAAmB,UAACkE,OAAD,EAAa;AACpD,uCAAQA,OAAO,CAACF,cAAR,GAAyB5D,IAAI,CAAC4D,cAAtC;AACA,+BAFoB,CAArB;AATD,iEAYQ5D,IAZR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFM,GAD+D;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBtE,SA3FO;AA4FF+D,QAAAA,qBA5FE,iCA4FoBpE,OA5FpB,EA4FyD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA5B+C,oBAAAA,GAA4B,6EAAtB;AAAEiB,sBAAAA,GAAG,EAAHA,GAAF;AAAOK,sBAAAA,WAAW,EAAXA;AAAP,qBAAsB;AAAA,uDACzDrE,OAAO,CAACI,KAAR,CAAcO,SAAd,CAAwBC,OAAxB,CACN,uBADM,uEAEN;AAAA;;AAAA;AAAA;AAAA;AAAA;AACOoD,8BAAAA,GADP,GAC4BjB,GAD5B,CACOiB,GADP,EACYK,WADZ,GAC4BtB,GAD5B,CACYsB,WADZ;AAAA;AAAA,qCAEiBhF,OAAO,CAACuC,OAAR,GACdsC,GADc,GAEdrC,GAFc,CAEV,oCAFU,EAGdqB,IAHc,CAGT;AAAEnB,gCAAAA,OAAO,EAAE;AAAEiC,kCAAAA,GAAG,EAAHA,GAAF;AAAOK,kCAAAA,WAAW,EAAXA;AAAP;AAAX,+BAHS,EAIdvC,IAJc,EAFjB;;AAAA;AAEKtC,8BAAAA,GAFL;AAOKuC,8BAAAA,OAPL,GAOexC,cAAc,CAACC,GAAD,CAP7B;AAQKa,8BAAAA,IARL,GAQY,IAAIf,kBAAJ,CAAuB+B,MAAvB,EAA+Ba,QAA/B,CAAwCH,OAAxC,CARZ;AASC1B,8BAAAA,IAAI,GAAGN,cAAc,CAACC,OAAD,EAAUK,IAAI,CAACJ,EAAf,EAAmB,UAACkE,OAAD,EAAa;AACpD,uCAAQA,OAAO,CAACE,WAAR,GAAsBhE,IAAI,CAACgE,WAAnC;AACA,+BAFoB,CAArB;AATD,iEAYQhE,IAZR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFM,GADyD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBhE;AA9GO;AAjCyB,KAAf,CAApB;AAmJA,WAAOiB,WAAP;AACA;AAtJa,CAAf","sourcesContent":["import DataLoader from \"./tools/DataLoader\";\r\nimport CollectionUpdater from \"./tools/CollectionUpdater\";\r\nimport Processor from \"./tools/Processor.js\";\r\n\r\nimport Vuex from \"vuex\";\r\nimport ApiHost from \"@/host/ApiHost.js\";\r\nimport ItemCustomerDevice from \"../items/CustomerDevice.js\";\r\n\r\nconst apiThenContent = (api) => {\r\n\tlet error = api.getError();\r\n\tlet friendlyError = api.getErrorFriendly();\r\n\r\n\tif (error) throw new Error(error);\r\n\tif (friendlyError) throw new Error(friendlyError);\r\n\treturn api.getContent();\r\n};\r\nconst updateThenItem = (context, id, callback) => {\r\n\tconst items = context.state.items;\r\n\tconst item = items.find((item) => item.id === id);\r\n\tcallback(item);\r\n\tcontext.commit(\"items\", items);\r\n\tcontext.commit(\"lastModified\", Date.now());\r\n\treturn item;\r\n};\r\nconst getItemOfId = async (context, id = \"\") => {\r\n\treturn context.state.processor.acquire(\"getItemOfId\", async () => {\r\n\t\tif (typeof id !== \"string\") return null;\r\n\t\tconst items = await context.dispatch(\"getItems\");\r\n\t\tconst item = items.find((item) => item.id === id);\r\n\t\treturn item ? item : null;\r\n\t});\r\n};\r\nconst getItemsOfIds = async (context, ids = []) => {\r\n\treturn context.state.processor.acquire(\"getItemsOfIds\", async () => {\r\n\t\tif (!U.isArray(ids)) return [];\r\n\r\n\t\tconst items = await context.dispatch(\"getItems\");\r\n\t\tconst results = ids.map((id) => {\r\n\t\t\tconst item = items.find((item) => item.id === id);\r\n\t\t\treturn item ? item : null;\r\n\t\t});\r\n\t\treturn results;\r\n\t});\r\n};\r\n\r\nexport default {\r\n\tinit(Stores) {\r\n\t\tconst deviceStore = new Vuex.Store({\r\n\t\t\tstate: {\r\n\t\t\t\tlastModified: 0,\r\n\t\t\t\tdataLoader: new DataLoader({ timeout: 1000 * 60 * 10 }) // 10min\r\n\t\t\t\t\t.processor(() => deviceStore.state.processor)\r\n\t\t\t\t\t.loadData(async () => {\r\n\t\t\t\t\t\tlet api = await ApiHost.request()\r\n\t\t\t\t\t\t\t.url(\"customer/device/list\")\r\n\t\t\t\t\t\t\t.send();\r\n\t\t\t\t\t\tlet content = apiThenContent(api);\r\n\t\t\t\t\t\tlet contents = Array.isArray(content) ? content : [];\r\n\t\t\t\t\t\tlet items = contents.map((content) => {\r\n\t\t\t\t\t\t\treturn new ItemCustomerDevice(Stores).fromData(content);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\treturn items;\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.setData((data) => {\r\n\t\t\t\t\t\tdeviceStore.commit(\"items\", Array.isArray(data) ? data : []);\r\n\t\t\t\t\t\tdeviceStore.commit(\"lastModified\", Date.now());\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.getData(() => deviceStore.getters.items),\r\n\t\t\t\titems: [],\r\n\t\t\t\tprocessor: new Processor(),\r\n\t\t\t},\r\n\t\t\tmutations: {\r\n\t\t\t\tlastModified: (state, time) => (state.lastModified = time),\r\n\t\t\t\titems: (state, items) => (state.items = items),\r\n\t\t\t},\r\n\t\t\tgetters: {\r\n\t\t\t\tlastModified: (state) => state.lastModified,\r\n\t\t\t\tisLoading: (state) => state.processor.isLoading(),\r\n\t\t\t\titems: (state) => state.items,\r\n\t\t\t},\r\n\t\t\tactions: {\r\n\t\t\t\tasync refresh(context) {\r\n\t\t\t\t\treturn context.state.processor.acquire(\"refresh\", async () => {\r\n\t\t\t\t\t\tcontext.state.dataLoader.doTimeout();\r\n\t\t\t\t\t\tawait context.dispatch(\"getItems\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\r\n\t\t\t\tasync getItems(context) {\r\n\t\t\t\t\treturn context.state.processor.acquire(\"getItems\", async () => {\r\n\t\t\t\t\t\treturn context.state.dataLoader.data();\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t\tasync getItemOfId(context, id = \"\") {\r\n\t\t\t\t\treturn getItemOfId(context, id);\r\n\t\t\t\t},\r\n\t\t\t\tasync getItemsOfIds(context, ids = []) {\r\n\t\t\t\t\treturn getItemsOfIds(context, ids);\r\n\t\t\t\t},\r\n\r\n\t\t\t\tasync addItem(context, arg = {}) {\r\n\t\t\t\t\treturn context.state.processor.acquire(\"addItem\", async () => {\r\n\t\t\t\t\t\tlet data = new ItemCustomerDevice(Stores).fromData(arg).toData();\r\n\t\t\t\t\t\tdelete data.id;\r\n\t\t\t\t\t\tlet api = await ApiHost.request()\r\n\t\t\t\t\t\t\t.POST()\r\n\t\t\t\t\t\t\t.url(\"customer/device/add\")\r\n\t\t\t\t\t\t\t.body({ content: data })\r\n\t\t\t\t\t\t\t.send();\r\n\t\t\t\t\t\tlet content = apiThenContent(api);\r\n\t\t\t\t\t\tlet item = new ItemCustomerDevice(Stores).fromData(content);\r\n\t\t\t\t\t\titem = new CollectionUpdater(context)\r\n\t\t\t\t\t\t\t.onId((item) => item.id)\r\n\t\t\t\t\t\t\t.getItem(item);\r\n\t\t\t\t\t\tlet customer = Stores.customer.getters.customers.find(\r\n\t\t\t\t\t\t\t(customer) => {\r\n\t\t\t\t\t\t\t\treturn customer.id === item.ownerCustomerId;\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tif (customer) customer.deviceIds.push(item.id);\r\n\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t\tasync removeItemOfId(context, arg = {}) {\r\n\t\t\t\t\treturn context.state.processor.acquire(\"removeItemById\", async () => {\r\n\t\t\t\t\t\tlet api = await ApiHost.request()\r\n\t\t\t\t\t\t\t.DELETE()\r\n\t\t\t\t\t\t\t.url(\"customer/device/remove\")\r\n\t\t\t\t\t\t\t.body({\r\n\t\t\t\t\t\t\t\tcontent: {\r\n\t\t\t\t\t\t\t\t\townerCustomerId: arg.ownerCustomerId,\r\n\t\t\t\t\t\t\t\t\tdeviceId: arg.id,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.send();\r\n\t\t\t\t\t\tlet content = apiThenContent(api);\r\n\t\t\t\t\t\tlet item = new ItemCustomerDevice(Stores).fromData(content);\r\n\t\t\t\t\t\tlet customer = Stores.customer.getters.customers.find(\r\n\t\t\t\t\t\t\t(customer) => {\r\n\t\t\t\t\t\t\t\treturn customer.id === item.ownerCustomerId;\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tcustomer.deviceIds = customer.deviceIds.filter((deviceId) => {\r\n\t\t\t\t\t\t\treturn deviceId !== item.id;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tlet items = context.state.items;\r\n\t\t\t\t\t\titems = items.filter((existing) => existing.id !== item.id);\r\n\t\t\t\t\t\tcontext.commit(\"items\", items);\r\n\t\t\t\t\t\tcontext.commit(\"lastModified\", Date.now());\r\n\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\r\n\t\t\t\tasync updateSpecificationsOfId(context, arg = { _id, specifications }) {\r\n\t\t\t\t\treturn context.state.processor.acquire(\r\n\t\t\t\t\t\t\"updateSpecificationsOfId\",\r\n\t\t\t\t\t\tasync () => {\r\n\t\t\t\t\t\t\tlet { _id, specifications } = arg;\r\n\t\t\t\t\t\t\tlet api = await ApiHost.request()\r\n\t\t\t\t\t\t\t\t.PUT()\r\n\t\t\t\t\t\t\t\t.url(\"customer/device/update/specifications\")\r\n\t\t\t\t\t\t\t\t.body({ content: { _id, specifications } })\r\n\t\t\t\t\t\t\t\t.send();\r\n\t\t\t\t\t\t\tlet content = apiThenContent(api);\r\n\t\t\t\t\t\t\tlet item = new ItemCustomerDevice(Stores).fromData(content);\r\n\t\t\t\t\t\t\titem = updateThenItem(context, item.id, (itemNow) => {\r\n\t\t\t\t\t\t\t\treturn (itemNow.specifications = item.specifications);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t\tasync updateDescriptionOfId(context, arg = { _id, description }) {\r\n\t\t\t\t\treturn context.state.processor.acquire(\r\n\t\t\t\t\t\t\"updateDescriptionOfId\",\r\n\t\t\t\t\t\tasync () => {\r\n\t\t\t\t\t\t\tlet { _id, description } = arg;\r\n\t\t\t\t\t\t\tlet api = await ApiHost.request()\r\n\t\t\t\t\t\t\t\t.PUT()\r\n\t\t\t\t\t\t\t\t.url(\"customer/device/update/description\")\r\n\t\t\t\t\t\t\t\t.body({ content: { _id, description } })\r\n\t\t\t\t\t\t\t\t.send();\r\n\t\t\t\t\t\t\tlet content = apiThenContent(api);\r\n\t\t\t\t\t\t\tlet item = new ItemCustomerDevice(Stores).fromData(content);\r\n\t\t\t\t\t\t\titem = updateThenItem(context, item.id, (itemNow) => {\r\n\t\t\t\t\t\t\t\treturn (itemNow.description = item.description);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\treturn deviceStore;\r\n\t},\r\n};\r\n"]}]}