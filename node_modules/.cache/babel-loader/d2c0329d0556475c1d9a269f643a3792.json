{"remainingRequest":"C:\\development\\freshnet-v2\\vue\\node_modules\\babel-loader\\lib\\index.js!C:\\development\\freshnet-v2\\vue\\src\\stores\\store.setting.js","dependencies":[{"path":"C:\\development\\freshnet-v2\\vue\\src\\stores\\store.setting.js","mtime":1663518638170},{"path":"C:\\development\\freshnet-v2\\vue\\babel.config.js","mtime":1662650914175},{"path":"C:\\development\\freshnet-v2\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1662650916242},{"path":"C:\\development\\freshnet-v2\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1662650915901}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/development/freshnet-v2/vue/src/stores/store.setting.js"],"names":["Vuex","ApiHost","DataLoader","Processor","SettingModule","init","Stores","store","Store","state","dataLoader","timeout","processor","loadData","request","url","send","api","error","getError","content","getContent","Error","undefined","contents","Array","isArray","settings","map","setData","data","commit","getData","getters","items","mutations","isLoading","actions","refresh","context","acquire","doTimeout","dispatch","getItems","updateItem","arg","key","value","setting","PUT","body","item","find","push"],"mappings":"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","sourcesContent":["import Vuex from \"vuex\";\r\nimport ApiHost from \"@/host/ApiHost.js\";\r\nimport DataLoader from \"./components/DataLoader\";\r\nimport Processor from \"./components/Processor.js\";\r\nimport SettingModule from \"@/../../express/data_structures/Setting.js\";\r\n\r\nexport default {\r\n   init(Stores) {\r\n      const store = new Vuex.Store({\r\n         state: {\r\n            dataLoader: new DataLoader({ timeout: 1000 * 5 }) // 5sec\r\n               .processor(() => store.state.processor)\r\n               .loadData(async () => {\r\n                  const api = await ApiHost.request().url(\"settingv2/\").send();\r\n                  const error = api.getError();\r\n                  const content = api.getContent();\r\n                  if (error) throw new Error(error);\r\n                  if (content === undefined || content === null)\r\n                     throw new Error(\"content not valid\");\r\n                  const contents = Array.isArray(content) ? content : [];\r\n                  const settings = contents.map((content) => new SettingModule(content));\r\n                  return settings;\r\n               })\r\n               .setData((data) => store.commit(\"items\", Array.isArray(data) ? data : []))\r\n               .getData(() => store.getters.items),\r\n            items: [],\r\n            processor: new Processor(),\r\n         },\r\n         mutations: { items: (state, items) => (state.items = items) },\r\n         getters: {\r\n            isLoading: (state) => state.processor.isLoading(),\r\n            items: (state) => state.items,\r\n         },\r\n         actions: {\r\n            async refresh(context) {\r\n               return context.state.processor.acquire(\"refresh\", async () => {\r\n                  context.state.dataLoader.doTimeout();\r\n                  await context.dispatch(\"getItems\");\r\n               });\r\n            },\r\n            async getItems(context) {\r\n               return context.state.processor.acquire(\"getItems\", async () => {\r\n                  return context.state.dataLoader.data();\r\n               });\r\n            },\r\n            async updateItem(context, arg = { key: \"\", value: 0 }) {\r\n               return context.state.processor.acquire(\"updateItem\", async () => {\r\n                  const { key, value } = arg;\r\n                  const setting = new SettingModule({ key, value });\r\n\r\n                  const api = await ApiHost.request()\r\n                     .PUT()\r\n                     .url(`settingv2/key/${setting.key}`)\r\n                     .body({ content: setting })\r\n                     .send();\r\n\r\n                  const error = api.getError();\r\n                  const content = api.getContent();\r\n                  if (error) throw new Error();\r\n                  if (content === undefined || content === null)\r\n                     throw new Error(\"content not valid\");\r\n\r\n                  let { items } = context.state;\r\n                  let item = items.find((item) => item.key === content.key);\r\n\r\n                  if (item) {\r\n                     item.value = content.value;\r\n                  } else {\r\n                     item = content;\r\n                     items.push(item);\r\n                  }\r\n\r\n                  context.commit(\"items\", items);\r\n                  return context.getters.items;\r\n               });\r\n            },\r\n         },\r\n      });\r\n\r\n      return store;\r\n   },\r\n};\r\n"]}]}