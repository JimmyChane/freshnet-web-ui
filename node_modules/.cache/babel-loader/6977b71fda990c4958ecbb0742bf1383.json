{"remainingRequest":"C:\\dev\\freshnet-v2\\vue\\node_modules\\babel-loader\\lib\\index.js!C:\\dev\\freshnet-v2\\vue\\src\\stores\\store.database.js","dependencies":[{"path":"C:\\dev\\freshnet-v2\\vue\\src\\stores\\store.database.js","mtime":1666953101300},{"path":"C:\\dev\\freshnet-v2\\vue\\babel.config.js","mtime":1662650914175},{"path":"C:\\dev\\freshnet-v2\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1662650916242},{"path":"C:\\dev\\freshnet-v2\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1662650915901}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICJDOlxcZGV2XFxmcmVzaG5ldC12MlxcdnVlXFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZVxcaGVscGVyc1xcZXNtXFx0b0NvbnN1bWFibGVBcnJheS5qcyI7CmltcG9ydCBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlciBmcm9tICJDOlxcZGV2XFxmcmVzaG5ldC12MlxcdnVlXFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZVxcaGVscGVyc1xcZXNtXFxjcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyLmpzIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6XFxkZXZcXGZyZXNobmV0LXYyXFx2dWVcXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lXFxoZWxwZXJzXFxlc21cXGFzeW5jVG9HZW5lcmF0b3IuanMiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maW5kLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCBWdWV4IGZyb20gInZ1ZXgiOwppbXBvcnQgQXBpSG9zdCBmcm9tICJAL2hvc3QvQXBpSG9zdC5qcyI7CmltcG9ydCBEYXRhTG9hZGVyIGZyb20gIi4vdG9vbHMvRGF0YUxvYWRlciI7CmltcG9ydCBQcm9jZXNzb3IgZnJvbSAiLi90b29scy9Qcm9jZXNzb3IuanMiOwoKdmFyIHVybENvbGxlY3Rpb25zID0gZnVuY3Rpb24gdXJsQ29sbGVjdGlvbnMoZGF0YWJhc2UpIHsKICByZXR1cm4gImRhdGFiYXNlL2RhdGFiYXNlLyIuY29uY2F0KGRhdGFiYXNlLCAiL2NvbGxlY3Rpb25zIik7Cn07Cgp2YXIgdXJsRG9jdW1lbnRzID0gZnVuY3Rpb24gdXJsRG9jdW1lbnRzKGRhdGFiYXNlLCBjb2xsZWN0aW9uKSB7CiAgcmV0dXJuICJkYXRhYmFzZS9kYXRhYmFzZS8iLmNvbmNhdChkYXRhYmFzZSwgIi9jb2xsZWN0aW9uLyIpLmNvbmNhdChjb2xsZWN0aW9uLCAiL2RvY3VtZW50cyIpOwp9OwoKdmFyIHVybEltcG9ydHMgPSBmdW5jdGlvbiB1cmxJbXBvcnRzKCkgewogIHJldHVybiAiZGF0YWJhc2UvaW1wb3J0cyI7Cn07CgpleHBvcnQgZGVmYXVsdCB7CiAgaW5pdDogZnVuY3Rpb24gaW5pdChTdG9yZXMpIHsKICAgIHZhciBzdG9yZSA9IG5ldyBWdWV4LlN0b3JlKHsKICAgICAgc3RhdGU6IHsKICAgICAgICBsYXN0TW9kaWZpZWQ6IDAsCiAgICAgICAgZGF0YUxvYWRlcjogbmV3IERhdGFMb2FkZXIoewogICAgICAgICAgdGltZW91dDogMTAwMCAqIDUKICAgICAgICB9KSAvLyA1c2VjCiAgICAgICAgLnByb2Nlc3NvcihmdW5jdGlvbiAoKSB7CiAgICAgICAgICByZXR1cm4gc3RvcmUuc3RhdGUucHJvY2Vzc29yOwogICAgICAgIH0pLmxvYWREYXRhKCAvKiNfX1BVUkVfXyovX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgICAgdmFyIGFwaSwgYmFzZUluZm87CiAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgICAgICByZXR1cm4gQXBpSG9zdC5yZXF1ZXN0KCkuUE9TVCgpLnVybCgiZGF0YWJhc2UvaW5mbyIpLnNlbmQoKTsKCiAgICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICAgIGFwaSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICAgIGJhc2VJbmZvID0gYXBpLmdldENvbnRlbnQoKTsKICAgICAgICAgICAgICAgICAgc3RvcmUuZGlzcGF0Y2goImxvYWREYXRhYmFzZXMiKTsKICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgYmFzZUluZm8pOwoKICAgICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgICB9KSkpLnNldERhdGEoZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICAgIHN0b3JlLmNvbW1pdCgiYmFzZUluZm8iLCBkYXRhID8gZGF0YSA6IG51bGwpOwogICAgICAgICAgc3RvcmUuY29tbWl0KCJsYXN0TW9kaWZpZWQiLCBEYXRlLm5vdygpKTsKICAgICAgICB9KS5nZXREYXRhKGZ1bmN0aW9uICgpIHsKICAgICAgICAgIHJldHVybiBzdG9yZS5nZXR0ZXJzLmJhc2VJbmZvOwogICAgICAgIH0pLAogICAgICAgIGJhc2VJbmZvOiBudWxsLAogICAgICAgIGl0ZW1zOiBbXSwKICAgICAgICBwcm9jZXNzb3I6IG5ldyBQcm9jZXNzb3IoKQogICAgICB9LAogICAgICBtdXRhdGlvbnM6IHsKICAgICAgICBsYXN0TW9kaWZpZWQ6IGZ1bmN0aW9uIGxhc3RNb2RpZmllZChzdGF0ZSwgdGltZSkgewogICAgICAgICAgcmV0dXJuIHN0YXRlLmxhc3RNb2RpZmllZCA9IHRpbWU7CiAgICAgICAgfSwKICAgICAgICBiYXNlSW5mbzogZnVuY3Rpb24gYmFzZUluZm8oc3RhdGUsIF9iYXNlSW5mbykgewogICAgICAgICAgcmV0dXJuIHN0YXRlLmJhc2VJbmZvID0gX2Jhc2VJbmZvOwogICAgICAgIH0sCiAgICAgICAgaXRlbXM6IGZ1bmN0aW9uIGl0ZW1zKHN0YXRlLCBfaXRlbXMpIHsKICAgICAgICAgIHJldHVybiBzdGF0ZS5pdGVtcyA9IF9pdGVtczsKICAgICAgICB9CiAgICAgIH0sCiAgICAgIGdldHRlcnM6IHsKICAgICAgICBsYXN0TW9kaWZpZWQ6IGZ1bmN0aW9uIGxhc3RNb2RpZmllZChzdGF0ZSkgewogICAgICAgICAgcmV0dXJuIHN0YXRlLmxhc3RNb2RpZmllZDsKICAgICAgICB9LAogICAgICAgIGlzTG9hZGluZzogZnVuY3Rpb24gaXNMb2FkaW5nKHN0YXRlKSB7CiAgICAgICAgICByZXR1cm4gc3RhdGUucHJvY2Vzc29yLmlzTG9hZGluZygpOwogICAgICAgIH0sCiAgICAgICAgYmFzZUluZm86IGZ1bmN0aW9uIGJhc2VJbmZvKHN0YXRlKSB7CiAgICAgICAgICByZXR1cm4gc3RhdGUuYmFzZUluZm87CiAgICAgICAgfSwKICAgICAgICBpdGVtczogZnVuY3Rpb24gaXRlbXMoc3RhdGUpIHsKICAgICAgICAgIHJldHVybiBzdGF0ZS5pdGVtczsKICAgICAgICB9CiAgICAgIH0sCiAgICAgIGFjdGlvbnM6IHsKICAgICAgICByZWZyZXNoOiBmdW5jdGlvbiByZWZyZXNoKGNvbnRleHQpIHsKICAgICAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuYWJydXB0KCJyZXR1cm4iLCBjb250ZXh0LnN0YXRlLnByb2Nlc3Nvci5hY3F1aXJlKCJyZWZyZXNoIiwgLyojX19QVVJFX18qL19hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgICAgICAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICAgICAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250ZXh0LnN0YXRlLmRhdGFMb2FkZXIuZG9UaW1lb3V0KCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMzsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNvbnRleHQuZGlzcGF0Y2goImxvYWRCYXNlSW5mbyIpOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICAgICAgICAgICAgICAgIH0pKSkpOwoKICAgICAgICAgICAgICAgICAgY2FzZSAxOgogICAgICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwgX2NhbGxlZTMpOwogICAgICAgICAgfSkpKCk7CiAgICAgICAgfSwKICAgICAgICBsb2FkQmFzZUluZm86IGZ1bmN0aW9uIGxvYWRCYXNlSW5mbyhjb250ZXh0KSB7CiAgICAgICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNSgpIHsKICAgICAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU1JChfY29udGV4dDUpIHsKICAgICAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDUucHJldiA9IF9jb250ZXh0NS5uZXh0KSB7CiAgICAgICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ1LmFicnVwdCgicmV0dXJuIiwgY29udGV4dC5zdGF0ZS5wcm9jZXNzb3IuYWNxdWlyZSgibG9hZEJhc2VJbmZvIiwgLyojX19QVVJFX18qL19hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTQoKSB7CiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQkKF9jb250ZXh0NCkgewogICAgICAgICAgICAgICAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICAgICAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ0LnByZXYgPSBfY29udGV4dDQubmV4dCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LmFicnVwdCgicmV0dXJuIiwgY29udGV4dC5zdGF0ZS5kYXRhTG9hZGVyLmRhdGEoKSk7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAxOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5zdG9wKCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICB9LCBfY2FsbGVlNCk7CiAgICAgICAgICAgICAgICAgICAgfSkpKSk7CgogICAgICAgICAgICAgICAgICBjYXNlIDE6CiAgICAgICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NS5zdG9wKCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LCBfY2FsbGVlNSk7CiAgICAgICAgICB9KSkoKTsKICAgICAgICB9LAogICAgICAgIGxvYWREYXRhYmFzZXM6IGZ1bmN0aW9uIGxvYWREYXRhYmFzZXMoY29udGV4dCkgewogICAgICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTcoKSB7CiAgICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNyQoX2NvbnRleHQ3KSB7CiAgICAgICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ3LnByZXYgPSBfY29udGV4dDcubmV4dCkgewogICAgICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Ny5hYnJ1cHQoInJldHVybiIsIGNvbnRleHQuc3RhdGUucHJvY2Vzc29yLmFjcXVpcmUoImxvYWREYXRhYmFzZXMiLCAvKiNfX1BVUkVfXyovX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNigpIHsKICAgICAgICAgICAgICAgICAgICAgIHZhciBhcGksIGNvbnRlbnQsIGl0ZW1zLCBfaXRlcmF0b3IsIF9zdGVwLCBkYXRhYmFzZTsKCiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTYkKF9jb250ZXh0NikgewogICAgICAgICAgICAgICAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICAgICAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ2LnByZXYgPSBfY29udGV4dDYubmV4dCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfY29udGV4dDYucHJldiA9IDA7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRleHQuY29tbWl0KCJpdGVtcyIsIFtdKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGV4dC5jb21taXQoImxhc3RNb2RpZmllZCIsIERhdGUubm93KCkpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfY29udGV4dDYubmV4dCA9IDU7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBBcGlIb3N0LnJlcXVlc3QoKS5QT1NUKCkudXJsKCJkYXRhYmFzZS9kYXRhYmFzZXMiKS5zZW5kKCk7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhcGkgPSBfY29udGV4dDYuc2VudDsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudCA9IGFwaS5nZXRDb250ZW50KCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW1zID0gY29udGVudC5tYXAoZnVuY3Rpb24gKGRhdGFiYXNlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IGRhdGFiYXNlLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sbGVjdGlvbnM6IFtdCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRleHQuY29tbWl0KCJpdGVtcyIsIGl0ZW1zKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2l0ZXJhdG9yID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIoaXRlbXMpOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgKF9pdGVyYXRvci5zKCk7ICEoX3N0ZXAgPSBfaXRlcmF0b3IubigpKS5kb25lOykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YWJhc2UgPSBfc3RlcC52YWx1ZTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRleHQuZGlzcGF0Y2goImxvYWRDb2xsZWN0aW9ucyIsIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YWJhc2U6IGRhdGFiYXNlLm5hbWUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2l0ZXJhdG9yLmUoZXJyKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBmaW5hbGx5IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfaXRlcmF0b3IuZigpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ2LmFicnVwdCgicmV0dXJuIiwgY29udGV4dC5nZXR0ZXJzLml0ZW1zKTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDE0OgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfY29udGV4dDYucHJldiA9IDE0OwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfY29udGV4dDYudDAgPSBfY29udGV4dDZbImNhdGNoIl0oMCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRleHQuY29tbWl0KCJpdGVtcyIsIFtdKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGV4dC5jb21taXQoImxhc3RNb2RpZmllZCIsIERhdGUubm93KCkpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBfY29udGV4dDYudDA7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAxOToKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDYuc3RvcCgpOwogICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgfSwgX2NhbGxlZTYsIG51bGwsIFtbMCwgMTRdXSk7CiAgICAgICAgICAgICAgICAgICAgfSkpKSk7CgogICAgICAgICAgICAgICAgICBjYXNlIDE6CiAgICAgICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Ny5zdG9wKCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LCBfY2FsbGVlNyk7CiAgICAgICAgICB9KSkoKTsKICAgICAgICB9LAogICAgICAgIGxvYWRDb2xsZWN0aW9uczogZnVuY3Rpb24gbG9hZENvbGxlY3Rpb25zKGNvbnRleHQpIHsKICAgICAgICAgIHZhciBfYXJndW1lbnRzID0gYXJndW1lbnRzOwogICAgICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTkoKSB7CiAgICAgICAgICAgIHZhciBhcmc7CiAgICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlOSQoX2NvbnRleHQ5KSB7CiAgICAgICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ5LnByZXYgPSBfY29udGV4dDkubmV4dCkgewogICAgICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAgICAgYXJnID0gX2FyZ3VtZW50cy5sZW5ndGggPiAxICYmIF9hcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IF9hcmd1bWVudHNbMV0gOiB7fTsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ5LmFicnVwdCgicmV0dXJuIiwgY29udGV4dC5zdGF0ZS5wcm9jZXNzb3IuYWNxdWlyZSgibG9hZENvbGxlY3Rpb25zIiwgLyojX19QVVJFX18qL19hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTgoKSB7CiAgICAgICAgICAgICAgICAgICAgICB2YXIgX2RiRm91bmQkY29sbGVjdGlvbnM7CgogICAgICAgICAgICAgICAgICAgICAgdmFyIGRhdGFiYXNlLCBhcGksIGNvbnRlbnQsIGNvbGxlY3Rpb25zLCBkYkZvdW5kLCBfaXRlcmF0b3IyLCBfc3RlcDIsIGNvbGxlY3Rpb247CgogICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU4JChfY29udGV4dDgpIHsKICAgICAgICAgICAgICAgICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0OC5wcmV2ID0gX2NvbnRleHQ4Lm5leHQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YWJhc2UgPSBhcmcuZGF0YWJhc2U7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jb250ZXh0OC5uZXh0ID0gMzsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIEFwaUhvc3QucmVxdWVzdCgpLlBPU1QoKS51cmwodXJsQ29sbGVjdGlvbnMoZGF0YWJhc2UpKS5zZW5kKCk7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhcGkgPSBfY29udGV4dDguc2VudDsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudCA9IGFwaS5nZXRDb250ZW50KCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbGxlY3Rpb25zID0gY29udGVudC5tYXAoZnVuY3Rpb24gKGNvbGxlY3Rpb24pIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogY29sbGVjdGlvbiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50czogW10KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2NvbnRleHQ4Lm5leHQgPSA4OwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY29udGV4dC5kaXNwYXRjaCgiZmluZERhdGFiYXNlIiwgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFiYXNlOiBkYXRhYmFzZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRiRm91bmQgPSBfY29udGV4dDguc2VudDsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdoaWxlIChkYkZvdW5kLmNvbGxlY3Rpb25zLmxlbmd0aCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRiRm91bmQuY29sbGVjdGlvbnMuc3BsaWNlKDAsIGRiRm91bmQuY29sbGVjdGlvbnMubGVuZ3RoKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKF9kYkZvdW5kJGNvbGxlY3Rpb25zID0gZGJGb3VuZC5jb2xsZWN0aW9ucykucHVzaC5hcHBseShfZGJGb3VuZCRjb2xsZWN0aW9ucywgX3RvQ29uc3VtYWJsZUFycmF5KGNvbGxlY3Rpb25zKSk7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfaXRlcmF0b3IyID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIoZGJGb3VuZC5jb2xsZWN0aW9ucyk7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoX2l0ZXJhdG9yMi5zKCk7ICEoX3N0ZXAyID0gX2l0ZXJhdG9yMi5uKCkpLmRvbmU7KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xsZWN0aW9uID0gX3N0ZXAyLnZhbHVlOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGV4dC5kaXNwYXRjaCgibG9hZERvY3VtZW50cyIsIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YWJhc2U6IGRiRm91bmQubmFtZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sbGVjdGlvbjogY29sbGVjdGlvbi5uYW1lCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9pdGVyYXRvcjIuZShlcnIpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGZpbmFsbHkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9pdGVyYXRvcjIuZigpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ4LmFicnVwdCgicmV0dXJuIiwgZGJGb3VuZC5jb2xsZWN0aW9ucyk7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAxNDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDguc3RvcCgpOwogICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgfSwgX2NhbGxlZTgpOwogICAgICAgICAgICAgICAgICAgIH0pKSkpOwoKICAgICAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDkuc3RvcCgpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwgX2NhbGxlZTkpOwogICAgICAgICAgfSkpKCk7CiAgICAgICAgfSwKICAgICAgICBsb2FkRG9jdW1lbnRzOiBmdW5jdGlvbiBsb2FkRG9jdW1lbnRzKGNvbnRleHQpIHsKICAgICAgICAgIHZhciBfYXJndW1lbnRzMiA9IGFyZ3VtZW50czsKICAgICAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUxMSgpIHsKICAgICAgICAgICAgdmFyIGFyZzsKICAgICAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUxMSQoX2NvbnRleHQxMSkgewogICAgICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0MTEucHJldiA9IF9jb250ZXh0MTEubmV4dCkgewogICAgICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAgICAgYXJnID0gX2FyZ3VtZW50czIubGVuZ3RoID4gMSAmJiBfYXJndW1lbnRzMlsxXSAhPT0gdW5kZWZpbmVkID8gX2FyZ3VtZW50czJbMV0gOiB7fTsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQxMS5hYnJ1cHQoInJldHVybiIsIGNvbnRleHQuc3RhdGUucHJvY2Vzc29yLmFjcXVpcmUoImxvYWREb2N1bWVudHMiLCAvKiNfX1BVUkVfXyovX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMTAoKSB7CiAgICAgICAgICAgICAgICAgICAgICB2YXIgX2NvbGxlY3Rpb25Gb3VuZCRkb2N1OwoKICAgICAgICAgICAgICAgICAgICAgIHZhciBkYXRhYmFzZSwgY29sbGVjdGlvbiwgYXBpLCBkb2N1bWVudHMsIGNvbGxlY3Rpb25Gb3VuZDsKICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMTAkKF9jb250ZXh0MTApIHsKICAgICAgICAgICAgICAgICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0MTAucHJldiA9IF9jb250ZXh0MTAubmV4dCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhYmFzZSA9IGFyZy5kYXRhYmFzZSwgY29sbGVjdGlvbiA9IGFyZy5jb2xsZWN0aW9uOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfY29udGV4dDEwLm5leHQgPSAzOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gQXBpSG9zdC5yZXF1ZXN0KCkuUE9TVCgpLnVybCh1cmxEb2N1bWVudHMoZGF0YWJhc2UsIGNvbGxlY3Rpb24pKS5zZW5kKCk7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhcGkgPSBfY29udGV4dDEwLnNlbnQ7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50cyA9IGFwaS5nZXRDb250ZW50KCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jb250ZXh0MTAubmV4dCA9IDc7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjb250ZXh0LmRpc3BhdGNoKCJmaW5kQ29sbGVjdGlvbiIsIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhYmFzZTogZGF0YWJhc2UsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sbGVjdGlvbjogY29sbGVjdGlvbgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbGxlY3Rpb25Gb3VuZCA9IF9jb250ZXh0MTAuc2VudDsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdoaWxlIChjb2xsZWN0aW9uRm91bmQuZG9jdW1lbnRzLmxlbmd0aCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbGxlY3Rpb25Gb3VuZC5kb2N1bWVudHMuc3BsaWNlKDAsIGNvbGxlY3Rpb25Gb3VuZC5kb2N1bWVudHMubGVuZ3RoKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKF9jb2xsZWN0aW9uRm91bmQkZG9jdSA9IGNvbGxlY3Rpb25Gb3VuZC5kb2N1bWVudHMpLnB1c2guYXBwbHkoX2NvbGxlY3Rpb25Gb3VuZCRkb2N1LCBfdG9Db25zdW1hYmxlQXJyYXkoZG9jdW1lbnRzKSk7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQxMC5hYnJ1cHQoInJldHVybiIsIGNvbGxlY3Rpb25Gb3VuZC5kb2N1bWVudHMpOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQxMC5zdG9wKCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICB9LCBfY2FsbGVlMTApOwogICAgICAgICAgICAgICAgICAgIH0pKSkpOwoKICAgICAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDExLnN0b3AoKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sIF9jYWxsZWUxMSk7CiAgICAgICAgICB9KSkoKTsKICAgICAgICB9LAogICAgICAgIGltcG9ydHM6IGZ1bmN0aW9uIGltcG9ydHMoY29udGV4dCkgewogICAgICAgICAgdmFyIF9hcmd1bWVudHMzID0gYXJndW1lbnRzOwogICAgICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTEzKCkgewogICAgICAgICAgICB2YXIgYXJnOwogICAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTEzJChfY29udGV4dDEzKSB7CiAgICAgICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQxMy5wcmV2ID0gX2NvbnRleHQxMy5uZXh0KSB7CiAgICAgICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgICAgICBhcmcgPSBfYXJndW1lbnRzMy5sZW5ndGggPiAxICYmIF9hcmd1bWVudHMzWzFdICE9PSB1bmRlZmluZWQgPyBfYXJndW1lbnRzM1sxXSA6IHt9OwogICAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDEzLmFicnVwdCgicmV0dXJuIiwgY29udGV4dC5zdGF0ZS5wcm9jZXNzb3IuYWNxdWlyZSgiaW1wb3J0cyIsIC8qI19fUFVSRV9fKi9fYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUxMigpIHsKICAgICAgICAgICAgICAgICAgICAgIHZhciBqc29uLCBhcGk7CiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTEyJChfY29udGV4dDEyKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDEyLnByZXYgPSBfY29udGV4dDEyLm5leHQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAganNvbiA9IGFyZy5qc29uOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfY29udGV4dDEyLm5leHQgPSAzOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gQXBpSG9zdC5yZXF1ZXN0KCkuUE9TVCgpLnVybCh1cmxJbXBvcnRzKCkpLmJvZHkoewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IGpzb24KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkuc2VuZCgpOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXBpID0gX2NvbnRleHQxMi5zZW50OwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoKTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQxMi5zdG9wKCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICB9LCBfY2FsbGVlMTIpOwogICAgICAgICAgICAgICAgICAgIH0pKSkpOwoKICAgICAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDEzLnN0b3AoKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sIF9jYWxsZWUxMyk7CiAgICAgICAgICB9KSkoKTsKICAgICAgICB9LAogICAgICAgIGV4cG9ydERhdGFiYXNlOiBmdW5jdGlvbiBleHBvcnREYXRhYmFzZShjb250ZXh0KSB7CiAgICAgICAgICB2YXIgX2FyZ3VtZW50czQgPSBhcmd1bWVudHM7CiAgICAgICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMTUoKSB7CiAgICAgICAgICAgIHZhciBhcmc7CiAgICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMTUkKF9jb250ZXh0MTUpIHsKICAgICAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDE1LnByZXYgPSBfY29udGV4dDE1Lm5leHQpIHsKICAgICAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgICAgIGFyZyA9IF9hcmd1bWVudHM0Lmxlbmd0aCA+IDEgJiYgX2FyZ3VtZW50czRbMV0gIT09IHVuZGVmaW5lZCA/IF9hcmd1bWVudHM0WzFdIDoge307CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MTUuYWJydXB0KCJyZXR1cm4iLCBjb250ZXh0LnN0YXRlLnByb2Nlc3Nvci5hY3F1aXJlKCJleHBvcnREYXRhYmFzZSIsIC8qI19fUFVSRV9fKi9fYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUxNCgpIHsKICAgICAgICAgICAgICAgICAgICAgIHZhciBkYXRhYmFzZSwgYXBpLCBjb250ZW50OwogICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUxNCQoX2NvbnRleHQxNCkgewogICAgICAgICAgICAgICAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICAgICAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQxNC5wcmV2ID0gX2NvbnRleHQxNC5uZXh0KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFiYXNlID0gYXJnLmRhdGFiYXNlOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfY29udGV4dDE0Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gQXBpSG9zdC5yZXF1ZXN0KCkudXJsKCJkYXRhYmFzZS9kYXRhYmFzZS8iLmNvbmNhdChkYXRhYmFzZSwgIi9leHBvcnR2MiIpKS5zZW5kKCk7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhcGkgPSBfY29udGV4dDE0LnNlbnQ7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQgPSBhcGkuZ2V0Q29udGVudCgpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQxNC5hYnJ1cHQoInJldHVybiIsIGNvbnRlbnQpOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDE0LnN0b3AoKTsKICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgIH0sIF9jYWxsZWUxNCk7CiAgICAgICAgICAgICAgICAgICAgfSkpKSk7CgogICAgICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MTUuc3RvcCgpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwgX2NhbGxlZTE1KTsKICAgICAgICAgIH0pKSgpOwogICAgICAgIH0sCiAgICAgICAgZmluZERhdGFiYXNlOiBmdW5jdGlvbiBmaW5kRGF0YWJhc2UoY29udGV4dCkgewogICAgICAgICAgdmFyIF9hcmd1bWVudHM1ID0gYXJndW1lbnRzOwogICAgICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTE3KCkgewogICAgICAgICAgICB2YXIgYXJnOwogICAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTE3JChfY29udGV4dDE3KSB7CiAgICAgICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQxNy5wcmV2ID0gX2NvbnRleHQxNy5uZXh0KSB7CiAgICAgICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgICAgICBhcmcgPSBfYXJndW1lbnRzNS5sZW5ndGggPiAxICYmIF9hcmd1bWVudHM1WzFdICE9PSB1bmRlZmluZWQgPyBfYXJndW1lbnRzNVsxXSA6IHt9OwogICAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDE3LmFicnVwdCgicmV0dXJuIiwgY29udGV4dC5zdGF0ZS5wcm9jZXNzb3IuYWNxdWlyZSgiZmluZERhdGFiYXNlIiwgLyojX19QVVJFX18qL19hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTE2KCkgewogICAgICAgICAgICAgICAgICAgICAgdmFyIGRhdGFiYXNlLCBkYkZvdW5kOwogICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUxNiQoX2NvbnRleHQxNikgewogICAgICAgICAgICAgICAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICAgICAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQxNi5wcmV2ID0gX2NvbnRleHQxNi5uZXh0KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFiYXNlID0gYXJnLmRhdGFiYXNlOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYkZvdW5kID0gY29udGV4dC5zdGF0ZS5pdGVtcy5maW5kKGZ1bmN0aW9uIChkYikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBkYi5uYW1lID09PSBkYXRhYmFzZTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZGJGb3VuZCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jb250ZXh0MTYubmV4dCA9IDQ7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcigiZGF0YWJhc2Ugbm90IGZvdW5kIik7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQxNi5hYnJ1cHQoInJldHVybiIsIGRiRm91bmQpOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDE2LnN0b3AoKTsKICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgIH0sIF9jYWxsZWUxNik7CiAgICAgICAgICAgICAgICAgICAgfSkpKSk7CgogICAgICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MTcuc3RvcCgpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwgX2NhbGxlZTE3KTsKICAgICAgICAgIH0pKSgpOwogICAgICAgIH0sCiAgICAgICAgZmluZENvbGxlY3Rpb246IGZ1bmN0aW9uIGZpbmRDb2xsZWN0aW9uKGNvbnRleHQpIHsKICAgICAgICAgIHZhciBfYXJndW1lbnRzNiA9IGFyZ3VtZW50czsKICAgICAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUxOSgpIHsKICAgICAgICAgICAgdmFyIGFyZzsKICAgICAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUxOSQoX2NvbnRleHQxOSkgewogICAgICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0MTkucHJldiA9IF9jb250ZXh0MTkubmV4dCkgewogICAgICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAgICAgYXJnID0gX2FyZ3VtZW50czYubGVuZ3RoID4gMSAmJiBfYXJndW1lbnRzNlsxXSAhPT0gdW5kZWZpbmVkID8gX2FyZ3VtZW50czZbMV0gOiB7fTsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQxOS5hYnJ1cHQoInJldHVybiIsIGNvbnRleHQuc3RhdGUucHJvY2Vzc29yLmFjcXVpcmUoImZpbmRDb2xsZWN0aW9uIiwgLyojX19QVVJFX18qL19hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTE4KCkgewogICAgICAgICAgICAgICAgICAgICAgdmFyIGRhdGFiYXNlLCBjb2xsZWN0aW9uLCBkYkZvdW5kLCBjb2xsZWN0aW9uRm91bmQ7CiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTE4JChfY29udGV4dDE4KSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDE4LnByZXYgPSBfY29udGV4dDE4Lm5leHQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YWJhc2UgPSBhcmcuZGF0YWJhc2UsIGNvbGxlY3Rpb24gPSBhcmcuY29sbGVjdGlvbjsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2NvbnRleHQxOC5uZXh0ID0gMzsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNvbnRleHQuZGlzcGF0Y2goImZpbmREYXRhYmFzZSIsIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhYmFzZTogZGF0YWJhc2UKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYkZvdW5kID0gX2NvbnRleHQxOC5zZW50OwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xsZWN0aW9uRm91bmQgPSBkYkZvdW5kLmNvbGxlY3Rpb25zLmZpbmQoZnVuY3Rpb24gKGRiQ29sbGVjdGlvbikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBkYkNvbGxlY3Rpb24ubmFtZSA9PT0gY29sbGVjdGlvbjsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoY29sbGVjdGlvbkZvdW5kKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2NvbnRleHQxOC5uZXh0ID0gNzsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCJjb2xsZWN0aW9uIG5vdCBmb3VuZCIpOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MTguYWJydXB0KCJyZXR1cm4iLCBjb2xsZWN0aW9uRm91bmQpOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDE4LnN0b3AoKTsKICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgIH0sIF9jYWxsZWUxOCk7CiAgICAgICAgICAgICAgICAgICAgfSkpKSk7CgogICAgICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MTkuc3RvcCgpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwgX2NhbGxlZTE5KTsKICAgICAgICAgIH0pKSgpOwogICAgICAgIH0KICAgICAgfQogICAgfSk7CiAgICByZXR1cm4gc3RvcmU7CiAgfQp9Ow=="},{"version":3,"sources":["C:/dev/freshnet-v2/vue/src/stores/store.database.js"],"names":["Vuex","ApiHost","DataLoader","Processor","urlCollections","database","urlDocuments","collection","urlImports","init","Stores","store","Store","state","lastModified","dataLoader","timeout","processor","loadData","request","POST","url","send","api","baseInfo","getContent","dispatch","setData","data","commit","Date","now","getData","getters","items","mutations","time","isLoading","actions","refresh","context","acquire","doTimeout","loadBaseInfo","loadDatabases","content","map","name","collections","loadCollections","arg","documents","dbFound","length","splice","push","loadDocuments","collectionFound","imports","json","body","Error","exportDatabase","findDatabase","find","db","findCollection","dbCollection"],"mappings":";;;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,QAAD;AAAA,qCACDA,QADC;AAAA,CAAvB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACD,QAAD,EAAWE,UAAX;AAAA,qCACCF,QADD,yBACwBE,UADxB;AAAA,CAArB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA,CAAnB;;AAEA,eAAe;AACdC,EAAAA,IADc,gBACTC,MADS,EACD;AACZ,QAAMC,KAAK,GAAG,IAAIX,IAAI,CAACY,KAAT,CAAe;AAC5BC,MAAAA,KAAK,EAAE;AACNC,QAAAA,YAAY,EAAE,CADR;AAENC,QAAAA,UAAU,EAAE,IAAIb,UAAJ,CAAe;AAAEc,UAAAA,OAAO,EAAE,OAAO;AAAlB,SAAf,EAAsC;AAAtC,SACVC,SADU,CACA;AAAA,iBAAMN,KAAK,CAACE,KAAN,CAAYI,SAAlB;AAAA,SADA,EAEVC,QAFU,uEAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACSjB,OAAO,CAACkB,OAAR,GAChBC,IADgB,GAEhBC,GAFgB,CAEZ,eAFY,EAGhBC,IAHgB,EADT;;AAAA;AACHC,kBAAAA,GADG;AAKHC,kBAAAA,QALG,GAKQD,GAAG,CAACE,UAAJ,EALR;AAMTd,kBAAAA,KAAK,CAACe,QAAN,CAAe,eAAf;AANS,mDAOFF,QAPE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFC,IAWVG,OAXU,CAWF,UAACC,IAAD,EAAU;AAClBjB,UAAAA,KAAK,CAACkB,MAAN,CAAa,UAAb,EAAyBD,IAAI,GAAGA,IAAH,GAAU,IAAvC;AACAjB,UAAAA,KAAK,CAACkB,MAAN,CAAa,cAAb,EAA6BC,IAAI,CAACC,GAAL,EAA7B;AACA,SAdU,EAeVC,OAfU,CAeF;AAAA,iBAAMrB,KAAK,CAACsB,OAAN,CAAcT,QAApB;AAAA,SAfE,CAFN;AAkBNA,QAAAA,QAAQ,EAAE,IAlBJ;AAmBNU,QAAAA,KAAK,EAAE,EAnBD;AAoBNjB,QAAAA,SAAS,EAAE,IAAId,SAAJ;AApBL,OADqB;AAuB5BgC,MAAAA,SAAS,EAAE;AACVrB,QAAAA,YAAY,EAAE,sBAACD,KAAD,EAAQuB,IAAR;AAAA,iBAAkBvB,KAAK,CAACC,YAAN,GAAqBsB,IAAvC;AAAA,SADJ;AAEVZ,QAAAA,QAAQ,EAAE,kBAACX,KAAD,EAAQW,SAAR;AAAA,iBAAsBX,KAAK,CAACW,QAAN,GAAiBA,SAAvC;AAAA,SAFA;AAGVU,QAAAA,KAAK,EAAE,eAACrB,KAAD,EAAQqB,MAAR;AAAA,iBAAmBrB,KAAK,CAACqB,KAAN,GAAcA,MAAjC;AAAA;AAHG,OAvBiB;AA4B5BD,MAAAA,OAAO,EAAE;AACRnB,QAAAA,YAAY,EAAE,sBAACD,KAAD;AAAA,iBAAWA,KAAK,CAACC,YAAjB;AAAA,SADN;AAERuB,QAAAA,SAAS,EAAE,mBAACxB,KAAD;AAAA,iBAAWA,KAAK,CAACI,SAAN,CAAgBoB,SAAhB,EAAX;AAAA,SAFH;AAGRb,QAAAA,QAAQ,EAAE,kBAACX,KAAD;AAAA,iBAAWA,KAAK,CAACW,QAAjB;AAAA,SAHF;AAIRU,QAAAA,KAAK,EAAE,eAACrB,KAAD;AAAA,iBAAWA,KAAK,CAACqB,KAAjB;AAAA;AAJC,OA5BmB;AAkC5BI,MAAAA,OAAO,EAAE;AACFC,QAAAA,OADE,mBACMC,OADN,EACe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDACfA,OAAO,CAAC3B,KAAR,CAAcI,SAAd,CAAwBwB,OAAxB,CAAgC,SAAhC,uEAA2C;AAAA;AAAA;AAAA;AAAA;AACjDD,8BAAAA,OAAO,CAAC3B,KAAR,CAAcE,UAAd,CAAyB2B,SAAzB;AADiD;AAAA,qCAE3CF,OAAO,CAACd,QAAR,CAAiB,cAAjB,CAF2C;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAA3C,GADe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKtB,SANO;AAQFiB,QAAAA,YARE,wBAQWH,OARX,EAQoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDACpBA,OAAO,CAAC3B,KAAR,CAAcI,SAAd,CAAwBwB,OAAxB,CAAgC,cAAhC,uEAAgD;AAAA;AAAA;AAAA;AAAA;AAAA,gEAC/CD,OAAO,CAAC3B,KAAR,CAAcE,UAAd,CAAyBa,IAAzB,EAD+C;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAhD,GADoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAI3B,SAZO;AAaFgB,QAAAA,aAbE,yBAaYJ,OAbZ,EAaqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDACrBA,OAAO,CAAC3B,KAAR,CAAcI,SAAd,CAAwBwB,OAAxB,CAAgC,eAAhC,uEAAiD;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEtDD,8BAAAA,OAAO,CAACX,MAAR,CAAe,OAAf,EAAwB,EAAxB;AACAW,8BAAAA,OAAO,CAACX,MAAR,CAAe,cAAf,EAA+BC,IAAI,CAACC,GAAL,EAA/B;AAHsD;AAAA,qCAItC9B,OAAO,CAACkB,OAAR,GACdC,IADc,GAEdC,GAFc,CAEV,oBAFU,EAGdC,IAHc,EAJsC;;AAAA;AAIlDC,8BAAAA,GAJkD;AAQlDsB,8BAAAA,OARkD,GAQxCtB,GAAG,CAACE,UAAJ,EARwC;AASlDS,8BAAAA,KATkD,GAS1CW,OAAO,CAACC,GAAR,CAAY,UAACzC,QAAD,EAAc;AACrC,uCAAO;AAAE0C,kCAAAA,IAAI,EAAE1C,QAAR;AAAkB2C,kCAAAA,WAAW,EAAE;AAA/B,iCAAP;AACA,+BAFW,CAT0C;AAYtDR,8BAAAA,OAAO,CAACX,MAAR,CAAe,OAAf,EAAwBK,KAAxB;AAZsD,qEAajCA,KAbiC;;AAAA;AAatD,oFAA4B;AAAnB7B,kCAAAA,QAAmB;AAC3BmC,kCAAAA,OAAO,CAACd,QAAR,CAAiB,iBAAjB,EAAoC;AACnCrB,oCAAAA,QAAQ,EAAEA,QAAQ,CAAC0C;AADgB,mCAApC;AAGA;AAjBqD;AAAA;AAAA;AAAA;AAAA;;AAAA,gEAkB/CP,OAAO,CAACP,OAAR,CAAgBC,KAlB+B;;AAAA;AAAA;AAAA;AAoBtDM,8BAAAA,OAAO,CAACX,MAAR,CAAe,OAAf,EAAwB,EAAxB;AACAW,8BAAAA,OAAO,CAACX,MAAR,CAAe,cAAf,EAA+BC,IAAI,CAACC,GAAL,EAA/B;AArBsD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAjD,GADqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0B5B,SAvCO;AAwCFkB,QAAAA,eAxCE,2BAwCcT,OAxCd,EAwCiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAVU,oBAAAA,GAAU,0EAAJ,EAAI;AAAA,sDACjCV,OAAO,CAAC3B,KAAR,CAAcI,SAAd,CAAwBwB,OAAxB,CACN,iBADM,uEAEN;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AACOpC,8BAAAA,QADP,GACoB6C,GADpB,CACO7C,QADP;AAAA;AAAA,qCAEiBJ,OAAO,CAACkB,OAAR,GACdC,IADc,GAEdC,GAFc,CAEVjB,cAAc,CAACC,QAAD,CAFJ,EAGdiB,IAHc,EAFjB;;AAAA;AAEKC,8BAAAA,GAFL;AAMKsB,8BAAAA,OANL,GAMetB,GAAG,CAACE,UAAJ,EANf;AAOKuB,8BAAAA,WAPL,GAOmBH,OAAO,CAACC,GAAR,CAAY,UAACvC,UAAD,EAAgB;AAC7C,uCAAO;AAAEwC,kCAAAA,IAAI,EAAExC,UAAR;AAAoB4C,kCAAAA,SAAS,EAAE;AAA/B,iCAAP;AACA,+BAFiB,CAPnB;AAAA;AAAA,qCAUqBX,OAAO,CAACd,QAAR,CAAiB,cAAjB,EAAiC;AACpDrB,gCAAAA,QAAQ,EAARA;AADoD,+BAAjC,CAVrB;;AAAA;AAUK+C,8BAAAA,OAVL;;AAaC,qCAAOA,OAAO,CAACJ,WAAR,CAAoBK,MAA3B,EAAmC;AAClCD,gCAAAA,OAAO,CAACJ,WAAR,CAAoBM,MAApB,CAA2B,CAA3B,EAA8BF,OAAO,CAACJ,WAAR,CAAoBK,MAAlD;AACA;;AACD,sDAAAD,OAAO,CAACJ,WAAR,EAAoBO,IAApB,gDAA4BP,WAA5B;;AAhBD,sEAiBwBI,OAAO,CAACJ,WAjBhC;;AAAA;AAiBC,uFAA4C;AAAnCzC,kCAAAA,UAAmC;AAC3CiC,kCAAAA,OAAO,CAACd,QAAR,CAAiB,eAAjB,EAAkC;AACjCrB,oCAAAA,QAAQ,EAAE+C,OAAO,CAACL,IADe;AAEjCxC,oCAAAA,UAAU,EAAEA,UAAU,CAACwC;AAFU,mCAAlC;AAIA;AAtBF;AAAA;AAAA;AAAA;AAAA;;AAAA,gEAuBQK,OAAO,CAACJ,WAvBhB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFM,GADiC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6BxC,SArEO;AAsEFQ,QAAAA,aAtEE,yBAsEYhB,OAtEZ,EAsE+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAVU,oBAAAA,GAAU,6EAAJ,EAAI;AAAA,uDAC/BV,OAAO,CAAC3B,KAAR,CAAcI,SAAd,CAAwBwB,OAAxB,CAAgC,eAAhC,uEAAiD;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACjDpC,8BAAAA,QADiD,GACxB6C,GADwB,CACjD7C,QADiD,EACvCE,UADuC,GACxB2C,GADwB,CACvC3C,UADuC;AAAA;AAAA,qCAEvCN,OAAO,CAACkB,OAAR,GACdC,IADc,GAEdC,GAFc,CAEVf,YAAY,CAACD,QAAD,EAAWE,UAAX,CAFF,EAGde,IAHc,EAFuC;;AAAA;AAEnDC,8BAAAA,GAFmD;AAMnD4B,8BAAAA,SANmD,GAMvC5B,GAAG,CAACE,UAAJ,EANuC;AAAA;AAAA,qCAOzBe,OAAO,CAACd,QAAR,CAAiB,gBAAjB,EAAmC;AAChErB,gCAAAA,QAAQ,EAARA,QADgE;AAEhEE,gCAAAA,UAAU,EAAVA;AAFgE,+BAAnC,CAPyB;;AAAA;AAOjDkD,8BAAAA,eAPiD;;AAWvD,qCAAOA,eAAe,CAACN,SAAhB,CAA0BE,MAAjC,EAAyC;AACxCI,gCAAAA,eAAe,CAACN,SAAhB,CAA0BG,MAA1B,CACC,CADD,EAECG,eAAe,CAACN,SAAhB,CAA0BE,MAF3B;AAIA;;AACD,uDAAAI,eAAe,CAACN,SAAhB,EAA0BI,IAA1B,iDAAkCJ,SAAlC;;AAjBuD,iEAkBhDM,eAAe,CAACN,SAlBgC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAjD,GAD+B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBtC,SA3FO;AA6FFO,QAAAA,OA7FE,mBA6FMlB,OA7FN,EA6FyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAVU,oBAAAA,GAAU,6EAAJ,EAAI;AAAA,uDACzBV,OAAO,CAAC3B,KAAR,CAAcI,SAAd,CAAwBwB,OAAxB,CAAgC,SAAhC,uEAA2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAC3CkB,8BAAAA,IAD2C,GAClCT,GADkC,CAC3CS,IAD2C;AAAA;AAAA,qCAEjC1D,OAAO,CAACkB,OAAR,GACdC,IADc,GAEdC,GAFc,CAEVb,UAAU,EAFA,EAGdoD,IAHc,CAGT;AAAEf,gCAAAA,OAAO,EAAEc;AAAX,+BAHS,EAIdrC,IAJc,EAFiC;;AAAA;AAE7CC,8BAAAA,GAF6C;AAAA,oCAO3C,IAAIsC,KAAJ,EAP2C;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAA3C,GADyB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUhC,SAvGO;AAwGFC,QAAAA,cAxGE,0BAwGatB,OAxGb,EAwGgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAVU,oBAAAA,GAAU,6EAAJ,EAAI;AAAA,uDAChCV,OAAO,CAAC3B,KAAR,CAAcI,SAAd,CAAwBwB,OAAxB,CAAgC,gBAAhC,uEAAkD;AAAA;AAAA;AAAA;AAAA;AAAA;AAClDpC,8BAAAA,QADkD,GACrC6C,GADqC,CAClD7C,QADkD;AAAA;AAAA,qCAExCJ,OAAO,CAACkB,OAAR,GACdE,GADc,6BACWhB,QADX,gBAEdiB,IAFc,EAFwC;;AAAA;AAEpDC,8BAAAA,GAFoD;AAKpDsB,8BAAAA,OALoD,GAK1CtB,GAAG,CAACE,UAAJ,EAL0C;AAAA,iEAMjDoB,OANiD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAlD,GADgC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASvC,SAjHO;AAmHFkB,QAAAA,YAnHE,wBAmHWvB,OAnHX,EAmH8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAVU,oBAAAA,GAAU,6EAAJ,EAAI;AAAA,uDAC9BV,OAAO,CAAC3B,KAAR,CAAcI,SAAd,CAAwBwB,OAAxB,CAAgC,cAAhC,uEAAgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAChDpC,8BAAAA,QADgD,GACnC6C,GADmC,CAChD7C,QADgD;AAEhD+C,8BAAAA,OAFgD,GAEtCZ,OAAO,CAAC3B,KAAR,CAAcqB,KAAd,CAAoB8B,IAApB,CAAyB,UAACC,EAAD,EAAQ;AAChD,uCAAOA,EAAE,CAAClB,IAAH,KAAY1C,QAAnB;AACA,+BAFe,CAFsC;;AAAA,kCAKjD+C,OALiD;AAAA;AAAA;AAAA;;AAAA,oCAKlC,IAAIS,KAAJ,CAAU,oBAAV,CALkC;;AAAA;AAAA,iEAO/CT,OAP+C;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAhD,GAD8B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUrC,SA7HO;AA8HFc,QAAAA,cA9HE,0BA8Ha1B,OA9Hb,EA8HgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAVU,oBAAAA,GAAU,6EAAJ,EAAI;AAAA,uDAChCV,OAAO,CAAC3B,KAAR,CAAcI,SAAd,CAAwBwB,OAAxB,CAAgC,gBAAhC,uEAAkD;AAAA;AAAA;AAAA;AAAA;AAAA;AAClDpC,8BAAAA,QADkD,GACzB6C,GADyB,CAClD7C,QADkD,EACxCE,UADwC,GACzB2C,GADyB,CACxC3C,UADwC;AAAA;AAAA,qCAEpCiC,OAAO,CAACd,QAAR,CAAiB,cAAjB,EAAiC;AACpDrB,gCAAAA,QAAQ,EAARA;AADoD,+BAAjC,CAFoC;;AAAA;AAEpD+C,8BAAAA,OAFoD;AAKpDK,8BAAAA,eALoD,GAKlCL,OAAO,CAACJ,WAAR,CAAoBgB,IAApB,CAAyB,UAACG,YAAD,EAAkB;AAChE,uCAAOA,YAAY,CAACpB,IAAb,KAAsBxC,UAA7B;AACA,+BAFqB,CALkC;;AAAA,kCAQnDkD,eARmD;AAAA;AAAA;AAAA;;AAAA,oCASjD,IAAII,KAAJ,CAAU,sBAAV,CATiD;;AAAA;AAAA,iEAWjDJ,eAXiD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAlD,GADgC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcvC;AA5IO;AAlCmB,KAAf,CAAd;AAkLA,WAAO9C,KAAP;AACA;AArLa,CAAf","sourcesContent":["import Vuex from \"vuex\";\r\nimport ApiHost from \"@/host/ApiHost.js\";\r\nimport DataLoader from \"./tools/DataLoader\";\r\nimport Processor from \"./tools/Processor.js\";\r\n\r\nconst urlCollections = (database) =>\r\n\t`database/database/${database}/collections`;\r\nconst urlDocuments = (database, collection) =>\r\n\t`database/database/${database}/collection/${collection}/documents`;\r\nconst urlImports = () => `database/imports`;\r\n\r\nexport default {\r\n\tinit(Stores) {\r\n\t\tconst store = new Vuex.Store({\r\n\t\t\tstate: {\r\n\t\t\t\tlastModified: 0,\r\n\t\t\t\tdataLoader: new DataLoader({ timeout: 1000 * 5 }) // 5sec\r\n\t\t\t\t\t.processor(() => store.state.processor)\r\n\t\t\t\t\t.loadData(async () => {\r\n\t\t\t\t\t\tconst api = await ApiHost.request()\r\n\t\t\t\t\t\t\t.POST()\r\n\t\t\t\t\t\t\t.url(\"database/info\")\r\n\t\t\t\t\t\t\t.send();\r\n\t\t\t\t\t\tconst baseInfo = api.getContent();\r\n\t\t\t\t\t\tstore.dispatch(\"loadDatabases\");\r\n\t\t\t\t\t\treturn baseInfo;\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.setData((data) => {\r\n\t\t\t\t\t\tstore.commit(\"baseInfo\", data ? data : null);\r\n\t\t\t\t\t\tstore.commit(\"lastModified\", Date.now());\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.getData(() => store.getters.baseInfo),\r\n\t\t\t\tbaseInfo: null,\r\n\t\t\t\titems: [],\r\n\t\t\t\tprocessor: new Processor(),\r\n\t\t\t},\r\n\t\t\tmutations: {\r\n\t\t\t\tlastModified: (state, time) => (state.lastModified = time),\r\n\t\t\t\tbaseInfo: (state, baseInfo) => (state.baseInfo = baseInfo),\r\n\t\t\t\titems: (state, items) => (state.items = items),\r\n\t\t\t},\r\n\t\t\tgetters: {\r\n\t\t\t\tlastModified: (state) => state.lastModified,\r\n\t\t\t\tisLoading: (state) => state.processor.isLoading(),\r\n\t\t\t\tbaseInfo: (state) => state.baseInfo,\r\n\t\t\t\titems: (state) => state.items,\r\n\t\t\t},\r\n\t\t\tactions: {\r\n\t\t\t\tasync refresh(context) {\r\n\t\t\t\t\treturn context.state.processor.acquire(\"refresh\", async () => {\r\n\t\t\t\t\t\tcontext.state.dataLoader.doTimeout();\r\n\t\t\t\t\t\tawait context.dispatch(\"loadBaseInfo\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\r\n\t\t\t\tasync loadBaseInfo(context) {\r\n\t\t\t\t\treturn context.state.processor.acquire(\"loadBaseInfo\", async () => {\r\n\t\t\t\t\t\treturn context.state.dataLoader.data();\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t\tasync loadDatabases(context) {\r\n\t\t\t\t\treturn context.state.processor.acquire(\"loadDatabases\", async () => {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tcontext.commit(\"items\", []);\r\n\t\t\t\t\t\t\tcontext.commit(\"lastModified\", Date.now());\r\n\t\t\t\t\t\t\tlet api = await ApiHost.request()\r\n\t\t\t\t\t\t\t\t.POST()\r\n\t\t\t\t\t\t\t\t.url(\"database/databases\")\r\n\t\t\t\t\t\t\t\t.send();\r\n\t\t\t\t\t\t\tlet content = api.getContent();\r\n\t\t\t\t\t\t\tlet items = content.map((database) => {\r\n\t\t\t\t\t\t\t\treturn { name: database, collections: [] };\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tcontext.commit(\"items\", items);\r\n\t\t\t\t\t\t\tfor (let database of items) {\r\n\t\t\t\t\t\t\t\tcontext.dispatch(\"loadCollections\", {\r\n\t\t\t\t\t\t\t\t\tdatabase: database.name,\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn context.getters.items;\r\n\t\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\t\tcontext.commit(\"items\", []);\r\n\t\t\t\t\t\t\tcontext.commit(\"lastModified\", Date.now());\r\n\t\t\t\t\t\t\tthrow error;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t\tasync loadCollections(context, arg = {}) {\r\n\t\t\t\t\treturn context.state.processor.acquire(\r\n\t\t\t\t\t\t\"loadCollections\",\r\n\t\t\t\t\t\tasync () => {\r\n\t\t\t\t\t\t\tlet { database } = arg;\r\n\t\t\t\t\t\t\tlet api = await ApiHost.request()\r\n\t\t\t\t\t\t\t\t.POST()\r\n\t\t\t\t\t\t\t\t.url(urlCollections(database))\r\n\t\t\t\t\t\t\t\t.send();\r\n\t\t\t\t\t\t\tlet content = api.getContent();\r\n\t\t\t\t\t\t\tlet collections = content.map((collection) => {\r\n\t\t\t\t\t\t\t\treturn { name: collection, documents: [] };\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tlet dbFound = await context.dispatch(\"findDatabase\", {\r\n\t\t\t\t\t\t\t\tdatabase,\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\twhile (dbFound.collections.length) {\r\n\t\t\t\t\t\t\t\tdbFound.collections.splice(0, dbFound.collections.length);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tdbFound.collections.push(...collections);\r\n\t\t\t\t\t\t\tfor (let collection of dbFound.collections) {\r\n\t\t\t\t\t\t\t\tcontext.dispatch(\"loadDocuments\", {\r\n\t\t\t\t\t\t\t\t\tdatabase: dbFound.name,\r\n\t\t\t\t\t\t\t\t\tcollection: collection.name,\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn dbFound.collections;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t\tasync loadDocuments(context, arg = {}) {\r\n\t\t\t\t\treturn context.state.processor.acquire(\"loadDocuments\", async () => {\r\n\t\t\t\t\t\tlet { database, collection } = arg;\r\n\t\t\t\t\t\tlet api = await ApiHost.request()\r\n\t\t\t\t\t\t\t.POST()\r\n\t\t\t\t\t\t\t.url(urlDocuments(database, collection))\r\n\t\t\t\t\t\t\t.send();\r\n\t\t\t\t\t\tlet documents = api.getContent();\r\n\t\t\t\t\t\tconst collectionFound = await context.dispatch(\"findCollection\", {\r\n\t\t\t\t\t\t\tdatabase,\r\n\t\t\t\t\t\t\tcollection,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\twhile (collectionFound.documents.length) {\r\n\t\t\t\t\t\t\tcollectionFound.documents.splice(\r\n\t\t\t\t\t\t\t\t0,\r\n\t\t\t\t\t\t\t\tcollectionFound.documents.length,\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcollectionFound.documents.push(...documents);\r\n\t\t\t\t\t\treturn collectionFound.documents;\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\r\n\t\t\t\tasync imports(context, arg = {}) {\r\n\t\t\t\t\treturn context.state.processor.acquire(\"imports\", async () => {\r\n\t\t\t\t\t\tlet { json } = arg;\r\n\t\t\t\t\t\tlet api = await ApiHost.request()\r\n\t\t\t\t\t\t\t.POST()\r\n\t\t\t\t\t\t\t.url(urlImports())\r\n\t\t\t\t\t\t\t.body({ content: json })\r\n\t\t\t\t\t\t\t.send();\r\n\t\t\t\t\t\tthrow new Error();\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t\tasync exportDatabase(context, arg = {}) {\r\n\t\t\t\t\treturn context.state.processor.acquire(\"exportDatabase\", async () => {\r\n\t\t\t\t\t\tlet { database } = arg;\r\n\t\t\t\t\t\tlet api = await ApiHost.request()\r\n\t\t\t\t\t\t\t.url(`database/database/${database}/exportv2`)\r\n\t\t\t\t\t\t\t.send();\r\n\t\t\t\t\t\tlet content = api.getContent();\r\n\t\t\t\t\t\treturn content;\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\r\n\t\t\t\tasync findDatabase(context, arg = {}) {\r\n\t\t\t\t\treturn context.state.processor.acquire(\"findDatabase\", async () => {\r\n\t\t\t\t\t\tlet { database } = arg;\r\n\t\t\t\t\t\tconst dbFound = context.state.items.find((db) => {\r\n\t\t\t\t\t\t\treturn db.name === database;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tif (!dbFound) throw new Error(\"database not found\");\r\n\r\n\t\t\t\t\t\treturn dbFound;\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t\tasync findCollection(context, arg = {}) {\r\n\t\t\t\t\treturn context.state.processor.acquire(\"findCollection\", async () => {\r\n\t\t\t\t\t\tlet { database, collection } = arg;\r\n\t\t\t\t\t\tlet dbFound = await context.dispatch(\"findDatabase\", {\r\n\t\t\t\t\t\t\tdatabase,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tlet collectionFound = dbFound.collections.find((dbCollection) => {\r\n\t\t\t\t\t\t\treturn dbCollection.name === collection;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tif (!collectionFound) {\r\n\t\t\t\t\t\t\tthrow new Error(\"collection not found\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn collectionFound;\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\treturn store;\r\n\t},\r\n};\r\n"]}]}