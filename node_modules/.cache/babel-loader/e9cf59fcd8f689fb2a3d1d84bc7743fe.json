{"remainingRequest":"C:\\development\\freshnet-v2\\vue\\node_modules\\thread-loader\\dist\\cjs.js!C:\\development\\freshnet-v2\\vue\\node_modules\\babel-loader\\lib\\index.js!C:\\development\\freshnet-v2\\vue\\src\\host\\ApiHost.js","dependencies":[{"path":"C:\\development\\freshnet-v2\\vue\\src\\host\\ApiHost.js","mtime":1663685837446},{"path":"C:\\development\\freshnet-v2\\vue\\babel.config.js","mtime":1662650914175},{"path":"C:\\development\\freshnet-v2\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1662650916242},{"path":"C:\\development\\freshnet-v2\\vue\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1662650934417},{"path":"C:\\development\\freshnet-v2\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1662650915901}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}