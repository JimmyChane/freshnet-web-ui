{"remainingRequest":"C:\\dev\\freshnet-vue\\node_modules\\babel-loader\\lib\\index.js!C:\\dev\\freshnet-vue\\src\\stores\\store.user.js","dependencies":[{"path":"C:\\dev\\freshnet-vue\\src\\stores\\store.user.js","mtime":1666953105748},{"path":"C:\\dev\\freshnet-vue\\babel.config.js","mtime":1662650914175},{"path":"C:\\dev\\freshnet-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1662650916242},{"path":"C:\\dev\\freshnet-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1662650915901}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/dev/freshnet-vue/src/stores/store.user.js"],"names":["Vuex","ApiHost","ItemUser","DataLoader","Processor","init","Stores","loginStore","login","store","Store","state","lastModified","dataLoader","timeout","processor","loadData","dispatch","user","isTypeAdmin","Error","request","url","send","api","contents","getContent","map","data","fromData","setData","commit","Array","isArray","Date","now","getData","getters","items","mutations","time","isLoading","token","actions","refresh","context","acquire","doTimeout","getUsers","getUserByUsername","username","users","find","addUser","arg","name","passwordNew","passwordRepeat","POST","body","content","newUser","push","removeUserByUsername","DELETE","filter","updateTypeOfUserByUsername","userType","PUT","userChange"],"mappings":"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","sourcesContent":["import Vuex from \"vuex\";\r\nimport ApiHost from \"../host/ApiHost.js\";\r\nimport ItemUser from \"../items/User.js\";\r\nimport DataLoader from \"./tools/DataLoader\";\r\nimport Processor from \"./tools/Processor.js\";\r\n\r\nexport default {\r\n\tinit(Stores) {\r\n\t\tconst loginStore = Stores.login;\r\n\r\n\t\tconst store = new Vuex.Store({\r\n\t\t\tstate: {\r\n\t\t\t\tlastModified: 0,\r\n\t\t\t\tdataLoader: new DataLoader({ timeout: 1000 * 5 }) // 5sec\r\n\t\t\t\t\t.processor(() => store.state.processor)\r\n\t\t\t\t\t.loadData(async () => {\r\n\t\t\t\t\t\tconst user = await loginStore.dispatch(\"getUser\");\r\n\t\t\t\t\t\tif (!user || !user.isTypeAdmin()) throw new Error();\r\n\t\t\t\t\t\tconst api = await ApiHost.request().url(\"users\").send();\r\n\t\t\t\t\t\tconst contents = api.getContent();\r\n\t\t\t\t\t\treturn contents.map((data) => new ItemUser(Stores).fromData(data));\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.setData((data) => {\r\n\t\t\t\t\t\tstore.commit(\"items\", Array.isArray(data) ? data : []);\r\n\t\t\t\t\t\tstore.commit(\"lastModified\", Date.now());\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.getData(() => store.getters.items),\r\n\t\t\t\titems: [],\r\n\t\t\t\tprocessor: new Processor(),\r\n\t\t\t},\r\n\t\t\tmutations: {\r\n\t\t\t\tlastModified: (state, time) => (state.lastModified = time),\r\n\t\t\t\titems: (state, items) => {\r\n\t\t\t\t\tstate.items = Array.isArray(items) ? items : [];\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tgetters: {\r\n\t\t\t\tlastModified: (state) => state.lastModified,\r\n\t\t\t\tisLoading: (state) => state.processor.isLoading(),\r\n\t\t\t\ttoken: () => loginStore.getters.token,\r\n\t\t\t\titems: (state) => state.items.map((user) => user),\r\n\t\t\t},\r\n\t\t\tactions: {\r\n\t\t\t\tasync refresh(context) {\r\n\t\t\t\t\treturn context.state.processor.acquire(\"refresh\", async () => {\r\n\t\t\t\t\t\tcontext.state.dataLoader.doTimeout();\r\n\t\t\t\t\t\tawait context.dispatch(\"getUsers\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\r\n\t\t\t\tasync getUsers(context) {\r\n\t\t\t\t\treturn context.state.processor.acquire(\"getUsers\", async () => {\r\n\t\t\t\t\t\treturn await context.state.dataLoader.data();\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t\tasync getUserByUsername(context, username = \"\") {\r\n\t\t\t\t\treturn context.state.processor.acquire(\r\n\t\t\t\t\t\t\"getUserByUsername\",\r\n\t\t\t\t\t\tasync () => {\r\n\t\t\t\t\t\t\tconst users = await context.dispatch(\"getUsers\");\r\n\t\t\t\t\t\t\treturn users.find((user) => user.username === username);\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t\tasync addUser(\r\n\t\t\t\t\tcontext,\r\n\t\t\t\t\targ = { username, name, passwordNew, passwordRepeat },\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn context.state.processor.acquire(\"addUser\", async () => {\r\n\t\t\t\t\t\tlet user = await loginStore.dispatch(\"getUser\");\r\n\r\n\t\t\t\t\t\tif (!user && !user.isTypeAdmin()) throw new Error();\r\n\r\n\t\t\t\t\t\tlet api = await ApiHost.request()\r\n\t\t\t\t\t\t\t.url(\"users/user\")\r\n\t\t\t\t\t\t\t.POST()\r\n\t\t\t\t\t\t\t.body({\r\n\t\t\t\t\t\t\t\tusername: arg.username,\r\n\t\t\t\t\t\t\t\tname: arg.name,\r\n\t\t\t\t\t\t\t\tpasswordNew: arg.passwordNew,\r\n\t\t\t\t\t\t\t\tpasswordRepeat: arg.passwordRepeat,\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.send();\r\n\r\n\t\t\t\t\t\tlet content = api.getContent();\r\n\t\t\t\t\t\tif (!content) throw new Error();\r\n\t\t\t\t\t\tconst newUser = new ItemUser(Stores).fromData(content);\r\n\t\t\t\t\t\tconst users = context.getters.items;\r\n\t\t\t\t\t\tusers.push(newUser);\r\n\t\t\t\t\t\tcontext.commit(\"items\", users);\r\n\t\t\t\t\t\tcontext.commit(\"lastModified\", Date.now());\r\n\t\t\t\t\t\treturn newUser;\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t\tasync removeUserByUsername(context, arg = { username }) {\r\n\t\t\t\t\treturn context.state.processor.acquire(\r\n\t\t\t\t\t\t\"removeUserByUsername\",\r\n\t\t\t\t\t\tasync () => {\r\n\t\t\t\t\t\t\tlet user = await loginStore.dispatch(\"getUser\");\r\n\r\n\t\t\t\t\t\t\tif (!user && !user.isTypeAdmin()) throw new Error();\r\n\r\n\t\t\t\t\t\t\tlet api = await ApiHost.request()\r\n\t\t\t\t\t\t\t\t.DELETE()\r\n\t\t\t\t\t\t\t\t.url(\"users/user\")\r\n\t\t\t\t\t\t\t\t.body({ username: arg.username })\r\n\t\t\t\t\t\t\t\t.send();\r\n\r\n\t\t\t\t\t\t\tlet content = api.getContent();\r\n\t\t\t\t\t\t\tif (content !== \"ok\") throw new Error();\r\n\t\t\t\t\t\t\tlet users = context.getters.items.filter((user) => {\r\n\t\t\t\t\t\t\t\treturn user.username !== arg.username;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tcontext.commit(\"items\", users);\r\n\t\t\t\t\t\t\tcontext.commit(\"lastModified\", Date.now());\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t\tasync updateTypeOfUserByUsername(\r\n\t\t\t\t\tcontext,\r\n\t\t\t\t\targ = { username, userType },\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn context.state.processor.acquire(\r\n\t\t\t\t\t\t\"updateTypeOfUserByUsername\",\r\n\t\t\t\t\t\tasync () => {\r\n\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\tlet user = await loginStore.dispatch(\"getUser\");\r\n\r\n\t\t\t\t\t\t\t\tif (!user && !user.isTypeAdmin()) throw new Error();\r\n\r\n\t\t\t\t\t\t\t\tlet { username, userType } = arg;\r\n\r\n\t\t\t\t\t\t\t\tlet api = await ApiHost.request()\r\n\t\t\t\t\t\t\t\t\t.url(\"users/user\")\r\n\t\t\t\t\t\t\t\t\t.PUT()\r\n\t\t\t\t\t\t\t\t\t.body({ username, userType })\r\n\t\t\t\t\t\t\t\t\t.send();\r\n\r\n\t\t\t\t\t\t\t\tlet content = api.getContent();\r\n\t\t\t\t\t\t\t\tlet userChange = new ItemUser(Stores).fromData(content);\r\n\t\t\t\t\t\t\t\tif (!userChange) throw new Error();\r\n\t\t\t\t\t\t\t\tlet users = context.getters.items.map((user) => {\r\n\t\t\t\t\t\t\t\t\treturn user.username === userChange.username\r\n\t\t\t\t\t\t\t\t\t\t? userChange\r\n\t\t\t\t\t\t\t\t\t\t: user;\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tcontext.commit(\"items\", users);\r\n\t\t\t\t\t\t\t\tcontext.commit(\"lastModified\", Date.now());\r\n\t\t\t\t\t\t\t\treturn userChange;\r\n\t\t\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\t\t\tcontext.commit(\"items\", []);\r\n\t\t\t\t\t\t\t\tcontext.commit(\"lastModified\", Date.now());\r\n\t\t\t\t\t\t\t\tthrow error;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\treturn store;\r\n\t},\r\n};\r\n"]}]}