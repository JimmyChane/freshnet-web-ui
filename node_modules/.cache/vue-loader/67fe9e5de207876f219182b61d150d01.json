{"remainingRequest":"C:\\development\\freshnet-v2\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\development\\freshnet-v2\\vue\\src\\pages\\service\\PanelLeft.vue?vue&type=style&index=0&id=2a98da46&lang=scss&scoped=true&","dependencies":[{"path":"C:\\development\\freshnet-v2\\vue\\src\\pages\\service\\PanelLeft.vue","mtime":1662984377098},{"path":"C:\\development\\freshnet-v2\\vue\\node_modules\\css-loader\\index.js","mtime":1662650920109},{"path":"C:\\development\\freshnet-v2\\vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1662650934772},{"path":"C:\\development\\freshnet-v2\\vue\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1662650932744},{"path":"C:\\development\\freshnet-v2\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1662650916242},{"path":"C:\\development\\freshnet-v2\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1662650934771}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5QYW5lbFNlcnZpY2VzIHsKICAgd2lkdGg6IDEwMCU7CiAgIGhlaWdodDogMTAwJTsKICAgZGlzcGxheTogZmxleDsKICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKICAgYWxpZ24taXRlbXM6IHN0cmV0Y2g7CiAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDsKICAgb3ZlcmZsb3cteTogYXV0bzsKICAgb3ZlcmZsb3cteDogYXV0bzsKCiAgIC0tbWF4LXdpZHRoOiA2MHJlbTsKCiAgIC5QYW5lbFNlcnZpY2VzLWFjdGlvbmJhciB7CiAgICAgIHotaW5kZXg6IDI7CiAgICAgIHBvc2l0aW9uOiBzdGlja3k7CiAgICAgIHRvcDogMDsKICAgICAgbGVmdDogMDsKICAgICAgcmlnaHQ6IDA7CiAgICAgIHdpZHRoOiAxMDAlOwogICAgICBmbGV4LWdyb3c6IDA7CiAgICAgIHotaW5kZXg6IDI7CiAgICAgIHRyYW5zaXRpb246IHZhcigtLWFuaW1hdGlvbi1kdXJhdGlvbik7CiAgIH0KICAgLlBhbmVsU2VydmljZXMtYWN0aW9uYmFyLXNoYWRvdyB7CiAgICAgIC0tc2hhZG93LWRpc3RhbmNlOiAwLjJyZW07CiAgICAgIGJveC1zaGFkb3c6IDAgdmFyKC0tc2hhZG93LWRpc3RhbmNlKSB2YXIoLS1zaGFkb3ctZGlzdGFuY2UpIGhzbGEoMCwgMCUsIDAlLCAwLjEpOwogICB9CgogICAuUGFuZWxTZXJ2aWNlcy1wYWdlcyB7CiAgICAgIHotaW5kZXg6IDE7CiAgICAgIHNjcm9sbC1wYWRkaW5nLXRvcDogMzMlOwogICAgICBnYXA6IDJlbTsKCiAgICAgIHdpZHRoOiAxMDAlOwogICAgICBkaXNwbGF5OiBmbGV4OwogICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogICAgICBmbGV4LWdyb3c6IDE7CiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgICAgIHBhZGRpbmc6IDFyZW07CgogICAgICAuUGFuZWxTZXJ2aWNlcy1pdGVtcyB7CiAgICAgICAgIHdpZHRoOiAxMDAlOwogICAgICB9CiAgICAgIC5QYW5lbFNlcnZpY2VzLWl0ZW1zLWdyaWRWaWV3IHsKICAgICAgICAgbWF4LXdpZHRoOiB2YXIoLS1tYXgtd2lkdGgpOwogICAgICAgICBtYXJnaW4tdG9wOiAtMC41cmVtOwogICAgICAgICBnYXA6IDAuNXJlbTsKICAgICAgICAgZGlzcGxheTogZ3JpZDsKICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maXQsIG1pbm1heCgxMHJlbSwgMWZyKSk7CgogICAgICAgICAuUGFuZWxTZXJ2aWNlcy1pdGVtcy1oZWFkZXIgewogICAgICAgICAgICBncmlkLWNvbHVtbjogMSAvIC0xOwogICAgICAgICB9CiAgICAgICAgIC5QYW5lbFNlcnZpY2VzLWl0ZW0gewogICAgICAgICAgICB3aWR0aDogMTAwJTsKICAgICAgICAgICAgYXNwZWN0LXJhdGlvOiAxLzE7CiAgICAgICAgIH0KICAgICAgfQogICAgICAuUGFuZWxTZXJ2aWNlcy1pdGVtcy1saXN0VmlldyB7CiAgICAgICAgIG1heC13aWR0aDogMjhyZW07CiAgICAgICAgIG1heC13aWR0aDogMzJyZW07CiAgICAgICAgIGdhcDogMC41cmVtOwogICAgICAgICBkaXNwbGF5OiBmbGV4OwogICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyOwoKICAgICAgICAgLlBhbmVsU2VydmljZXMtaXRlbSB7CiAgICAgICAgICAgIHdpZHRoOiAxMDAlOwogICAgICAgICB9CiAgICAgIH0KICAgICAgLlBhbmVsU2VydmljZXMtaXRlbXMtZGV0YWlsVmlldyB7CiAgICAgICAgIGRpc3BsYXk6IGZsZXg7CiAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47CiAgICAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0OwogICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7CiAgICAgICAgIGdhcDogMC4xcmVtOwoKICAgICAgICAgLlBhbmVsU2VydmljZXMtaXRlbXMtaGVhZGVyIHsKICAgICAgICAgICAgZ2FwOiAwLjVyZW07CiAgICAgICAgICAgIHBhZGRpbmc6IDFyZW07CgogICAgICAgICAgICBkaXNwbGF5OiBmbGV4OwogICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93OwoKICAgICAgICAgICAgJiA+ICogewogICAgICAgICAgICAgICAtLXdpZHRoOiAycmVtOwogICAgICAgICAgICAgICBoZWlnaHQ6IDEuMXJlbTsKICAgICAgICAgICAgICAgd2hpdGUtc3BhY2U6IHByZS1saW5lOwogICAgICAgICAgICAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpczsKICAgICAgICAgICAgICAgd29yZC13cmFwOiBicmVhay13b3JkOwogICAgICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuOwogICAgICAgICAgICB9CgogICAgICAgICAgICAuUHJvcGVydHktY3VzdG9tZXJOYW1lIHsKICAgICAgICAgICAgICAgd2lkdGg6IHZhcigtLXdpZHRoKTsKICAgICAgICAgICAgICAgbWluLXdpZHRoOiB2YXIoLS13aWR0aCk7CiAgICAgICAgICAgICAgIG1heC13aWR0aDogdmFyKC0td2lkdGgpOwogICAgICAgICAgICB9CgogICAgICAgICAgICAuUHJvcGVydHktY3VzdG9tZXJQaG9uZU51bWJlciB7CiAgICAgICAgICAgICAgIHdpZHRoOiB2YXIoLS13aWR0aCk7CiAgICAgICAgICAgICAgIG1pbi13aWR0aDogdmFyKC0td2lkdGgpOwogICAgICAgICAgICAgICBtYXgtd2lkdGg6IHZhcigtLXdpZHRoKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgLlByb3BlcnR5LWRlc2NyaXB0aW9uIHsKICAgICAgICAgICAgICAgd2lkdGg6IHZhcigtLXdpZHRoKTsKICAgICAgICAgICAgICAgbWluLXdpZHRoOiB2YXIoLS13aWR0aCk7CiAgICAgICAgICAgICAgIG1heC13aWR0aDogdmFyKC0td2lkdGgpOwogICAgICAgICAgICB9CgogICAgICAgICAgICAuUHJvcGVydHktaW1hZ2VzIHsKICAgICAgICAgICAgICAgd2lkdGg6IHZhcigtLXdpZHRoKTsKICAgICAgICAgICAgICAgbWluLXdpZHRoOiB2YXIoLS13aWR0aCk7CiAgICAgICAgICAgICAgIG1heC13aWR0aDogdmFyKC0td2lkdGgpOwogICAgICAgICAgICB9CgogICAgICAgICAgICAuUHJvcGVydHktbm90aWNlIHsKICAgICAgICAgICAgICAgd2lkdGg6IHZhcigtLXdpZHRoKTsKICAgICAgICAgICAgICAgbWluLXdpZHRoOiB2YXIoLS13aWR0aCk7CiAgICAgICAgICAgICAgIG1heC13aWR0aDogdmFyKC0td2lkdGgpOwogICAgICAgICAgICB9CgogICAgICAgICAgICAuUHJvcGVydHktdGltZXN0YW1wIHsKICAgICAgICAgICAgICAgd2lkdGg6IHZhcigtLXdpZHRoKTsKICAgICAgICAgICAgICAgbWluLXdpZHRoOiB2YXIoLS13aWR0aCk7CiAgICAgICAgICAgICAgIG1heC13aWR0aDogdmFyKC0td2lkdGgpOwogICAgICAgICAgICB9CiAgICAgICAgIH0KICAgICAgfQogICB9Cn0K"},{"version":3,"sources":["PanelLeft.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"PanelLeft.vue","sourceRoot":"src/pages/service","sourcesContent":["<script>\r\n   import ModuleService from \"@/../../express/data_structures/Service.js\";\r\n   import ServiceState from \"@/items/ServiceState.js\";\r\n\r\n   import Actionbar from \"./PageService_Actionbar.vue\";\r\n   import ItemServiceGrid from \"./ItemService_Grid.vue\";\r\n   import ItemServiceList from \"./ItemService_List.vue\";\r\n   import ItemServiceDetail from \"./ItemService_Detail.vue\";\r\n   import Empty from \"@/components/Empty.vue\";\r\n\r\n   const { State } = ModuleService;\r\n\r\n   class Sort {\r\n      static Property = {\r\n         Date: { Ascending: \"latest\", Descending: \"oldest\" },\r\n         Name: { Ascending: \"az\", Descending: \"za\" },\r\n         Price: { Ascending: \"highest\", Descending: \"lowest\" },\r\n      };\r\n      static Sorter = {\r\n         Date: {\r\n            Ascending(item1, item2) {\r\n               let timestamp1 = item1.timestamp;\r\n               let timestamp2 = item2.timestamp;\r\n               let time1 = timestamp1 ? timestamp1.time : 0;\r\n               let time2 = timestamp2 ? timestamp2.time : 0;\r\n               return time2 - time1;\r\n            },\r\n         },\r\n         Name: {\r\n            Ascending(item1, item2) {\r\n               let customer1 = item1.customer;\r\n               let customer2 = item2.customer;\r\n               let name1 = customer1 ? customer1.name : \"\";\r\n               let name2 = customer2 ? customer2.name : \"\";\r\n               name1 = typeof name1 === \"string\" ? name1 : \"\";\r\n               name2 = typeof name2 === \"string\" ? name2 : \"\";\r\n               return name1.localeCompare(name2);\r\n            },\r\n         },\r\n         PhoneNumber: {\r\n            Ascending(item1, item2) {\r\n               let customer1 = item1.customer;\r\n               let customer2 = item2.customer;\r\n               let phoneNumber1 = customer1 ? customer1.phoneNumber : \"\";\r\n               let phoneNumber2 = customer2 ? customer2.phoneNumber : \"\";\r\n               phoneNumber1 = typeof phoneNumber1 === \"string\" ? phoneNumber1 : \"\";\r\n               phoneNumber2 = typeof phoneNumber2 === \"string\" ? phoneNumber2 : \"\";\r\n               return phoneNumber1.localeCompare(phoneNumber2);\r\n            },\r\n         },\r\n         Price: {\r\n            Ascending(item1, item2) {\r\n               console.log(item1);\r\n            },\r\n         },\r\n      };\r\n   }\r\n\r\n   export default {\r\n      emits: [\"click-service\", \"click-service-delete\"],\r\n      components: {\r\n         Empty,\r\n         Actionbar,\r\n         ItemServiceGrid,\r\n         ItemServiceList,\r\n         ItemServiceDetail,\r\n      },\r\n      props: {\r\n         menus: { type: Array, default: () => [] },\r\n         services: { type: Array, default: () => [] },\r\n         currentItem: { type: Object, default: () => null },\r\n      },\r\n      data() {\r\n         return {\r\n            scrollTop: 0,\r\n\r\n            stateMenuIndex: 0,\r\n            stateMenus: [\r\n               State.Pending,\r\n               State.Waiting,\r\n               State.Completed,\r\n               State.Rejected,\r\n            ].map((stateKey) => {\r\n               const resource = ServiceState.getResourceByKey(stateKey);\r\n               return {\r\n                  key: stateKey,\r\n\r\n                  title: resource.title,\r\n\r\n                  icon: resource.icon.color,\r\n                  iconSelected: resource.icon.white,\r\n\r\n                  primaryColor: resource.color,\r\n                  isPrimaryColorBright: true,\r\n\r\n                  list: [],\r\n\r\n                  isSelected: () =>\r\n                     this.stateMenus[this.stateMenuIndex] &&\r\n                     this.stateMenus[this.stateMenuIndex].key === stateKey,\r\n                  click: () => {\r\n                     if (this.currentState !== stateKey)\r\n                        this.$root.replaceRoute({ query: { state: stateKey } });\r\n                  },\r\n               };\r\n            }),\r\n\r\n            currentLayoutIndex: 1,\r\n            layoutMenus: [\r\n               {\r\n                  title: \"Grid View\",\r\n                  icon: this.host.res(\"icon/grid-000000.svg\"),\r\n                  click: (menu) =>\r\n                     (this.currentLayoutIndex = this.layoutMenus.indexOf(menu)),\r\n               },\r\n               {\r\n                  title: \"List View\",\r\n                  icon: this.host.res(\"icon/list-000000.svg\"),\r\n                  click: (menu) =>\r\n                     (this.currentLayoutIndex = this.layoutMenus.indexOf(menu)),\r\n               },\r\n               {\r\n                  title: \"Detail View\",\r\n                  icon: this.host.res(\"icon/detail-000000.svg\"),\r\n                  click: (menu) =>\r\n                     (this.currentLayoutIndex = this.layoutMenus.indexOf(menu)),\r\n               },\r\n            ],\r\n\r\n            currentSortIndex: 0,\r\n            sortMenus: [\r\n               {\r\n                  key: \"dateCreatedlo\",\r\n                  title: \"Date Created (Latest-Oldest)\",\r\n                  color: \"#0771D2\",\r\n                  click: (menu) => (this.currentSortIndex = this.sortMenus.indexOf(menu)),\r\n               },\r\n               {\r\n                  key: \"customerNameaz\",\r\n                  title: \"Customer Name (a-z)\",\r\n                  color: \"#0771D2\",\r\n                  click: (menu) => (this.currentSortIndex = this.sortMenus.indexOf(menu)),\r\n               },\r\n               {\r\n                  key: \"phoneNumber09\",\r\n                  title: \"Phone Number (0-9)\",\r\n                  color: \"#0771D2\",\r\n                  click: (menu) => (this.currentSortIndex = this.sortMenus.indexOf(menu)),\r\n               },\r\n            ],\r\n\r\n            properties: [\r\n               { key: \"customerName\", width: 128 },\r\n               { key: \"customerPhoneNumber\", width: 112 },\r\n               { key: \"description\", width: 224 },\r\n               { key: \"images\", width: 80 },\r\n               { key: \"notice\", width: 160 },\r\n               { key: \"timestamp\", width: 176 },\r\n            ],\r\n         };\r\n      },\r\n      computed: {\r\n         currentItems() {\r\n            return this.stateMenus[this.stateMenuIndex].list.sort((item1, item2) => {\r\n               let value = 0;\r\n\r\n               if (this.sortKeys.dateCreatedKey === Sort.Property.Date.Ascending)\r\n                  value = Sort.Sorter.Date.Ascending(item1, item2);\r\n               else if (this.sortKeys.dateCreatedKey === Sort.Property.Date.Descending)\r\n                  value = Sort.Sorter.Date.Ascending(item2, item1);\r\n\r\n               if (value !== 0) return value;\r\n\r\n               if (this.sortKeys.customerNameKey === Sort.Property.Name.Ascending)\r\n                  value = Sort.Sorter.Name.Ascending(item1, item2);\r\n               else if (this.sortKeys.customerNameKey === Sort.Property.Name.Descending)\r\n                  value = Sort.Sorter.Name.Ascending(item2, item1);\r\n\r\n               if (value !== 0) return value;\r\n\r\n               if (this.sortKeys.phoneNumberKey === Sort.Property.Name.Ascending)\r\n                  value = Sort.Sorter.PhoneNumber.Ascending(item1, item2);\r\n               else if (this.sortKeys.phoneNumberKey === Sort.Property.Name.Descending)\r\n                  value = Sort.Sorter.PhoneNumber.Ascending(item2, item1);\r\n\r\n               if (value !== 0) return value;\r\n\r\n               if (this.sortKeys.totalCostKey === Sort.Property.Price.Ascending)\r\n                  value = Sort.Sorter.Price.Ascending(item1, item2);\r\n               else if (this.sortKeys.totalCostKey === Sort.Property.Price.Descending)\r\n                  value = Sort.Sorter.Price.Ascending(item2, item1);\r\n\r\n               return value;\r\n            });\r\n         },\r\n         currentState() {\r\n            let { state } = this.$route.query;\r\n            return typeof state === \"string\" ? state : \"\";\r\n         },\r\n         sortKeys() {\r\n            return {\r\n               dateCreatedKey:\r\n                  this.currentSortIndex === 0 ? Sort.Property.Date.Ascending : \"\",\r\n               customerNameKey:\r\n                  this.currentSortIndex === 1 ? Sort.Property.Name.Ascending : \"\",\r\n               phoneNumberKey:\r\n                  this.currentSortIndex === 2 ? Sort.Property.Name.Ascending : \"\",\r\n               totalCostKey:\r\n                  this.currentSortIndex === 2 ? Sort.Property.Price.Ascending : \"\",\r\n            };\r\n         },\r\n      },\r\n      watch: {\r\n         currentState() {\r\n            this.invalidateState();\r\n         },\r\n         services() {\r\n            this.invalidateList();\r\n         },\r\n      },\r\n      methods: {\r\n         setPageSelected(stateKey) {\r\n            const stateMenu = this.stateMenus.find((stateMenu) => {\r\n               return stateMenu.key === stateKey;\r\n            });\r\n\r\n            if (!stateMenu && this.stateMenus.length && Object.keys(State).length) {\r\n               this.$root.replaceRoute({\r\n                  query: { state: State[Object.keys(State)[0]] },\r\n               });\r\n            }\r\n\r\n            this.stateMenuIndex = this.stateMenus.indexOf(stateMenu);\r\n         },\r\n\r\n         invalidateList() {\r\n            const filter = (services, key) => {\r\n               const tab = this.stateMenus.find((tab) => tab.key === key);\r\n               if (tab) {\r\n                  tab.list = services.filter((service) => {\r\n                     return service.getState() === key;\r\n                  });\r\n               }\r\n            };\r\n\r\n            const services = Array.isArray(this.services) ? this.services : [];\r\n            filter(services, State.Pending);\r\n            filter(services, State.Waiting);\r\n            filter(services, State.Completed);\r\n            filter(services, State.Rejected);\r\n\r\n            this.invalidateState();\r\n\r\n            setTimeout(() => {\r\n               if (this.$refs.PanelGroupServiceTabs) {\r\n                  this.$refs.PanelGroupServiceTabs.scrollLeft = 0;\r\n               }\r\n            }, 2000);\r\n         },\r\n         invalidateState() {\r\n            const { currentState } = this;\r\n            this.setPageSelected(currentState);\r\n         },\r\n\r\n         getPropertyByKey(key) {\r\n            return this.properties.find((property) => property.key === key);\r\n         },\r\n      },\r\n      mounted() {\r\n         this.invalidateList();\r\n         this.invalidateState();\r\n      },\r\n   };\r\n</script>\r\n\r\n<template>\r\n   <div class=\"PanelServices\" @scroll=\"(e) => (scrollTop = e.target.scrollTop)\">\r\n      <Actionbar\r\n         :class=\"[\r\n            'PanelServices-actionbar',\r\n            scrollTop > 0 ? 'PanelServices-actionbar-shadow' : '',\r\n         ]\"\r\n         :menus=\"menus\"\r\n         :services=\"services\"\r\n         :stateMenus=\"stateMenus\"\r\n         :layoutMenus=\"layoutMenus\"\r\n         :layoutMenuIndex=\"currentLayoutIndex\"\r\n         :sortMenus=\"sortMenus\"\r\n         :sortMenuIndex=\"currentSortIndex\"\r\n         @click-drawer-expand=\"$emit('click-drawer-expand')\"\r\n         @click-service=\"(service) => $emit('click-service', service)\"\r\n      />\r\n\r\n      <div\r\n         class=\"PanelServices-pages\"\r\n         v-if=\"stateMenus[stateMenuIndex] && stateMenus[stateMenuIndex].list.length\"\r\n      >\r\n         <div\r\n            :class=\"['PanelServices-items', 'PanelServices-items-gridView']\"\r\n            v-if=\"currentLayoutIndex === 0\"\r\n         >\r\n            <div class=\"PanelServices-items-header\"></div>\r\n            <ItemServiceGrid\r\n               class=\"PanelServices-item\"\r\n               v-for=\"item in currentItems\"\r\n               :ref=\"`Service${item.getId()}`\"\r\n               :key=\"`Service${item.getId()}`\"\r\n               :item=\"item\"\r\n               :isSelected=\"currentItem === item\"\r\n               @callback-view=\"$emit('click-service', item)\"\r\n               @callback-delete=\"$emit('click-service-delete', item)\"\r\n            />\r\n         </div>\r\n\r\n         <div\r\n            :class=\"['PanelServices-items', 'PanelServices-items-listView']\"\r\n            v-if=\"currentLayoutIndex === 1\"\r\n         >\r\n            <ItemServiceList\r\n               class=\"PanelServices-item\"\r\n               v-for=\"item in currentItems\"\r\n               :ref=\"`Service${item.getId()}`\"\r\n               :key=\"`Service${item.getId()}`\"\r\n               :item=\"item\"\r\n               :isSelected=\"currentItem === item\"\r\n               @callback-view=\"$emit('click-service', item)\"\r\n               @callback-delete=\"$emit('click-service-delete', item)\"\r\n            />\r\n         </div>\r\n\r\n         <div\r\n            :class=\"['PanelServices-items', 'PanelServices-items-detailView']\"\r\n            v-if=\"currentLayoutIndex === 2\"\r\n         >\r\n            <div class=\"PanelServices-items-header\">\r\n               <span\r\n                  class=\"Property-customerName\"\r\n                  :style=\"{ '--width': `${getPropertyByKey('customerName').width}px` }\"\r\n                  >Customer Name</span\r\n               >\r\n               <span\r\n                  class=\"Property-customerPhoneNumber\"\r\n                  :style=\"{\r\n                     '--width': `${getPropertyByKey('customerPhoneNumber').width}px`,\r\n                  }\"\r\n                  >Customer Phone Number</span\r\n               >\r\n               <span\r\n                  class=\"Property-description\"\r\n                  :style=\"{ '--width': `${getPropertyByKey('description').width}px` }\"\r\n                  >Description</span\r\n               >\r\n               <span\r\n                  class=\"Property-images\"\r\n                  :style=\"{ '--width': `${getPropertyByKey('images').width}px` }\"\r\n                  >Images</span\r\n               >\r\n               <span\r\n                  class=\"Property-notice\"\r\n                  :style=\"{ '--width': `${getPropertyByKey('notice').width}px` }\"\r\n                  >Notice</span\r\n               >\r\n               <span\r\n                  class=\"Property-timestamp\"\r\n                  :style=\"{ '--width': `${getPropertyByKey('timestamp').width}px` }\"\r\n                  >Date Created</span\r\n               >\r\n            </div>\r\n\r\n            <ItemServiceDetail\r\n               class=\"PanelServices-item\"\r\n               v-for=\"item in currentItems\"\r\n               :ref=\"`Service${item.getId()}`\"\r\n               :key=\"`Service${item.getId()}`\"\r\n               :item=\"item\"\r\n               :isSelected=\"currentItem === item\"\r\n               :properties=\"properties\"\r\n               @callback-view=\"$emit('click-service', item)\"\r\n               @callback-delete=\"$emit('click-service-delete', item)\"\r\n            />\r\n         </div>\r\n      </div>\r\n\r\n      <Empty v-if=\"!services.length && !serviceStore.getters.isLoading\" />\r\n   </div>\r\n</template>\r\n\r\n<style lang=\"scss\" scoped>\r\n   .PanelServices {\r\n      width: 100%;\r\n      height: 100%;\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: stretch;\r\n      justify-content: flex-start;\r\n      overflow-y: auto;\r\n      overflow-x: auto;\r\n\r\n      --max-width: 60rem;\r\n\r\n      .PanelServices-actionbar {\r\n         z-index: 2;\r\n         position: sticky;\r\n         top: 0;\r\n         left: 0;\r\n         right: 0;\r\n         width: 100%;\r\n         flex-grow: 0;\r\n         z-index: 2;\r\n         transition: var(--animation-duration);\r\n      }\r\n      .PanelServices-actionbar-shadow {\r\n         --shadow-distance: 0.2rem;\r\n         box-shadow: 0 var(--shadow-distance) var(--shadow-distance) hsla(0, 0%, 0%, 0.1);\r\n      }\r\n\r\n      .PanelServices-pages {\r\n         z-index: 1;\r\n         scroll-padding-top: 33%;\r\n         gap: 2em;\r\n\r\n         width: 100%;\r\n         display: flex;\r\n         flex-direction: column;\r\n         flex-grow: 1;\r\n         align-items: center;\r\n         padding: 1rem;\r\n\r\n         .PanelServices-items {\r\n            width: 100%;\r\n         }\r\n         .PanelServices-items-gridView {\r\n            max-width: var(--max-width);\r\n            margin-top: -0.5rem;\r\n            gap: 0.5rem;\r\n            display: grid;\r\n            grid-template-columns: repeat(auto-fit, minmax(10rem, 1fr));\r\n\r\n            .PanelServices-items-header {\r\n               grid-column: 1 / -1;\r\n            }\r\n            .PanelServices-item {\r\n               width: 100%;\r\n               aspect-ratio: 1/1;\r\n            }\r\n         }\r\n         .PanelServices-items-listView {\r\n            max-width: 28rem;\r\n            max-width: 32rem;\r\n            gap: 0.5rem;\r\n            display: flex;\r\n            flex-direction: column;\r\n            align-items: center;\r\n\r\n            .PanelServices-item {\r\n               width: 100%;\r\n            }\r\n         }\r\n         .PanelServices-items-detailView {\r\n            display: flex;\r\n            flex-direction: column;\r\n            align-items: flex-start;\r\n            justify-content: flex-start;\r\n            gap: 0.1rem;\r\n\r\n            .PanelServices-items-header {\r\n               gap: 0.5rem;\r\n               padding: 1rem;\r\n\r\n               display: flex;\r\n               flex-direction: row;\r\n\r\n               & > * {\r\n                  --width: 2rem;\r\n                  height: 1.1rem;\r\n                  white-space: pre-line;\r\n                  text-overflow: ellipsis;\r\n                  word-wrap: break-word;\r\n                  overflow: hidden;\r\n               }\r\n\r\n               .Property-customerName {\r\n                  width: var(--width);\r\n                  min-width: var(--width);\r\n                  max-width: var(--width);\r\n               }\r\n\r\n               .Property-customerPhoneNumber {\r\n                  width: var(--width);\r\n                  min-width: var(--width);\r\n                  max-width: var(--width);\r\n               }\r\n\r\n               .Property-description {\r\n                  width: var(--width);\r\n                  min-width: var(--width);\r\n                  max-width: var(--width);\r\n               }\r\n\r\n               .Property-images {\r\n                  width: var(--width);\r\n                  min-width: var(--width);\r\n                  max-width: var(--width);\r\n               }\r\n\r\n               .Property-notice {\r\n                  width: var(--width);\r\n                  min-width: var(--width);\r\n                  max-width: var(--width);\r\n               }\r\n\r\n               .Property-timestamp {\r\n                  width: var(--width);\r\n                  min-width: var(--width);\r\n                  max-width: var(--width);\r\n               }\r\n            }\r\n         }\r\n      }\r\n   }\r\n</style>\r\n"]}]}