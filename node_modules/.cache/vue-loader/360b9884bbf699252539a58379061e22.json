{"remainingRequest":"C:\\dev\\freshnet-v2\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\dev\\freshnet-v2\\vue\\src\\pages\\service\\PageService.vue?vue&type=style&index=0&id=1f362050&lang=scss&scoped=true&","dependencies":[{"path":"C:\\dev\\freshnet-v2\\vue\\src\\pages\\service\\PageService.vue","mtime":1665403874116},{"path":"C:\\dev\\freshnet-v2\\vue\\node_modules\\css-loader\\index.js","mtime":1662650920109},{"path":"C:\\dev\\freshnet-v2\\vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1662650934772},{"path":"C:\\dev\\freshnet-v2\\vue\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1662650932744},{"path":"C:\\dev\\freshnet-v2\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1662650916242},{"path":"C:\\dev\\freshnet-v2\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1662650934771}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5QYWdlU2VydmljZSB7CiAgIGRpc3BsYXk6IGZsZXg7CiAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47CiAgIGFsaWduLWl0ZW1zOiBzdHJldGNoOwogICBqdXN0aWZ5LWNvbnRlbnQ6IHN0cmV0Y2g7CiAgIHdpZHRoOiAxMDAlOwogICBoZWlnaHQ6IDEwMCU7CiAgIG1heC13aWR0aDogMTAwJTsKICAgbWF4LWhlaWdodDogMTAwJTsKICAgcG9zaXRpb246IHJlbGF0aXZlOwogICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTVlY2VlOwoKICAgLS1ib2R5LXBhZGRpbmc6IDAuOXJlbTsKCiAgIC5QYWdlU2VydmljZS1wYW5lbHMgewogICAgICB3aWR0aDogMTAwJTsKICAgICAgaGVpZ2h0OiAxMDAlOwogICAgICB6LWluZGV4OiAxOwogICAgICBvdmVyZmxvdzogaGlkZGVuOwogICAgICBwb3NpdGlvbjogcmVsYXRpdmU7CgogICAgICBkaXNwbGF5OiBmbGV4OwogICAgICBmbGV4LWRpcmVjdGlvbjogcm93OwogICAgICBmbGV4LWdyb3c6IDE7CiAgICAgIGFsaWduLWl0ZW1zOiBzdHJldGNoOwoKICAgICAgLlBhZ2VTZXJ2aWNlLVBhbmVsU2VydmljZXMgewogICAgICAgICB6LWluZGV4OiAxOwogICAgICB9CiAgICAgIC5QYWdlU2VydmljZS1QYW5lbFJpZ2h0RW1wdHkgewogICAgICAgICB6LWluZGV4OiAyOwogICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYWRiOGJiOwogICAgICAgICBkaXNwbGF5OiBmbGV4OwogICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyOwogICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICAgICAgICAgLlBhZ2VTZXJ2aWNlLVBhbmVsUmlnaHRFbXB0eS10ZXh0IHsKICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDkwMDsKICAgICAgICAgICAgZm9udC1zaXplOiAxLjJyZW07CiAgICAgICAgICAgIGNvbG9yOiBoc2woMCwgMCUsIDg0JSk7CiAgICAgICAgICAgIGJhY2tncm91bmQ6IGhzbGEoMCwgMCUsIDAlLCAwLjA0KTsKICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMXJlbTsKICAgICAgICAgICAgcGFkZGluZzogNHJlbSA1cmVtOwogICAgICAgICB9CiAgICAgIH0KCiAgICAgIC5QYWdlU2VydmljZS1SaWdodERyYXdlciB7CiAgICAgICAgIHotaW5kZXg6IDM7CiAgICAgICAgIC5QYWdlU2VydmljZS1QYW5lbFJpZ2h0IHsKICAgICAgICAgICAgd2lkdGg6IDEwMHZ3OwogICAgICAgICAgICBtYXgtd2lkdGg6IDEwMCU7CiAgICAgICAgIH0KICAgICAgfQogICB9CiAgIC5QYWdlU2VydmljZS1pc0xlc3MxMjAwcHggewogICAgICAuUGFnZVNlcnZpY2UtUGFuZWxTZXJ2aWNlcyB7CiAgICAgICAgIHdpZHRoOiAxMDB2dzsKICAgICAgICAgbWF4LXdpZHRoOiAxMDAlOwogICAgICB9CiAgICAgIC5QYWdlU2VydmljZS1QYW5lbFJpZ2h0RW1wdHkgewogICAgICAgICBkaXNwbGF5OiBub25lOwogICAgICB9CiAgICAgIC5QYWdlU2VydmljZS1SaWdodERyYXdlciB7CiAgICAgICAgIHdpZHRoOiAxMDB2dzsKICAgICAgICAgbWF4LXdpZHRoOiAxMDAlOwogICAgICB9CiAgIH0KICAgLlBhZ2VTZXJ2aWNlLWlzT3ZlcjEyMDBweCB7CiAgICAgIC5QYWdlU2VydmljZS1QYW5lbFNlcnZpY2VzIHsKICAgICAgICAgd2lkdGg6IDEwMHZ3OwogICAgICAgICBtYXgtd2lkdGg6IDUwJTsKICAgICAgfQogICAgICAuUGFnZVNlcnZpY2UtUGFuZWxSaWdodEVtcHR5IHsKICAgICAgICAgd2lkdGg6IDEwMHZ3OwogICAgICAgICBtYXgtd2lkdGg6IDUwJTsKICAgICAgfQogICAgICAuUGFnZVNlcnZpY2UtUmlnaHREcmF3ZXIgewogICAgICAgICB3aWR0aDogMTAwdnc7CiAgICAgICAgIG1heC13aWR0aDogNTAlOwogICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICAgIH0KICAgfQoKICAgLlBhZ2VTZXJ2aWNlLXdpbmRvdyB7CiAgICAgIHotaW5kZXg6IDQ7CiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgICAgLlBhZ2VTZXJ2aWNlLXdpbmRvdy1jaGlsZCB7CiAgICAgICAgIG1heC13aWR0aDogMTAwJTsKICAgICAgICAgaGVpZ2h0OiAxMDAlOwogICAgICAgICBvdmVyZmxvdzogYXV0bzsKICAgICAgfQogICB9CgogICAuUGFnZVNlcnZpY2UtbG9hZGluZyB7CiAgICAgIHotaW5kZXg6IDU7CiAgICAgIGJvdHRvbTogMDsKICAgICAgcG9zaXRpb246IGFic29sdXRlOwogICB9Cn0K"},{"version":3,"sources":["PageService.vue"],"names":[],"mappingslBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"PageService.vue","sourceRoot":"src/pages/service","sourcesContent":["<script>\r\n   import Loadingv1 from \"@/components/Loading.vue\";\r\n   import PopupWindow from \"@/components/window/PopupWindow.vue\";\r\n   import WindowRemove from \"@/components/window/WindowRemove.vue\";\r\n   import PanelServices from \"./PanelServices.vue\";\r\n   import PanelService from \"./PanelService.vue\";\r\n   import WindowImportService from \"./WindowImportService.vue\";\r\n   import WindowAddService from \"./WindowAddService.vue\";\r\n   import WindowAddEvent from \"./WindowAddEvent.vue\";\r\n   import WindowUpdateDescription from \"./WindowUpdateDescription.vue\";\r\n   import WindowUpdateBelonging from \"./WindowUpdateBelonging.vue\";\r\n   import WindowViewImage from \"./WindowViewImage.vue\";\r\n   import WindowUpdateCustomer from \"./WindowUpdateCustomer.vue\";\r\n   import Drawer from \"@/components/Drawer.vue\";\r\n\r\n   export default {\r\n      key: \"service\",\r\n      title: \"Services\",\r\n      icon: { light: \"service-FFFFFF\", dark: \"service-2A4858\" },\r\n      userPermissions: [\"admin\", \"staff\"],\r\n\r\n      components: {\r\n         PanelServices,\r\n         Loadingv1,\r\n         PopupWindow,\r\n         PanelService,\r\n         WindowImportService,\r\n         WindowAddService,\r\n         WindowAddEvent,\r\n         WindowUpdateCustomer,\r\n         WindowViewImage,\r\n         WindowUpdateDescription,\r\n         WindowUpdateBelonging,\r\n         WindowRemove,\r\n         Drawer,\r\n      },\r\n      emits: [\"callback-side-expand\"],\r\n      data() {\r\n         return {\r\n            actions: {\r\n               onClickClose: () =>\r\n                  this.$root.nextRoute({ query: { service: null } }),\r\n               onClickRemove: (x) => this.onClickRemoveService(x),\r\n               onClickAddEvent: (x) => this.onClickAddEvent(x),\r\n               onClickRemoveEvent: (x) => this.onClickRemoveEvent(x),\r\n               onClickOpenImage: (x) => this.onClickOpenImage(x),\r\n               onClickRemoveImage: (x) => this.onClickRemoveImage(x),\r\n               onClickUpdateCustomer: (x) => this.onClickUpdateCustomer(x),\r\n               onClickUpdateDescription: (x) =>\r\n                  this.onClickUpdateDescription(x),\r\n               onClickUpdateBelongings: (x) => this.onClickUpdateBelongings(x),\r\n            },\r\n\r\n            panel: { isShowing: false },\r\n            bottomSheet: { isShowing: false, item: null },\r\n            popup: {\r\n               importService: { isShowing: false },\r\n               newService: { isShowing: false },\r\n               removeService: { isShowing: false, value: null },\r\n               newEvent: { isShowing: false },\r\n               removeEvent: { isShowing: false, value: null },\r\n               customer: { isShowing: false, value: null },\r\n               viewImage: { isShowing: false, value: null },\r\n               removeImage: { isShowing: false, value: null },\r\n               editDescription: { isShowing: false, value: \"\" },\r\n               belongings: { isShowing: false, values: [] },\r\n            },\r\n\r\n            searchResults: [],\r\n\r\n            currentService: null,\r\n            drawerService: null,\r\n         };\r\n      },\r\n      computed: {\r\n         itemDrawerEdge: () => Drawer.Edge.RIGHT,\r\n         itemDrawerMode() {\r\n            if (this.isOver1200px) {\r\n               return this.currentService\r\n                  ? Drawer.Mode.FIXED_EXPAND\r\n                  : Drawer.Mode.FIXED_COLLAPSE;\r\n            } else {\r\n               return this.currentService\r\n                  ? Drawer.Mode.DRAWER_EXPAND\r\n                  : Drawer.Mode.DRAWER_COLLAPSE;\r\n            }\r\n         },\r\n\r\n         isOver1200px: (c) => c.$root.window.innerWidth > 1200,\r\n\r\n         actionMenus() {\r\n            let actionMenus = [];\r\n\r\n            if (this.isCurrentStatePending) {\r\n               actionMenus.push({\r\n                  key: \"add\",\r\n                  title: \"Add\",\r\n                  icon: this.host.res(\"icon/add-2A4858.svg\"),\r\n                  click: this.clickAddService,\r\n               });\r\n            }\r\n\r\n            if (\r\n               this.isCurrentStatePending &&\r\n               this.isCurrentUserAdmin &&\r\n               this.isCurrentUserDefault\r\n            ) {\r\n               actionMenus.push({\r\n                  key: \"import\",\r\n                  title: \"Import\",\r\n                  click: this.clickImportService,\r\n               });\r\n            }\r\n\r\n            if (this.currentUser) {\r\n               actionMenus.push({\r\n                  key: \"refresh\",\r\n                  title: \"Refresh\",\r\n                  icon: this.host.res(\"icon/refresh-2A4858.svg\"),\r\n                  click: this.clickRefresh,\r\n               });\r\n            }\r\n\r\n            return actionMenus;\r\n         },\r\n\r\n         currentUser() {\r\n            return this.loginStore.getters.user;\r\n         },\r\n         isCurrentUserAdmin() {\r\n            return this.currentUser ? this.currentUser.isTypeAdmin() : false;\r\n         },\r\n         isCurrentUserDefault() {\r\n            return this.currentUser ? this.currentUser.isDefault() : false;\r\n         },\r\n\r\n         currentState() {\r\n            return this.$route.query.state;\r\n         },\r\n         isCurrentStatePending() {\r\n            return this.currentState === \"pending\";\r\n         },\r\n\r\n         services() {\r\n            return this.serviceStore.getters.items;\r\n         },\r\n         currentServiceId() {\r\n            return this.$route.query.service;\r\n         },\r\n      },\r\n      watch: {\r\n         services() {\r\n            this.invalidateService();\r\n            this.onCurrentServiceId();\r\n         },\r\n         currentServiceId() {\r\n            this.invalidateService();\r\n            this.onCurrentServiceId();\r\n         },\r\n\r\n         currentService() {\r\n            if (!this.currentService) {\r\n               setTimeout(() => {\r\n                  this.drawerService = this.currentService;\r\n               }, 700);\r\n            } else {\r\n               this.drawerService = this.currentService;\r\n            }\r\n         },\r\n      },\r\n      methods: {\r\n         // notify\r\n         async onCurrentServiceId() {\r\n            this.currentService = null;\r\n            if (this.currentServiceId) {\r\n               const services = await this.serviceStore.dispatch(\"getItems\");\r\n               this.currentService = services.find((service) => {\r\n                  return service.id === this.currentServiceId;\r\n               });\r\n            }\r\n         },\r\n\r\n         // click\r\n         clickAddService() {\r\n            this.onClickAddService();\r\n         },\r\n         clickImportService() {\r\n            this.onClickImportService();\r\n         },\r\n         clickDeleteService(service) {\r\n            this.onClickRemoveService(service);\r\n         },\r\n         clickRefresh() {\r\n            this.serviceStore.dispatch(\"refresh\");\r\n         },\r\n         clickService(service) {\r\n            if (this.currentService) {\r\n               this.$root.replaceRoute({\r\n                  query: { service: service ? service.id : null },\r\n               });\r\n            } else {\r\n               this.$root.nextRoute({\r\n                  query: { service: service ? service.id : null },\r\n               });\r\n            }\r\n         },\r\n\r\n         invalidateService() {\r\n            this.loginStore.dispatch(\"refresh\");\r\n            this.showService(this.currentService);\r\n         },\r\n\r\n         showService(item) {\r\n            const hasSomething = typeof item === \"object\" && item !== null;\r\n\r\n            this.panel.isShowing = hasSomething;\r\n            this.bottomSheet.isShowing = hasSomething;\r\n         },\r\n\r\n         onClickImportService() {\r\n            this.popup.importService.isShowing = true;\r\n         },\r\n         onClickAddService() {\r\n            this.popup.newService.isShowing = true;\r\n         },\r\n         onClickRemoveService(service) {\r\n            this.popup.removeService.isShowing = true;\r\n            this.popup.removeService.value = service;\r\n         },\r\n         onClickAddEvent() {\r\n            this.popup.newEvent.isShowing = true;\r\n         },\r\n         onClickRemoveEvent(value) {\r\n            this.popup.removeEvent.isShowing = true;\r\n            this.popup.removeEvent.value = value;\r\n         },\r\n         onClickUpdateCustomer(customer) {\r\n            this.popup.customer.isShowing = true;\r\n            this.popup.customer.value = customer;\r\n         },\r\n         onClickOpenImage(image) {\r\n            const imageFiles = this.currentService.getImageFiles();\r\n            const index = imageFiles.indexOf(image);\r\n\r\n            this.popup.viewImage.isShowing = true;\r\n            this.popup.viewImage.value = { imageFiles, index };\r\n         },\r\n         onClickRemoveImage(image) {\r\n            this.popup.removeImage.isShowing = true;\r\n            this.popup.removeImage.value = image;\r\n         },\r\n         onClickUpdateDescription(description) {\r\n            this.popup.editDescription.isShowing = true;\r\n            this.popup.editDescription.value = description;\r\n         },\r\n         onClickUpdateBelongings(belongings) {\r\n            this.popup.belongings.isShowing = true;\r\n            this.popup.belongings.values = belongings;\r\n         },\r\n\r\n         onDismissImportService() {\r\n            this.popup.importService.isShowing = false;\r\n         },\r\n         onDismissAddService() {\r\n            this.popup.newService.isShowing = false;\r\n         },\r\n         onDismissRemoveService() {\r\n            this.popup.removeService.isShowing = false;\r\n            this.popup.removeService.value = null;\r\n         },\r\n         onDismissAddEvent() {\r\n            this.popup.newEvent.isShowing = false;\r\n         },\r\n         onDismissRemoveEvent() {\r\n            this.popup.removeEvent.isShowing = false;\r\n            this.popup.removeEvent.value = null;\r\n         },\r\n         onDismissUpdateCustomer() {\r\n            this.popup.customer.isShowing = false;\r\n            this.popup.customer.value = null;\r\n         },\r\n         onDismissOpenImage() {\r\n            this.popup.viewImage.isShowing = false;\r\n            this.popup.viewImage.value = null;\r\n         },\r\n         onDismissRemoveImage() {\r\n            this.popup.removeImage.isShowing = false;\r\n            this.popup.removeImage.value = null;\r\n         },\r\n         onDismissUpdateDescription() {\r\n            this.popup.editDescription.isShowing = false;\r\n            this.popup.editDescription.value = \"\";\r\n         },\r\n         onDismissUpdateBelonging() {\r\n            this.popup.belongings.isShowing = false;\r\n            this.popup.belongings.values = [];\r\n         },\r\n\r\n         onProceedImportService(service) {\r\n            this.popup.importService.isShowing = false;\r\n            this.showService(service);\r\n         },\r\n         onProceedAddService(data) {\r\n            this.serviceStore\r\n               .dispatch(\"addItem\", { data })\r\n               .then((result) => {\r\n                  this.popup.newService.isShowing = !result;\r\n                  this.showService(result);\r\n               })\r\n               .catch((error) => {\r\n                  this.$root.feedback(\"Failed to create a service\");\r\n                  throw error;\r\n               });\r\n         },\r\n         onProceedRemoveService(service) {\r\n            this.serviceStore\r\n               .dispatch(\"removeItemOfId\", { id: service.id })\r\n               .then(() => {\r\n                  this.onDismissRemoveService();\r\n                  if (this.currentServiceId === service.getId()) {\r\n                     this.$root.replaceRoute({ query: { service: null } });\r\n                  }\r\n               })\r\n               .catch((error) => {\r\n                  this.$root.feedback(\"Delete Failed\");\r\n                  throw error;\r\n               });\r\n         },\r\n         onProceedAddEvent(event) {\r\n            this.serviceStore\r\n               .dispatch(\"addEventToId\", {\r\n                  serviceID: this.currentService.id,\r\n                  data: event,\r\n               })\r\n               .then((event) => {\r\n                  this.onDismissAddEvent();\r\n               })\r\n               .catch((error) => {\r\n                  this.$root.feedback(\"Failed to create an event\");\r\n                  throw error;\r\n               });\r\n         },\r\n         onProceedRemoveEvent(value) {\r\n            this.serviceStore\r\n               .dispatch(\"removeEventFromId\", {\r\n                  serviceID: value.service.id,\r\n                  time: value.event.timestamp.time,\r\n               })\r\n               .then((result) => {\r\n                  this.showService(value.service);\r\n                  this.onDismissRemoveEvent();\r\n               });\r\n         },\r\n         onProceedUpdateCustomer(customer) {\r\n            this.serviceStore\r\n               .dispatch(\"updateCustomerOfId\", {\r\n                  serviceID: this.currentService.id,\r\n                  customer,\r\n               })\r\n               .then((service) => {\r\n                  this.onDismissUpdateCustomer();\r\n               })\r\n               .catch((error) => {\r\n                  this.$root.feedback(\"Update Customer Failed\");\r\n                  throw error;\r\n               });\r\n         },\r\n         onProceedRemoveImage(image) {\r\n            this.serviceStore\r\n               .dispatch(\"removeImageFromId\", {\r\n                  serviceID: this.currentService.id,\r\n                  image,\r\n               })\r\n               .then((service) => {\r\n                  this.onDismissOpenImage();\r\n                  this.onDismissRemoveImage();\r\n               })\r\n               .catch((error) => {\r\n                  this.$root.feedback(\"Delete Image Failed\");\r\n                  throw error;\r\n               });\r\n         },\r\n         onProceedUpdateDescription(description) {\r\n            this.serviceStore\r\n               .dispatch(\"updateDescriptionOfId\", {\r\n                  serviceID: this.currentService.id,\r\n                  description,\r\n               })\r\n               .then((service) => {\r\n                  this.onDismissUpdateDescription();\r\n               })\r\n               .catch((error) => {\r\n                  this.$root.feedback(\"Update Description Failed\");\r\n                  throw error;\r\n               });\r\n         },\r\n         onProceedUpdateBelongings(belongings) {\r\n            this.serviceStore\r\n               .dispatch(\"updateBelongingsOfId\", {\r\n                  serviceID: this.currentService.id,\r\n                  belongings,\r\n               })\r\n               .then((service) => {\r\n                  this.onDismissUpdateBelonging();\r\n               })\r\n               .catch((error) => {\r\n                  this.$root.feedback(\"Update Belongings Failed\");\r\n                  throw error;\r\n               });\r\n         },\r\n      },\r\n      mounted() {\r\n         this.loginStore.dispatch(\"refresh\");\r\n         this.serviceStore.dispatch(\"refresh\");\r\n         this.onCurrentServiceId();\r\n      },\r\n   };\r\n</script>\r\n\r\n<template>\r\n   <div class=\"PageService\">\r\n      <div\r\n         :class=\"[\r\n            'PageService-panels',\r\n            `PageService-${isOver1200px ? 'isOver1200px' : 'isLess1200px'}`,\r\n         ]\"\r\n      >\r\n         <PanelServices\r\n            class=\"PageService-PanelServices\"\r\n            :menus=\"actionMenus\"\r\n            :services=\"services\"\r\n            :currentItem=\"currentService\"\r\n            @click-service=\"(item) => clickService(item)\"\r\n            @click-service-delete=\"onClickRemoveService\"\r\n            @click-drawer-expand=\"$emit('click-drawer-expand')\"\r\n         />\r\n\r\n         <div class=\"PageService-PanelRightEmpty\">\r\n            <span class=\"PageService-PanelRightEmpty-text\">Select to view</span>\r\n         </div>\r\n\r\n         <Drawer\r\n            class=\"PageService-RightDrawer\"\r\n            :class=\"[\r\n               isOver1200px ? 'PageService-RightDrawer-isOver1200px' : '',\r\n            ]\"\r\n            :edge=\"itemDrawerEdge\"\r\n            :mode=\"itemDrawerMode\"\r\n            :isExpand=\"!!currentService\"\r\n            :isDrawer=\"!isOver1200px || !!drawerService\"\r\n            @click-collapse=\"$root.nextRoute({ query: { service: null } })\"\r\n         >\r\n            <PanelService\r\n               class=\"PageService-PanelRight\"\r\n               :service=\"drawerService\"\r\n               :actions=\"actions\"\r\n            />\r\n         </Drawer>\r\n      </div>\r\n\r\n      <!-- View Image Window -->\r\n      <WindowViewImage\r\n         class=\"PageService-window\"\r\n         v-if=\"popup.viewImage.value !== null\"\r\n         :isShowing=\"popup.viewImage.isShowing\"\r\n         :imageFiles=\"popup.viewImage.value.imageFiles\"\r\n         :index=\"popup.viewImage.value.index\"\r\n         @click-close=\"onDismissOpenImage\"\r\n      />\r\n\r\n      <!-- Import Service Window -->\r\n      <PopupWindow\r\n         class=\"PageService-window\"\r\n         :isShowing=\"popup.importService.isShowing\"\r\n         @click-dismiss=\"onDismissImportService\"\r\n      >\r\n         <WindowImportService\r\n            class=\"PageService-window-child\"\r\n            @click-cancel=\"onDismissImportService\"\r\n            @click-ok=\"onProceedImportService\"\r\n         />\r\n      </PopupWindow>\r\n\r\n      <!-- Add Service Window -->\r\n      <PopupWindow\r\n         class=\"PageService-window\"\r\n         :isShowing=\"popup.newService.isShowing\"\r\n         @click-dismiss=\"onDismissAddService\"\r\n      >\r\n         <WindowAddService\r\n            class=\"PageService-window-child\"\r\n            @callback-create=\"onProceedAddService\"\r\n            @callback-cancel=\"onDismissAddService\"\r\n         />\r\n      </PopupWindow>\r\n\r\n      <!-- Add Event Window -->\r\n      <PopupWindow\r\n         class=\"PageService-window\"\r\n         :isShowing=\"popup.newEvent.isShowing\"\r\n         @click-dismiss=\"onDismissAddEvent\"\r\n      >\r\n         <WindowAddEvent\r\n            class=\"PageService-window-child\"\r\n            @callback-create=\"onProceedAddEvent\"\r\n            @callback-cancel=\"onDismissAddEvent\"\r\n         />\r\n      </PopupWindow>\r\n\r\n      <!-- Update Service Customer Window -->\r\n      <PopupWindow\r\n         class=\"PageService-window\"\r\n         :isShowing=\"popup.customer.isShowing\"\r\n         @click-dismiss=\"onDismissUpdateCustomer\"\r\n      >\r\n         <WindowUpdateCustomer\r\n            class=\"PageService-window-child\"\r\n            :value=\"popup.customer.value\"\r\n            @callback-change=\"onProceedUpdateCustomer\"\r\n            @callback-cancel=\"onDismissUpdateCustomer\"\r\n         />\r\n      </PopupWindow>\r\n\r\n      <!-- Update Service Description Window -->\r\n      <PopupWindow\r\n         class=\"PageService-window\"\r\n         :isShowing=\"popup.editDescription.isShowing\"\r\n         @click-dismiss=\"onDismissUpdateDescription\"\r\n      >\r\n         <WindowUpdateDescription\r\n            class=\"PageService-window-child\"\r\n            :description=\"popup.editDescription.value\"\r\n            @callback-change=\"onProceedUpdateDescription\"\r\n            @callback-cancel=\"onDismissUpdateDescription\"\r\n         />\r\n      </PopupWindow>\r\n\r\n      <!-- Update Service Belonging Window -->\r\n      <PopupWindow\r\n         class=\"PageService-window\"\r\n         :isShowing=\"popup.belongings.isShowing\"\r\n         @click-dismiss=\"onDismissUpdateBelonging\"\r\n      >\r\n         <WindowUpdateBelonging\r\n            class=\"PageService-window-child\"\r\n            :values=\"popup.belongings.values\"\r\n            @callback-change=\"onProceedUpdateBelongings\"\r\n            @callback-cancel=\"onDismissUpdateBelonging\"\r\n         />\r\n      </PopupWindow>\r\n\r\n      <!-- Remove Service Window -->\r\n      <PopupWindow\r\n         class=\"PageService-window\"\r\n         :isShowing=\"popup.removeService.isShowing\"\r\n         @click-dismiss=\"onDismissRemoveService\"\r\n      >\r\n         <WindowRemove\r\n            class=\"PageService-window-child\"\r\n            title=\"Delete Service\"\r\n            message=\"After deleting this service, it cannot be reverted.\"\r\n            :value=\"popup.removeService.value\"\r\n            @click-cancel=\"onDismissRemoveService\"\r\n            @click-ok=\"onProceedRemoveService\"\r\n         />\r\n      </PopupWindow>\r\n\r\n      <!-- Remove Event Window -->\r\n      <PopupWindow\r\n         class=\"PageService-window\"\r\n         :isShowing=\"popup.removeEvent.isShowing\"\r\n         @click-dismiss=\"onDismissRemoveEvent\"\r\n      >\r\n         <WindowRemove\r\n            class=\"PageService-window-child\"\r\n            title=\"Delete Event\"\r\n            message=\"After deleting this event, it cannot be reverted.\"\r\n            :value=\"popup.removeEvent.value\"\r\n            @click-cancel=\"onDismissRemoveEvent\"\r\n            @click-ok=\"onProceedRemoveEvent\"\r\n         />\r\n      </PopupWindow>\r\n\r\n      <!-- Remove Image Window -->\r\n      <PopupWindow\r\n         class=\"PageService-window\"\r\n         :isShowing=\"popup.removeImage.isShowing\"\r\n         @click-dismiss=\"onDismissRemoveImage\"\r\n      >\r\n         <WindowRemove\r\n            class=\"PageService-window-child\"\r\n            title=\"Delete Image\"\r\n            message=\"After deleting this image, it cannot be reverted.\"\r\n            :value=\"popup.removeImage.value\"\r\n            @click-cancel=\"onDismissRemoveImage\"\r\n            @click-ok=\"onProceedRemoveImage\"\r\n         />\r\n      </PopupWindow>\r\n\r\n      <Loadingv1\r\n         class=\"PageService-loading\"\r\n         :isRunning=\"serviceStore.getters.isLoading\"\r\n      />\r\n   </div>\r\n</template>\r\n\r\n<style lang=\"scss\" scoped>\r\n   .PageService {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: stretch;\r\n      justify-content: stretch;\r\n      width: 100%;\r\n      height: 100%;\r\n      max-width: 100%;\r\n      max-height: 100%;\r\n      position: relative;\r\n      background-color: #e5ecee;\r\n\r\n      --body-padding: 0.9rem;\r\n\r\n      .PageService-panels {\r\n         width: 100%;\r\n         height: 100%;\r\n         z-index: 1;\r\n         overflow: hidden;\r\n         position: relative;\r\n\r\n         display: flex;\r\n         flex-direction: row;\r\n         flex-grow: 1;\r\n         align-items: stretch;\r\n\r\n         .PageService-PanelServices {\r\n            z-index: 1;\r\n         }\r\n         .PageService-PanelRightEmpty {\r\n            z-index: 2;\r\n            background-color: #adb8bb;\r\n            display: flex;\r\n            flex-direction: column;\r\n            align-items: center;\r\n            justify-content: center;\r\n            .PageService-PanelRightEmpty-text {\r\n               font-weight: 900;\r\n               font-size: 1.2rem;\r\n               color: hsl(0, 0%, 84%);\r\n               background: hsla(0, 0%, 0%, 0.04);\r\n               border-radius: 1rem;\r\n               padding: 4rem 5rem;\r\n            }\r\n         }\r\n\r\n         .PageService-RightDrawer {\r\n            z-index: 3;\r\n            .PageService-PanelRight {\r\n               width: 100vw;\r\n               max-width: 100%;\r\n            }\r\n         }\r\n      }\r\n      .PageService-isLess1200px {\r\n         .PageService-PanelServices {\r\n            width: 100vw;\r\n            max-width: 100%;\r\n         }\r\n         .PageService-PanelRightEmpty {\r\n            display: none;\r\n         }\r\n         .PageService-RightDrawer {\r\n            width: 100vw;\r\n            max-width: 100%;\r\n         }\r\n      }\r\n      .PageService-isOver1200px {\r\n         .PageService-PanelServices {\r\n            width: 100vw;\r\n            max-width: 50%;\r\n         }\r\n         .PageService-PanelRightEmpty {\r\n            width: 100vw;\r\n            max-width: 50%;\r\n         }\r\n         .PageService-RightDrawer {\r\n            width: 100vw;\r\n            max-width: 50%;\r\n            position: absolute;\r\n         }\r\n      }\r\n\r\n      .PageService-window {\r\n         z-index: 4;\r\n         position: absolute;\r\n         .PageService-window-child {\r\n            max-width: 100%;\r\n            height: 100%;\r\n            overflow: auto;\r\n         }\r\n      }\r\n\r\n      .PageService-loading {\r\n         z-index: 5;\r\n         bottom: 0;\r\n         position: absolute;\r\n      }\r\n   }\r\n</style>\r\n"]}]}