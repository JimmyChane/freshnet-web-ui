{"remainingRequest":"C:\\dev\\freshnet-v2\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\dev\\freshnet-v2\\vue\\src\\pages\\customer\\ItemSpecification.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\dev\\freshnet-v2\\vue\\src\\pages\\customer\\ItemSpecification.vue","mtime":1662984377055},{"path":"C:\\dev\\freshnet-v2\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1662650916242},{"path":"C:\\dev\\freshnet-v2\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1662650915901},{"path":"C:\\dev\\freshnet-v2\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1662650916242},{"path":"C:\\dev\\freshnet-v2\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1662650934771}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmV4cG9ydCBkZWZhdWx0IHsKICAgZW10aXM6IFsiY2xpY2siLCAiY2xpY2stcmVtb3ZlIl0sCiAgIHByb3BzOiB7CiAgICAgIGl0ZW06IHsgdHlwZTogT2JqZWN0LCBkZWZhdWx0OiBudWxsIH0sCiAgIH0sCiAgIGRhdGEoKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgIHNwZWNpZmljYXRpb25UeXBlOiBudWxsLAogICAgICB9OwogICB9LAogICB3YXRjaDogewogICAgICBpdGVtKCkgewogICAgICAgICB0aGlzLmludmFsaWRhdGUoKTsKICAgICAgfSwKICAgfSwKICAgbW91bnRlZCgpIHsKICAgICAgdGhpcy5pbnZhbGlkYXRlKCk7CiAgIH0sCiAgIG1ldGhvZHM6IHsKICAgICAgaW52YWxpZGF0ZSgpIHsKICAgICAgICAgdGhpcy5zcGVjaWZpY2F0aW9uU3RvcmUKICAgICAgICAgICAgLmRpc3BhdGNoKCJnZXRJdGVtT2ZLZXkiLCB7CiAgICAgICAgICAgICAgIGtleTogdGhpcy5pdGVtID8gdGhpcy5pdGVtLnR5cGVLZXkgOiBudWxsLAogICAgICAgICAgICB9KQogICAgICAgICAgICAudGhlbigoc3BlY2lmaWNhdGlvblR5cGUpID0+IHsKICAgICAgICAgICAgICAgdGhpcy5zcGVjaWZpY2F0aW9uVHlwZSA9IHNwZWNpZmljYXRpb25UeXBlOwogICAgICAgICAgICB9KTsKICAgICAgfSwKICAgfSwKfTsK"},{"version":3,"sources":["ItemSpecification.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ItemSpecification.vue","sourceRoot":"src/pages/customer","sourcesContent":["<script>\r\n   export default {\r\n      emtis: [\"click\", \"click-remove\"],\r\n      props: {\r\n         item: { type: Object, default: null },\r\n      },\r\n      data() {\r\n         return {\r\n            specificationType: null,\r\n         };\r\n      },\r\n      watch: {\r\n         item() {\r\n            this.invalidate();\r\n         },\r\n      },\r\n      mounted() {\r\n         this.invalidate();\r\n      },\r\n      methods: {\r\n         invalidate() {\r\n            this.specificationStore\r\n               .dispatch(\"getItemOfKey\", {\r\n                  key: this.item ? this.item.typeKey : null,\r\n               })\r\n               .then((specificationType) => {\r\n                  this.specificationType = specificationType;\r\n               });\r\n         },\r\n      },\r\n   };\r\n</script>\r\n\r\n<template>\r\n   <div class=\"ItemSpecification\">\r\n      <img\r\n         class=\"ItemSpecification-icon\"\r\n         v-if=\"specificationType\"\r\n         :src=\"specificationType.icon.fullPath\"\r\n      />\r\n\r\n      <span class=\"ItemSpecification-content\">{{ item.content }}</span>\r\n   </div>\r\n</template>\r\n\r\n<style lang=\"scss\" scoped>\r\n   .ItemSpecification {\r\n      display: flex;\r\n      flex-direction: row;\r\n      align-items: center;\r\n      align-items: flex-start;\r\n      gap: 0.5rem;\r\n      --min-height: 0.9rem;\r\n      .ItemSpecification-icon {\r\n         --size: var(--min-height);\r\n         width: var(--size);\r\n         height: var(--size);\r\n      }\r\n      .ItemSpecification-content {\r\n         min-height: var(--min-height);\r\n         line-height: 1;\r\n      }\r\n   }\r\n</style>\r\n"]}]}