{"remainingRequest":"C:\\dev\\freshnet-v2\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\dev\\freshnet-v2\\vue\\src\\components\\InputTextArea.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\dev\\freshnet-v2\\vue\\src\\components\\InputTextArea.vue","mtime":1662992606213},{"path":"C:\\dev\\freshnet-v2\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1662650916242},{"path":"C:\\dev\\freshnet-v2\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1662650915901},{"path":"C:\\dev\\freshnet-v2\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1662650916242},{"path":"C:\\dev\\freshnet-v2\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1662650934771}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmV4cG9ydCBkZWZhdWx0IHsKICAgZW1pdHM6IFsiZm9jdXMiLCAiYmx1ciIsICJpbnB1dCIsICJjaGFuZ2UiXSwKICAgcHJvcHM6IHsKICAgICAgbmFtZTogeyB0eXBlOiBTdHJpbmcsIGRlZmF1bHQ6ICIiIH0sCiAgICAgIGxhYmVsOiB7IHR5cGU6IFN0cmluZywgZGVmYXVsdDogIiIgfSwKICAgICAgdHlwZTogeyB0eXBlOiBTdHJpbmcsIGRlZmF1bHQ6ICIiIH0sCgogICAgICBpc1JlcXVpcmVkOiB7IHR5cGU6IEJvb2xlYW4sIGRlZmF1bHQ6IGZhbHNlIH0sCiAgICAgIGVycm9yOiB7IHR5cGU6IFN0cmluZywgZGVmYXVsdDogIiIgfSwKCiAgICAgIGJpbmRWYWx1ZTogeyBkZWZhdWx0OiB1bmRlZmluZWQgfSwKICAgfSwKICAgZGF0YSgpIHsKICAgICAgcmV0dXJuIHsgaW5wdXRfdmFsdWU6ICIiLCBpc0ZvY3VzZWQ6IGZhbHNlIH07CiAgIH0sCiAgIHdhdGNoOiB7CiAgICAgIGJpbmRWYWx1ZSgpIHsKICAgICAgICAgdGhpcy52YWx1ZSA9IHRoaXMuYmluZFZhbHVlOwogICAgICB9LAogICB9LAogICBjb21wdXRlZDogewogICAgICB2YWx1ZTogewogICAgICAgICBnZXQoKSB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLmlucHV0X3ZhbHVlOwogICAgICAgICB9LAogICAgICAgICBzZXQoeCkgewogICAgICAgICAgICByZXR1cm4gKHRoaXMuaW5wdXRfdmFsdWUgPSB4KTsKICAgICAgICAgfSwKICAgICAgfSwKICAgICAgaXNWYWx1ZUVtcHR5KCkgewogICAgICAgICByZXR1cm4gdHlwZW9mIHRoaXMudmFsdWUgIT09ICJzdHJpbmciIHx8IHRoaXMudmFsdWUudHJpbSgpID09PSAiIjsKICAgICAgfSwKICAgfSwKICAgbWV0aG9kczogewogICAgICBmb2N1cygpIHsKICAgICAgICAgdGhpcy4kcmVmcy5pbnB1dC5mb2N1cygpOwogICAgICB9LAogICB9LAp9Owo="},{"version":3,"sources":["InputTextArea.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"InputTextArea.vue","sourceRoot":"src/components","sourcesContent":["<script>\r\n   export default {\r\n      emits: [\"focus\", \"blur\", \"input\", \"change\"],\r\n      props: {\r\n         name: { type: String, default: \"\" },\r\n         label: { type: String, default: \"\" },\r\n         type: { type: String, default: \"\" },\r\n\r\n         isRequired: { type: Boolean, default: false },\r\n         error: { type: String, default: \"\" },\r\n\r\n         bindValue: { default: undefined },\r\n      },\r\n      data() {\r\n         return { input_value: \"\", isFocused: false };\r\n      },\r\n      watch: {\r\n         bindValue() {\r\n            this.value = this.bindValue;\r\n         },\r\n      },\r\n      computed: {\r\n         value: {\r\n            get() {\r\n               return this.input_value;\r\n            },\r\n            set(x) {\r\n               return (this.input_value = x);\r\n            },\r\n         },\r\n         isValueEmpty() {\r\n            return typeof this.value !== \"string\" || this.value.trim() === \"\";\r\n         },\r\n      },\r\n      methods: {\r\n         focus() {\r\n            this.$refs.input.focus();\r\n         },\r\n      },\r\n   };\r\n</script>\r\n\r\n<template>\r\n   <div\r\n      :class=\"[\r\n         'InputTextArea',\r\n         isFocused ? 'InputTextArea-isFocused' : 'InputTextArea-isBlurred',\r\n      ]\"\r\n   >\r\n      <span\r\n         :class=\"[\r\n            'InputTextArea-sign',\r\n            'InputTextArea-sign-required',\r\n            `InputTextArea-sign-required-${\r\n               isRequired && isValueEmpty ? 'isShown' : 'isHidden'\r\n            }`,\r\n         ]\"\r\n         >*Required</span\r\n      >\r\n      <span\r\n         :class=\"[\r\n            'InputTextArea-sign',\r\n            'InputTextArea-sign-error',\r\n            `InputTextArea-sign-error-${error ? 'isShown' : 'isHidden'}`,\r\n         ]\"\r\n         >{{ error }}</span\r\n      >\r\n\r\n      <label\r\n         :class=\"[\r\n            'InputTextArea-label',\r\n            `InputTextArea-label-${isValueEmpty ? 'isHidden' : 'isShown'}`,\r\n         ]\"\r\n         ref=\"label\"\r\n         v-if=\"label\"\r\n         :for=\"name\"\r\n         >{{ label }}</label\r\n      >\r\n      <textarea\r\n         class=\"InputTextArea-input\"\r\n         ref=\"input\"\r\n         :name=\"name\"\r\n         :type=\"type\"\r\n         @focus=\"\r\n            (event) => {\r\n               isFocused = true;\r\n               $emit('focus', this._self);\r\n            }\r\n         \"\r\n         @blur=\"\r\n            (event) => {\r\n               isFocused = false;\r\n               $emit('blur', this._self);\r\n            }\r\n         \"\r\n         @input=\"\r\n            (event) => {\r\n               value = event.target.value;\r\n               $emit('input', this._self);\r\n            }\r\n         \"\r\n         @change=\"\r\n            (event) => {\r\n               $emit('change', this._self);\r\n            }\r\n         \"\r\n         v-bind:value=\"value\"\r\n      />\r\n\r\n      <div class=\"InputTextArea-dummy\"></div>\r\n   </div>\r\n</template>\r\n\r\n<style lang=\"scss\" scoped>\r\n   .InputTextArea {\r\n      width: 100%;\r\n      margin-top: 0.8rem;\r\n      position: relative;\r\n      padding: 0.6em;\r\n      // background: hsla(0, 0%, 100%, 0.2);\r\n      background: hsla(0, 0%, 0%, 0.03);\r\n      border-radius: 0.2em;\r\n      transition: var(--animation-duration);\r\n      resize: none;\r\n\r\n      .InputTextArea-sign {\r\n         font-size: 0.7em;\r\n         font-weight: 900;\r\n         transition: var(--animation-duration);\r\n      }\r\n\r\n      .InputTextArea-sign-required {\r\n         position: absolute;\r\n         left: 0;\r\n         top: -1.3em;\r\n\r\n         color: rgb(235, 113, 68);\r\n         padding-right: inherit;\r\n      }\r\n      .InputTextArea-sign-required-isHidden {\r\n         opacity: 0;\r\n         pointer-events: none;\r\n      }\r\n      .InputTextArea-sign-required-isShown {\r\n         opacity: 1;\r\n      }\r\n      .InputTextArea-sign-error {\r\n         position: absolute;\r\n         top: -1.3em;\r\n         right: 0;\r\n         color: red;\r\n      }\r\n      .InputTextArea-sign-error-isHidden {\r\n         opacity: 0;\r\n         pointer-events: none;\r\n      }\r\n      .InputTextArea-sign-error-isShown {\r\n         opacity: 1;\r\n      }\r\n\r\n      label {\r\n         z-index: 1;\r\n         width: fit-content;\r\n         position: absolute;\r\n         left: 0;\r\n\r\n         font-size: 1em;\r\n\r\n         transition: var(--animation-duration);\r\n      }\r\n      .InputTextArea-label-isHidden {\r\n         top: 0.6em;\r\n         padding-left: inherit;\r\n\r\n         color: hsla(0, 0%, 20%, 0.5);\r\n         font-weight: 400;\r\n         pointer-events: none;\r\n      }\r\n      .InputTextArea-label-isShown {\r\n         top: -1.2em;\r\n         padding-left: 0;\r\n\r\n         color: hsl(0, 0%, 20%);\r\n         font-weight: 900;\r\n      }\r\n\r\n      .InputTextArea-input {\r\n         position: absolute;\r\n         top: 0;\r\n         bottom: 0;\r\n         left: 0;\r\n         right: 0;\r\n         padding: inherit;\r\n\r\n         z-index: 2;\r\n         width: 100%;\r\n         border: none;\r\n         background: none;\r\n\r\n         font-weight: 400;\r\n         font-size: 1em;\r\n         color: black;\r\n         transition: var(--animation-duration);\r\n         resize: inherit;\r\n      }\r\n\r\n      .InputTextArea-dummy {\r\n         height: 1.1em;\r\n      }\r\n   }\r\n\r\n   .InputTextArea-isFocused {\r\n      border-bottom: 0.1em solid hsl(0, 0%, 30%);\r\n      border-bottom: 0.1em solid var(--primary-color);\r\n   }\r\n   .InputTextArea-isBlurred {\r\n      border-bottom: 0.1em solid hsl(0, 0%, 70%);\r\n   }\r\n</style>\r\n"]}]}