{"remainingRequest":"C:\\dev\\freshnet-v2\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\dev\\freshnet-v2\\vue\\src\\app\\LeftNav.vue?vue&type=style&index=0&id=eff54176&lang=scss&scoped=true&","dependencies":[{"path":"C:\\dev\\freshnet-v2\\vue\\src\\app\\LeftNav.vue","mtime":1664892918805},{"path":"C:\\dev\\freshnet-v2\\vue\\node_modules\\css-loader\\index.js","mtime":1662650920109},{"path":"C:\\dev\\freshnet-v2\\vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1662650934772},{"path":"C:\\dev\\freshnet-v2\\vue\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1662650932744},{"path":"C:\\dev\\freshnet-v2\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1662650916242},{"path":"C:\\dev\\freshnet-v2\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1662650934771}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouTGVmdE5hdiB7CiAgIC5MZWZ0TmF2LWJvZHkgewogICAgICB3aWR0aDogMTZyZW07CiAgICAgIGhlaWdodDogMTAwJTsKICAgICAgbWF4LXdpZHRoOiAxMDAlOwogICAgICBkaXNwbGF5OiBmbGV4OwogICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogICAgICBhbGlnbi1pdGVtczogc3RyZXRjaDsKICAgICAgb3ZlcmZsb3cteTogYXV0bzsKICAgICAgb3ZlcmZsb3cteDogaGlkZGVuOwogICAgICBiYWNrZ3JvdW5kOiAjZGZlOGVlOwogICAgICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgICAgIHRyYW5zaXRpb246IHZhcigtLWFuaW1hdGlvbi1kdXJhdGlvbik7CiAgICAgIC5MZWZ0TmF2LW5hdmlnYXRpb25zIHsKICAgICAgICAgZmxleC1ncm93OiAxOwogICAgICAgICB3aWR0aDogMTAwJTsKICAgICAgICAgZGlzcGxheTogZmxleDsKICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKICAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0OwogICAgICAgICBwYWRkaW5nOiAwLjRlbSAwOwogICAgICAgICBwYWRkaW5nLWJvdHRvbTogNGVtOwoKICAgICAgICAgLkxlZnROYXYtZ3JvdXAxLW1hcmdpblRvcCB7CiAgICAgICAgICAgIG1hcmdpbi10b3A6IDFlbTsKICAgICAgICAgfQogICAgICB9CiAgICAgIC5MZWZ0TmF2LWxvZ2luIHsKICAgICAgICAgcG9zaXRpb246IHN0aWNreTsKICAgICAgICAgYm90dG9tOiAwOwogICAgICAgICB3aWR0aDogMTAwJTsKICAgICAgICAgYm94LXNoYWRvdzogMHB4IDBweCAyMHB4ICM0OTc0ODk0MDsKICAgICAgfQogICB9Cn0KCi5MZWZ0TmF2LWlzV2lkZSB7CiAgIC5MZWZ0TmF2LWJvZHkgewogICAgICAuTGVmdE5hdi1uYXZpZ2F0aW9ucyB7CiAgICAgICAgIHBhZGRpbmc6IDAuOGVtOwogICAgICAgICBwYWRkaW5nLXRvcDogMC44ZW07CiAgICAgICAgIHBhZGRpbmctYm90dG9tOiA0ZW07CiAgICAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0OwogICAgICB9CiAgIH0KfQouTGVmdE5hdi1pc1RoaW4gewogICAuTGVmdE5hdi1ib2R5IHsKICAgICAgd2lkdGg6IGZpdC1jb250ZW50OwogICAgICAuTGVmdE5hdi1uYXZpZ2F0aW9ucyB7CiAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgICAgICAgIHBhZGRpbmc6IDAuM2VtOwogICAgICB9CiAgIH0KfQo="},{"version":3,"sources":["LeftNav.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"LeftNav.vue","sourceRoot":"src/app","sourcesContent":["<script>\r\n   import Drawer from \"@/components/Drawer.vue\";\r\n   import LeftNavGroup1 from \"./LeftNav_Group1.vue\";\r\n   import LeftNavLogin from \"./LeftNav_Login.vue\";\r\n\r\n   export default {\r\n      components: { Drawer, LeftNavGroup1, LeftNavLogin },\r\n      emits: [\"click-collapse\", \"click-logout\"],\r\n      props: {\r\n         isExpand: { type: Boolean, default: false },\r\n         isDrawer: { type: Boolean, default: true },\r\n         isWide: { type: Boolean, default: false },\r\n         selectedPageKey: { type: String, default: \"\" },\r\n         selectedViewKey: { type: String, default: \"\" },\r\n      },\r\n      data() {\r\n         return { expandedPageKey: \"\" };\r\n      },\r\n      computed: {\r\n         drawerMode() {\r\n            if (this.isDrawer && this.isExpand) return Drawer.Mode.DRAWER_EXPAND;\r\n            if (this.isDrawer && !this.isExpand) return Drawer.Mode.DRAWER_COLLAPSE;\r\n            if (!this.isDrawer) return Drawer.Mode.FIXED;\r\n            return 0;\r\n         },\r\n         drawerEdge: () => Drawer.Edge.LEFT,\r\n\r\n         navigations() {\r\n            const navigations = this.$root.pages;\r\n\r\n            navigations.forEach((nav) => {\r\n               nav.isExpanded = () => this.expandedPageKey === nav.key;\r\n               nav.isSelected = () => this.selectedPageKey === nav.key;\r\n               nav.isWide = () => this.isWide;\r\n               nav.clickExpand = () => {\r\n                  this.expandedPageKey = this.expandedPageKey === nav.key ? \"\" : nav.key;\r\n               };\r\n               nav.click = () => {\r\n                  this.emitCollapse();\r\n               };\r\n\r\n               nav.groups.forEach((nav2) => {\r\n                  nav2.isExpanded = () => false;\r\n                  nav2.isWide = () => this.isWide;\r\n                  nav2.getParent = () => nav;\r\n\r\n                  nav2.groups.forEach((nav3) => {\r\n                     nav3.isExpanded = () => false;\r\n                     nav3.isSelected = () => {\r\n                        if (nav2.isQuery) {\r\n                           return this.getQueryValue(nav2.key) === nav3.key;\r\n                        } else {\r\n                           return this.selectedViewKey === nav3.key;\r\n                        }\r\n                     };\r\n                     nav3.isWide = () => this.isWide;\r\n\r\n                     nav3.getParent = () => nav2;\r\n                     nav3.getLink = () => `/${nav.key}/${nav3.key}`;\r\n\r\n                     nav3.click = () => {\r\n                        if (nav2.isQuery) {\r\n                           this.clickQuery(nav3);\r\n                        }\r\n                     };\r\n                  });\r\n               });\r\n            });\r\n\r\n            return navigations;\r\n         },\r\n      },\r\n      methods: {\r\n         emitCollapse() {\r\n            this.$emit(\"click-collapse\");\r\n            this.expandedPageKey = \"\";\r\n         },\r\n\r\n         shouldMakeSpace(group1) {\r\n            return (\r\n               this.selectedPageKey === group1.key &&\r\n               Array.isArray(group1.groups) &&\r\n               group1.groups.length > 0 &&\r\n               this.navigations.indexOf(group1) !== 0\r\n            );\r\n         },\r\n\r\n         hasQueryKey(key) {\r\n            const { query } = this.$route;\r\n            return Object.keys(query).includes(key);\r\n         },\r\n         getQueryValue(key) {\r\n            const { query } = this.$route;\r\n            return query[key];\r\n         },\r\n         clickQuery(view) {\r\n            const key = view.getParent().key;\r\n            const nextValue = view.key;\r\n\r\n            const currentValue = this.getQueryValue(key);\r\n            if (currentValue === nextValue) return;\r\n\r\n            console.log(this.hasQueryKey(\"\"));\r\n\r\n            if (\r\n               (this.hasQueryKey(\"\") && this.getQueryValue(\"\") === undefined) ||\r\n               (key === \"\" && nextValue === \"\")\r\n            ) {\r\n               this.$root.replaceRoute({});\r\n               return;\r\n            }\r\n\r\n            const query = {};\r\n            query[key] = nextValue;\r\n\r\n            this.$root.replaceRoute({ query });\r\n         },\r\n      },\r\n   };\r\n</script>\r\n\r\n<template>\r\n   <Drawer\r\n      :class=\"['LeftNav', `LeftNav-${isWide ? 'isWide' : 'isThin'}`]\"\r\n      :mode=\"drawerMode\"\r\n      :edge=\"drawerEdge\"\r\n      @click-collapse=\"emitCollapse()\"\r\n   >\r\n      <div class=\"LeftNav-body\">\r\n         <div class=\"LeftNav-navigations\" v-if=\"navigations.length\">\r\n            <LeftNavGroup1\r\n               :class=\"[shouldMakeSpace(group1) ? 'LeftNav-group1-marginTop' : '']\"\r\n               v-for=\"group1 of navigations\"\r\n               :key=\"group1.key\"\r\n               :group1=\"group1\"\r\n               @click-group3=\"() => emitCollapse()\"\r\n            />\r\n         </div>\r\n\r\n         <LeftNavLogin\r\n            v-if=\"$root.currentPageKey !== 'login'\"\r\n            @click-logout=\"$emit('click-logout')\"\r\n            :isWide=\"isWide\"\r\n         />\r\n      </div>\r\n   </Drawer>\r\n</template>\r\n\r\n<style lang=\"scss\" scoped>\r\n   .LeftNav {\r\n      .LeftNav-body {\r\n         width: 16rem;\r\n         height: 100%;\r\n         max-width: 100%;\r\n         display: flex;\r\n         flex-direction: column;\r\n         align-items: stretch;\r\n         overflow-y: auto;\r\n         overflow-x: hidden;\r\n         background: #dfe8ee;\r\n         position: relative;\r\n         transition: var(--animation-duration);\r\n         .LeftNav-navigations {\r\n            flex-grow: 1;\r\n            width: 100%;\r\n            display: flex;\r\n            flex-direction: column;\r\n            justify-content: flex-start;\r\n            padding: 0.4em 0;\r\n            padding-bottom: 4em;\r\n\r\n            .LeftNav-group1-marginTop {\r\n               margin-top: 1em;\r\n            }\r\n         }\r\n         .LeftNav-login {\r\n            position: sticky;\r\n            bottom: 0;\r\n            width: 100%;\r\n            box-shadow: 0px 0px 20px #49748940;\r\n         }\r\n      }\r\n   }\r\n\r\n   .LeftNav-isWide {\r\n      .LeftNav-body {\r\n         .LeftNav-navigations {\r\n            padding: 0.8em;\r\n            padding-top: 0.8em;\r\n            padding-bottom: 4em;\r\n            align-items: flex-start;\r\n         }\r\n      }\r\n   }\r\n   .LeftNav-isThin {\r\n      .LeftNav-body {\r\n         width: fit-content;\r\n         .LeftNav-navigations {\r\n            align-items: center;\r\n            padding: 0.3em;\r\n         }\r\n      }\r\n   }\r\n</style>\r\n"]}]}