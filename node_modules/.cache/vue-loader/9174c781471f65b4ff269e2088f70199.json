{"remainingRequest":"C:\\dev\\freshnet-v2\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\dev\\freshnet-v2\\vue\\src\\pages\\database\\PageDatabase.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\dev\\freshnet-v2\\vue\\src\\pages\\database\\PageDatabase.vue","mtime":1664551315821},{"path":"C:\\dev\\freshnet-v2\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1662650916242},{"path":"C:\\dev\\freshnet-v2\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1662650915901},{"path":"C:\\dev\\freshnet-v2\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1662650916242},{"path":"C:\\dev\\freshnet-v2\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1662650934771}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBVc2VyVHlwZSBmcm9tICJAL3V0aWxzL1VzZXJUeXBlLmpzIjsKCmltcG9ydCBMb2FkaW5ndjEgZnJvbSAiQC9jb21wb25lbnRzL0xvYWRpbmciOwppbXBvcnQgUG9wdXBXaW5kb3cgZnJvbSAiQC9jb21wb25lbnRzL3dpbmRvdy9Qb3B1cFdpbmRvdy52dWUiOwppbXBvcnQgRW1wdHkgZnJvbSAiQC9jb21wb25lbnRzL0VtcHR5LnZ1ZSI7CmltcG9ydCBBY3Rpb25CYXJNYW5hZ2UgZnJvbSAiQC9wYWdlcy9tYW5hZ2UvQWN0aW9uQmFyTWFuYWdlLnZ1ZSI7CmltcG9ydCBJdGVtRGF0YWJhc2UgZnJvbSAiLi9JdGVtRGF0YWJhc2UudnVlIjsKCmV4cG9ydCBkZWZhdWx0IHsKICAga2V5OiAiZGF0YWJhc2UiLAogICB0aXRsZTogIkRhdGFiYXNlIiwKICAgaWNvbjogeyBsaWdodDogImRhdGFiYXNlLUZGRkZGRiIsIGRhcms6ICJkYXRhYmFzZS0yQTQ4NTgiIH0sCiAgIHVzZXJQZXJtaXNzaW9uczogWyJhZG1pbiJdLAoKICAgY29tcG9uZW50czogeyBMb2FkaW5ndjEsIFBvcHVwV2luZG93LCBFbXB0eSwgQWN0aW9uQmFyTWFuYWdlLCBJdGVtRGF0YWJhc2UgfSwKICAgZW1pdHM6IFsiY2FsbGJhY2stc2lkZS1leHBhbmQiXSwKICAgZGF0YSgpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICAgc2Nyb2xsVG9wOiAwLAogICAgICAgICBpbXBvcnRzOiB7IGRhdGE6IG51bGwgfSwKICAgICAgICAgYWRkRGF0YWJhc2U6IHsgaXNTaG93aW5nOiBmYWxzZSB9LAogICAgICB9OwogICB9LAogICBjb21wdXRlZDogewogICAgICBpc0xvYWRpbmc6IChjKSA9PiB7CiAgICAgICAgIGNvbnN0IHsgbG9naW5TdG9yZSwgZGF0YWJhc2VTdG9yZSB9ID0gYzsKICAgICAgICAgcmV0dXJuIGxvZ2luU3RvcmUuZ2V0dGVycy5pc0xvYWRpbmcgfHwgZGF0YWJhc2VTdG9yZS5nZXR0ZXJzLmlzTG9hZGluZzsKICAgICAgfSwKICAgICAgdXNlcjogKGMpID0+IGMubG9naW5TdG9yZS5nZXR0ZXJzLnVzZXIsCiAgICAgIGJhc2VJbmZvOiAoYykgPT4gYy5kYXRhYmFzZVN0b3JlLmdldHRlcnMuYmFzZUluZm8sCiAgICAgIGRhdGFiYXNlczogKGMpID0+IGMuZGF0YWJhc2VTdG9yZS5nZXR0ZXJzLml0ZW1zLAogICB9LAogICBtb3VudGVkKCkgewogICAgICB0aGlzLmxvZ2luU3RvcmUuZGlzcGF0Y2goInJlZnJlc2giKS5jYXRjaCgoZXJyb3IpID0+IHsKICAgICAgICAgdGhpcy4kcm9vdC5mZWVkYmFjaygiWW91ciBsb2dpbiBjcmVkZW50aWFsIGNvdWxkIGJlIGludmFsaWQiKTsKICAgICAgICAgdGhyb3cgZXJyb3I7CiAgICAgIH0pOwogICB9LAogICB3YXRjaDogewogICAgICB1c2VyKCkgewogICAgICAgICB0aGlzLmFjdGlvblJlZnJlc2goKTsKICAgICAgfSwKICAgfSwKICAgbWV0aG9kczogewogICAgICBpbXBvcnREYXRhRmlsZShmaWxlKSB7CiAgICAgICAgIGlmICghZmlsZSkgewogICAgICAgICAgICB0aGlzLmltcG9ydHMuZGF0YSA9IG51bGw7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgfQogICAgICAgICBsZXQgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTsKICAgICAgICAgcmVhZGVyLm9ubG9hZCA9IChldmVudCkgPT4gewogICAgICAgICAgICB0aGlzLmltcG9ydHMuZGF0YSA9IHJlYWRlci5yZXN1bHQ7CgogICAgICAgICAgICB0aGlzLmRhdGFiYXNlU3RvcmUuZGlzcGF0Y2goImltcG9ydHMiLCB7IGpzb246IHJlYWRlci5yZXN1bHQgfSk7CiAgICAgICAgIH07CiAgICAgICAgIHJlYWRlci5yZWFkQXNUZXh0KGZpbGUpOwogICAgICB9LAoKICAgICAgYWN0aW9uQWRkRGF0YWJhc2UoKSB7CiAgICAgICAgIHRoaXMuYWRkRGF0YWJhc2UuaXNTaG93aW5nID0gdHJ1ZTsKICAgICAgfSwKCiAgICAgIGFjdGlvblJlZnJlc2goKSB7CiAgICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoKQogICAgICAgICAgICAudGhlbigoKSA9PiB7CiAgICAgICAgICAgICAgIGlmICh0aGlzLnVzZXIgPT09IG51bGwgfHwgdGhpcy51c2VyLnR5cGUgIT09IFVzZXJUeXBlLkFkbWluKSB7CiAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcigpOwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmRhdGFiYXNlU3RvcmUuZGlzcGF0Y2goImxvYWRCYXNlSW5mbyIpOwogICAgICAgICAgICB9KQogICAgICAgICAgICAuY2F0Y2goKGVycm9yKSA9PiB7CiAgICAgICAgICAgICAgIHRoaXMuJHJvb3QuZmVlZGJhY2soIkVycm9yIExvYWRpbmcgRGF0YWJhc2VzIik7CiAgICAgICAgICAgICAgIHRocm93IGVycm9yOwogICAgICAgICAgICB9KTsKICAgICAgfSwKICAgfSwKfTsK"},{"version":3,"sources":["PageDatabase.vue"],"names":[],"mappings":";AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PageDatabase.vue","sourceRoot":"src/pages/database","sourcesContent":["<script>\r\n   import UserType from \"@/utils/UserType.js\";\r\n\r\n   import Loadingv1 from \"@/components/Loading\";\r\n   import PopupWindow from \"@/components/window/PopupWindow.vue\";\r\n   import Empty from \"@/components/Empty.vue\";\r\n   import ActionBarManage from \"@/pages/manage/ActionBarManage.vue\";\r\n   import ItemDatabase from \"./ItemDatabase.vue\";\r\n\r\n   export default {\r\n      key: \"database\",\r\n      title: \"Database\",\r\n      icon: { light: \"database-FFFFFF\", dark: \"database-2A4858\" },\r\n      userPermissions: [\"admin\"],\r\n\r\n      components: { Loadingv1, PopupWindow, Empty, ActionBarManage, ItemDatabase },\r\n      emits: [\"callback-side-expand\"],\r\n      data() {\r\n         return {\r\n            scrollTop: 0,\r\n            imports: { data: null },\r\n            addDatabase: { isShowing: false },\r\n         };\r\n      },\r\n      computed: {\r\n         isLoading: (c) => {\r\n            const { loginStore, databaseStore } = c;\r\n            return loginStore.getters.isLoading || databaseStore.getters.isLoading;\r\n         },\r\n         user: (c) => c.loginStore.getters.user,\r\n         baseInfo: (c) => c.databaseStore.getters.baseInfo,\r\n         databases: (c) => c.databaseStore.getters.items,\r\n      },\r\n      mounted() {\r\n         this.loginStore.dispatch(\"refresh\").catch((error) => {\r\n            this.$root.feedback(\"Your login credential could be invalid\");\r\n            throw error;\r\n         });\r\n      },\r\n      watch: {\r\n         user() {\r\n            this.actionRefresh();\r\n         },\r\n      },\r\n      methods: {\r\n         importDataFile(file) {\r\n            if (!file) {\r\n               this.imports.data = null;\r\n               return;\r\n            }\r\n            let reader = new FileReader();\r\n            reader.onload = (event) => {\r\n               this.imports.data = reader.result;\r\n\r\n               this.databaseStore.dispatch(\"imports\", { json: reader.result });\r\n            };\r\n            reader.readAsText(file);\r\n         },\r\n\r\n         actionAddDatabase() {\r\n            this.addDatabase.isShowing = true;\r\n         },\r\n\r\n         actionRefresh() {\r\n            return Promise.resolve()\r\n               .then(() => {\r\n                  if (this.user === null || this.user.type !== UserType.Admin) {\r\n                     throw new Error();\r\n                  }\r\n                  return this.databaseStore.dispatch(\"loadBaseInfo\");\r\n               })\r\n               .catch((error) => {\r\n                  this.$root.feedback(\"Error Loading Databases\");\r\n                  throw error;\r\n               });\r\n         },\r\n      },\r\n   };\r\n</script>\r\n\r\n<template>\r\n   <div class=\"PageDatabase\" @scroll=\"(event) => (scrollTop = event.target.scrollTop)\">\r\n      <ActionBarManage\r\n         class=\"PageDatabase-actionbar\"\r\n         :hasShadow=\"scrollTop > 0\"\r\n         :title=\"$options.title\"\r\n         :rightMenus=\"[\r\n            {\r\n               key: 'refresh',\r\n               title: 'Refresh',\r\n               icon: host.res('icon/refresh-2A4858.svg'),\r\n               click: () => actionRefresh(),\r\n            },\r\n         ]\"\r\n         @click-drawer-expand=\"$emit('click-drawer-expand')\"\r\n      />\r\n\r\n      <div class=\"PageDatabase-body\" v-if=\"user && baseInfo && databases.length\">\r\n         <div class=\"PageDatabase-import\">\r\n            <span class=\"PageDatabase-title\">Import</span>\r\n            <input\r\n               type=\"file\"\r\n               accept=\".json\"\r\n               @change=\"\r\n                  (event) => {\r\n                     const [file] = event.target.files;\r\n                     importDataFile(file);\r\n                  }\r\n               \"\r\n            />\r\n            <p v-if=\"imports.data\">{{ imports.data }}</p>\r\n         </div>\r\n\r\n         <div class=\"PageDatabase-baseInfo\">\r\n            <span class=\"PageDatabase-title\">Current Database</span>\r\n            <span v-if=\"baseInfo\">{{ baseInfo.currentDatabase }}</span>\r\n         </div>\r\n\r\n         <div class=\"PageDatabase-databases\">\r\n            <span class=\"PageDatabase-title\">Databases</span>\r\n            <ItemDatabase\r\n               class=\"PageDatabase-database\"\r\n               v-for=\"database in databases\"\r\n               :key=\"database.name\"\r\n               :database=\"database\"\r\n            />\r\n         </div>\r\n      </div>\r\n\r\n      <Empty v-if=\"!baseInfo && !databases.length && !isLoading\" />\r\n\r\n      <PopupWindow\r\n         class=\"PageDatabase-window\"\r\n         :isShowing=\"addDatabase.isShowing\"\r\n         @click-dismiss=\"addDatabase.isShowing = false\"\r\n      >\r\n         <div>\r\n            <span>Create Database</span>\r\n\r\n            <label>Database Name</label>\r\n            <input type=\"text\" placeholder=\"Database Name\" />\r\n         </div>\r\n      </PopupWindow>\r\n\r\n      <Loadingv1 class=\"PageDatabase-loading\" :isRunning=\"isLoading\" />\r\n   </div>\r\n</template>\r\n\r\n<style lang=\"scss\" scoped>\r\n   //Abstract\r\n   .PageDatabase-title {\r\n      font-weight: 900;\r\n      font-size: 1.4rem;\r\n      color: var(--primary-color);\r\n      letter-spacing: 0.1rem;\r\n   }\r\n\r\n   .PageDatabase {\r\n      position: relative;\r\n      width: 100%;\r\n      height: 100%;\r\n      display: flex;\r\n      flex-direction: column;\r\n      overflow: auto;\r\n\r\n      .PageDatabase-actionbar {\r\n         z-index: 2;\r\n      }\r\n      .PageDatabase-body {\r\n         z-index: 1;\r\n         width: 100%;\r\n         height: 100%;\r\n         display: flex;\r\n         flex-direction: column;\r\n         align-items: center;\r\n         padding: 4rem;\r\n         padding-bottom: 10rem;\r\n         gap: 5rem;\r\n         position: relative;\r\n\r\n         & > * {\r\n            width: 100%;\r\n            max-width: 35rem;\r\n            display: flex;\r\n            flex-direction: column;\r\n            align-items: stretch;\r\n            gap: 0.5rem;\r\n         }\r\n         .PageDatabase-import {\r\n            display: none;\r\n         }\r\n         .PageDatabase-baseInfo {\r\n            font-size: 1.2rem;\r\n         }\r\n      }\r\n\r\n      .PageDatabase-window {\r\n         z-index: 3;\r\n         display: none;\r\n      }\r\n\r\n      .PageDatabase-loading {\r\n         position: absolute;\r\n         z-index: 1;\r\n         width: 100%;\r\n      }\r\n   }\r\n</style>\r\n"]}]}