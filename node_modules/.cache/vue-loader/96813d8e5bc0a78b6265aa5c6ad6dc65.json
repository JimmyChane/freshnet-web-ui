{"remainingRequest":"C:\\dev\\freshnet-v2\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\dev\\freshnet-v2\\vue\\src\\pages\\customer\\WindowUpdateDescription.vue?vue&type=style&index=0&id=a82864d4&lang=scss&scoped=true&","dependencies":[{"path":"C:\\dev\\freshnet-v2\\vue\\src\\pages\\customer\\WindowUpdateDescription.vue","mtime":1662991594686},{"path":"C:\\dev\\freshnet-v2\\vue\\node_modules\\css-loader\\index.js","mtime":1662650920109},{"path":"C:\\dev\\freshnet-v2\\vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1662650934772},{"path":"C:\\dev\\freshnet-v2\\vue\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1662650932744},{"path":"C:\\dev\\freshnet-v2\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1662650916242},{"path":"C:\\dev\\freshnet-v2\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1662650934771}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouV2luZG93VXBkYXRlRGVzY3JpcHRpb24gewogICB3aWR0aDogMTAwJTsKICAgaGVpZ2h0OiAxMDAlOwogICAuV2luZG93VXBkYXRlRGVzY3JpcHRpb24tZGVzY3JpcHRpb24gewogICAgICB3aWR0aDogMzVyZW07CiAgICAgIG1heC13aWR0aDogMTAwJTsKICAgICAgaGVpZ2h0OiA2cmVtOwogICB9Cn0K"},{"version":3,"sources":["WindowUpdateDescription.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"WindowUpdateDescription.vue","sourceRoot":"src/pages/customer","sourcesContent":["<script>\r\n   import PopupWindowAction from \"@/components/window/PopupWindowAction.vue\";\r\n   import WindowSection from \"./WindowSection.vue\";\r\n   import TextArea from \"@/components/InputTextArea.vue\";\r\n   import CustomerModule from \"@/../../express/data_structures/Customer.js\";\r\n\r\n   export default {\r\n      components: { PopupWindowAction, WindowSection, TextArea },\r\n      emits: [\"click-dismiss\", \"click-cancel\", \"click-ok\"],\r\n      props: {\r\n         isShowing: { type: Boolean, default: false },\r\n         item: { type: Object, default: () => null },\r\n      },\r\n      data() {\r\n         return { Requirement: CustomerModule.Requirement, data: {} };\r\n      },\r\n      computed: {\r\n         isLoading: (c) => c.customerStore.getters.isLoading,\r\n         isClickable: (c) => !c.customerStore.getters.isLoading,\r\n      },\r\n      watch: {\r\n         isShowing() {\r\n            if (!this.isShowing) return;\r\n            const { Description } = this.$refs;\r\n            if (Description) Description.focus();\r\n         },\r\n         item() {\r\n            this.bindData();\r\n         },\r\n      },\r\n      created() {\r\n         this.resetData();\r\n      },\r\n      mounted() {\r\n         this.resetData();\r\n      },\r\n      methods: {\r\n         resetData() {\r\n            this.resetDataOnDelay(0);\r\n         },\r\n         resetDataOnDelay(delay = 0) {\r\n            if (delay) {\r\n               setTimeout(() => this.resetDataOnDelay(0), delay);\r\n               return;\r\n            }\r\n\r\n            this.data = { description: \"\" };\r\n\r\n            this.bindData();\r\n         },\r\n         bindData() {\r\n            if (this.item) {\r\n               const { description } = this.item;\r\n               this.data.description = description;\r\n            }\r\n         },\r\n\r\n         clickOk() {\r\n            this.data.description = this.data.description.trim();\r\n\r\n            if (this.Requirement.description.isRequired && !this.data.description) {\r\n               this.$root.feedback('You must specify the \"Description\"');\r\n            } else {\r\n               this.customerStore\r\n                  .dispatch(\"updateCustomerDescriptionOfId\", {\r\n                     _id: this.item._id,\r\n                     description: this.data.description,\r\n                  })\r\n                  .then((item) => {\r\n                     this.$emit(\"click-ok\", { item });\r\n                     this.resetDataOnDelay(700);\r\n                  });\r\n            }\r\n         },\r\n      },\r\n   };\r\n</script>\r\n\r\n<template>\r\n   <PopupWindowAction\r\n      class=\"WindowUpdateDescription\"\r\n      :title=\"`Update Description${item ? ` for ${item.name}` : ''}`\"\r\n      :isShowing=\"isShowing\"\r\n      :isLoading=\"isLoading\"\r\n      :isClickable=\"isClickable\"\r\n      @click-dismiss=\"$emit('click-dismiss')\"\r\n      @click-cancel=\"\r\n         $emit('click-cancel');\r\n         resetDataOnDelay(700);\r\n      \"\r\n      @click-ok=\"clickOk()\"\r\n   >\r\n      <TextArea\r\n         class=\"WindowUpdateDescription-description\"\r\n         ref=\"Description\"\r\n         type=\"text\"\r\n         label=\"Description\"\r\n         :bindValue=\"data.description\"\r\n         @input=\"(comp) => (data.description = comp.value)\"\r\n      />\r\n   </PopupWindowAction>\r\n</template>\r\n\r\n<style lang=\"scss\" scoped>\r\n   .WindowUpdateDescription {\r\n      width: 100%;\r\n      height: 100%;\r\n      .WindowUpdateDescription-description {\r\n         width: 35rem;\r\n         max-width: 100%;\r\n         height: 6rem;\r\n      }\r\n   }\r\n</style>\r\n"]}]}