{"remainingRequest":"C:\\development\\freshnet-v2\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\development\\freshnet-v2\\vue\\src\\pages\\home\\PageHome.vue?vue&type=style&index=0&id=15697e78&lang=scss&scoped=true&","dependencies":[{"path":"C:\\development\\freshnet-v2\\vue\\src\\pages\\home\\PageHome.vue","mtime":1662704787053},{"path":"C:\\development\\freshnet-v2\\vue\\node_modules\\css-loader\\index.js","mtime":1662650920109},{"path":"C:\\development\\freshnet-v2\\vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1662650934772},{"path":"C:\\development\\freshnet-v2\\vue\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1662650932744},{"path":"C:\\development\\freshnet-v2\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1662650916242},{"path":"C:\\development\\freshnet-v2\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1662650934771}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}