{"remainingRequest":"C:\\dev\\freshnet-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\dev\\freshnet-vue\\src\\components\\ImageViews.vue?vue&type=style&index=0&id=34f51a83&lang=scss&scoped=true&","dependencies":[{"path":"C:\\dev\\freshnet-vue\\src\\components\\ImageViews.vue","mtime":1667392214923},{"path":"C:\\dev\\freshnet-vue\\node_modules\\css-loader\\index.js","mtime":1662650920109},{"path":"C:\\dev\\freshnet-vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1662650934772},{"path":"C:\\dev\\freshnet-vue\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1662650932744},{"path":"C:\\dev\\freshnet-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1662650916242},{"path":"C:\\dev\\freshnet-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1662650934771}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5JbWFnZVZpZXdzIHsKCWRpc3BsYXk6IGdyaWQ7CglnYXA6IDFweDsKCW92ZXJmbG93OiBoaWRkZW47Cn0KLkltYWdlVmlld3MtaXRlbSB7CglvYmplY3QtZml0OiBjb3ZlcjsKCWJvcmRlcjogMXB4IHNvbGlkIGhzbCgwLCAwJSwgODAlKTsKfQo="},{"version":3,"sources":["ImageViews.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ImageViews.vue","sourceRoot":"src/components","sourcesContent":["<script>\r\n\timport Image from \"@/items/Image\";\r\n\timport ServiceImage from \"@/items/ServiceImage\";\r\n\r\n\texport default {\r\n\t\tprops: {\r\n\t\t\twidth: { type: Number, default: 0 },\r\n\t\t\theight: { type: Number, default: 0 },\r\n\t\t\timages: { type: Array, default: () => [] },\r\n\t\t},\r\n\t\tcomputed: {\r\n\t\t\tparsedImages() {\r\n\t\t\t\tconst images = Array.isArray(this.images) ? this.images : [this.images];\r\n\t\t\t\treturn images\r\n\t\t\t\t\t.filter((image) => {\r\n\t\t\t\t\t\treturn image instanceof Image || image instanceof ServiceImage;\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.reduce((images, image, index, sources) => {\r\n\t\t\t\t\t\tif (index < 4) images.push(image);\r\n\t\t\t\t\t\treturn images;\r\n\t\t\t\t\t}, []);\r\n\t\t\t},\r\n\t\t\tparsedImage() {\r\n\t\t\t\tif (this.parsedImages.length === 1) return this.parsedImages[0];\r\n\t\t\t\treturn null;\r\n\t\t\t},\r\n\r\n\t\t\tcssWidth() {\r\n\t\t\t\treturn `${this.width}px`;\r\n\t\t\t},\r\n\t\t\tcssHeight() {\r\n\t\t\t\treturn `${this.height}px`;\r\n\t\t\t},\r\n\t\t\tcssBorderRadius() {\r\n\t\t\t\treturn \"4px\";\r\n\t\t\t},\r\n\t\t\tcssGridTemplateAreas() {\r\n\t\t\t\tif (this.parsedImages.length === 2) {\r\n\t\t\t\t\treturn '\"img0 img1\"';\r\n\t\t\t\t}\r\n\t\t\t\tif (this.parsedImages.length === 3) {\r\n\t\t\t\t\treturn '\"img0 img1\" \"img2 img2\"';\r\n\t\t\t\t}\r\n\t\t\t\tif (this.parsedImages.length === 4) {\r\n\t\t\t\t\treturn '\"img0 img1\" \"img2 img3\"';\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn `\"${this.width} ${this.width}\" \"${this.width} ${this.width}\"`;\r\n\t\t\t},\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\tonLoad(element, image) {},\r\n\t\t\tonError(element, image) {},\r\n\t\t\tonAbort(element, image) {},\r\n\t\t},\r\n\t};\r\n</script>\r\n\r\n<template>\r\n\t<img\r\n\t\tv-if=\"parsedImages.length === 1\"\r\n\t\tclass=\"ImageViews-item\"\r\n\t\t:style=\"{\r\n\t\t\t'width': cssWidth,\r\n\t\t\t'height': cssHeight,\r\n\t\t\t'border-radius': cssBorderRadius,\r\n\t\t}\"\r\n\t\t:src=\"parsedImage.toUrl({ width, height })\"\r\n\t\t@load=\"(event) => onLoad(event.target, parsedImage)\"\r\n\t\t@error=\"(event) => onError(event.target, parsedImage)\"\r\n\t\t@abort=\"(event) => onAbort(event.target, parsedImage)\"\r\n\t/>\r\n\t<div\r\n\t\tv-else\r\n\t\tclass=\"ImageViews\"\r\n\t\t:style=\"{\r\n\t\t\t'width': cssWidth,\r\n\t\t\t'height': cssHeight,\r\n\t\t\t'border-radius': cssBorderRadius,\r\n\t\t\t'grid-template-areas': cssGridTemplateAreas,\r\n\t\t}\"\r\n\t>\r\n\t\t<img\r\n\t\t\t:class=\"['ImageViews-item']\"\r\n\t\t\t:style=\"{\r\n\t\t\t\t'width': '100%',\r\n\t\t\t\t'height': '100%',\r\n\t\t\t\t'grid-area': `img${parsedImages.indexOf(image)}`,\r\n\t\t\t}\"\r\n\t\t\tv-for=\"image of parsedImages\"\r\n\t\t\t:key=\"image.toUrl()\"\r\n\t\t\t:src=\"image.toUrl({ width, height })\"\r\n\t\t\t@load=\"(event) => onLoad(event.target, image)\"\r\n\t\t\t@error=\"(event) => onError(event.target, image)\"\r\n\t\t\t@abort=\"(event) => onAbort(event.target, image)\"\r\n\t\t/>\r\n\t</div>\r\n</template>\r\n\r\n<style lang=\"scss\" scoped>\r\n\t.ImageViews {\r\n\t\tdisplay: grid;\r\n\t\tgap: 1px;\r\n\t\toverflow: hidden;\r\n\t}\r\n\t.ImageViews-item {\r\n\t\tobject-fit: cover;\r\n\t\tborder: 1px solid hsl(0, 0%, 80%);\r\n\t}\r\n</style>\r\n"]}]}