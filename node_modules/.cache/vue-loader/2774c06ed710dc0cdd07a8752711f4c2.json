{"remainingRequest":"C:\\dev\\freshnet-v2\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\dev\\freshnet-v2\\vue\\src\\pages\\users\\PageUsers.vue?vue&type=style&index=0&id=40dd6b7e&lang=scss&scoped=true&","dependencies":[{"path":"C:\\dev\\freshnet-v2\\vue\\src\\pages\\users\\PageUsers.vue","mtime":1664551315830},{"path":"C:\\dev\\freshnet-v2\\vue\\node_modules\\css-loader\\index.js","mtime":1662650920109},{"path":"C:\\dev\\freshnet-v2\\vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1662650934772},{"path":"C:\\dev\\freshnet-v2\\vue\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1662650932744},{"path":"C:\\dev\\freshnet-v2\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1662650916242},{"path":"C:\\dev\\freshnet-v2\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1662650934771}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5QYWdlVXNlcnMgewogICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgIHdpZHRoOiAxMDAlOwogICBoZWlnaHQ6IDEwMCU7CiAgIGRpc3BsYXk6IGZsZXg7CiAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47CiAgIG92ZXJmbG93LXk6IGF1dG87CgogICAuUGFnZVVzZXJzLWJvZHkgewogICAgICB3aWR0aDogMTAwJTsKICAgICAgaGVpZ2h0OiAxMDAlOwogICAgICBkaXNwbGF5OiBmbGV4OwogICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogICAgICBhbGlnbi1pdGVtczogY2VudGVyOwogICAgICBwYWRkaW5nOiA0cmVtOwogICB9CgogICAuUGFnZVVzZXJzLWxvYWRpbmcgewogICAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICAgIHdpZHRoOiAxMDAlOwogICAgICB6LWluZGV4OiAxMDA7CiAgIH0KCiAgIC5QYWdlVXNlcnMtdXNlci1yb290IHsKICAgICAgd2lkdGg6IDEwMCU7CiAgICAgIG1heC13aWR0aDogMjRyZW07CiAgICAgIGRpc3BsYXk6IGZsZXg7CiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47CiAgICAgIGFsaWduLWl0ZW1zOiBzdHJldGNoOwogICAgICAmLXNlcGFyYXRvciB7CiAgICAgICAgIG1pbi1oZWlnaHQ6IDFweDsKICAgICAgICAgYmFja2dyb3VuZDogaHNsYSgwLCAwJSwgMCUsIDAuMSk7CiAgICAgICAgIG1hcmdpbjogMXJlbSAwOwogICAgICB9CiAgICAgIC5QYWdlVXNlcnMtdXNlciB7CiAgICAgICAgIGRpc3BsYXk6IGZsZXg7CiAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47CiAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7CiAgICAgICAgIGFsaWduLWl0ZW1zOiBzdHJldGNoOwogICAgICAgICBjb2x1bW4tZ2FwOiAycmVtOwogICAgICAgICAuUGFnZVVzZXJzLXRpdGxlIHsKICAgICAgICAgICAgZmxleC1ncm93OiAxOwogICAgICAgICAgICBmb250LXNpemU6IDFyZW07CiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7CiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7CiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgICAgICAgIH0KICAgICAgICAgLlBhZ2VVc2Vycy1jb250ZW50IHsKICAgICAgICAgICAgZGlzcGxheTogZmxleDsKICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdzsKICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgICAgICAgICAgIGZvbnQtc2l6ZTogMC44cmVtOwogICAgICAgICAgICBjb2xvcjogaHNsKDAsIDAlLCAzMCUpOwogICAgICAgICAgICBsaW5lLWhlaWdodDogMS4yOwogICAgICAgICB9CiAgICAgICAgIC5QYWdlVXNlcnMtYnV0dG9uT3B0aW9uIHsKICAgICAgICAgICAgd2lkdGg6IDIuNHJlbTsKICAgICAgICAgICAgaGVpZ2h0OiAyLjRyZW07CiAgICAgICAgICAgIHBhZGRpbmc6IDAuNnJlbTsKICAgICAgICAgICAgZGlzcGxheTogZmxleDsKICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdzsKICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgICAgICAgICAgIGJvcmRlcjogbm9uZTsKICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlOwogICAgICAgICAgICBiYWNrZ3JvdW5kOiBub25lOwogICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICAgICAgICAgIHRyYW5zaXRpb246IHZhcigtLWFuaW1hdGlvbi1kdXJhdGlvbik7CiAgICAgICAgICAgICY6aG92ZXIsCiAgICAgICAgICAgICY6Zm9jdXMgewogICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiBoc2xhKDAsIDAlLCAwJSwgMC4xKTsKICAgICAgICAgICAgfQogICAgICAgICAgICAmLWljb24gewogICAgICAgICAgICAgICB3aWR0aDogMTAwJTsKICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAlOwogICAgICAgICAgICB9CiAgICAgICAgIH0KICAgICAgfQogICB9CgogICAuUGFnZVVzZXJzLXdpbmRvdyB7CiAgICAgIHdpZHRoOiAyMHJlbTsKICAgICAgbWF4LXdpZHRoOiAxMDAlOwogICAgICBkaXNwbGF5OiBmbGV4OwogICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogICAgICBnYXA6IDJyZW07CgogICAgICAuUGFnZVVzZXJzLXdpbmRvdy1tYWluIHsKICAgICAgICAgZGlzcGxheTogZmxleDsKICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKICAgICAgICAgZ2FwOiAxMHB4OwogICAgICAgICAuUGFnZVVzZXJzLXdpbmRvdy10aXRsZSB7CiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS4xcmVtOwogICAgICAgICAgICBmb250LXdlaWdodDogOTAwOwogICAgICAgICB9CiAgICAgICAgIC5QYWdlVXNlcnMtd2luZG93LWlucHV0VGV4dCB7CiAgICAgICAgICAgIGZsZXgtZ3JvdzogMTsKICAgICAgICAgICAgZm9udC1zaXplOiAxcmVtOwogICAgICAgICAgICBib3JkZXI6IG5vbmU7CiAgICAgICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCBoc2woMCwgMCUsIDcwJSk7CiAgICAgICAgICAgIGJhY2tncm91bmQ6IG5vbmU7CiAgICAgICAgICAgIHBhZGRpbmc6IDRweCAwOwogICAgICAgICB9CiAgICAgICAgIC5QYWdlVXNlcnMtd2luZG93LXRleHQgewogICAgICAgICAgICBmbGV4LWdyb3c6IDE7CiAgICAgICAgICAgIGZvbnQtc2l6ZTogMXJlbTsKICAgICAgICAgICAgcGFkZGluZzogNHB4IDA7CiAgICAgICAgIH0KICAgICAgICAgLlBhZ2VVc2Vycy13aW5kb3ctcmVxdWlyZWQgewogICAgICAgICAgICBjb2xvcjogaHNsKDAsIDUwJSwgNTAlKTsKICAgICAgICAgICAgZm9udC1zaXplOiAwLjhyZW07CiAgICAgICAgIH0KICAgICAgfQogICB9Cn0K"},{"version":3,"sources":["PageUsers.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0VA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PageUsers.vue","sourceRoot":"src/pages/users","sourcesContent":["<script>\r\n   import ActionBarManage from \"@/pages/manage/ActionBarManage.vue\";\r\n   import Loadingv1 from \"@/components/Loading\";\r\n   import MenuButton from \"@/components/button/MenuButton.vue\";\r\n   import Selector from \"@/components/selector/Selector.vue\";\r\n   import Empty from \"@/components/Empty.vue\";\r\n   import UserType from \"@/utils/UserType.js\";\r\n   import PopupWindowAction from \"@/components/window/PopupWindowAction\";\r\n   import Input from \"@/components/Input.vue\";\r\n\r\n   export default {\r\n      key: \"users\",\r\n      title: \"Other Users\",\r\n      icon: { light: \"users-FFFFFF\", dark: \"users-2A4858\" },\r\n      userPermissions: [\"admin\"],\r\n\r\n      components: {\r\n         ActionBarManage,\r\n         Loadingv1,\r\n         MenuButton,\r\n         Selector,\r\n         Empty,\r\n         PopupWindowAction,\r\n         Input,\r\n      },\r\n      emits: [\"callback-side-expand\"],\r\n      data() {\r\n         return {\r\n            scrollTop: 0,\r\n            UserType,\r\n\r\n            window: {\r\n               addUser: {\r\n                  isShowing: false,\r\n                  username: \"\",\r\n                  name: \"\",\r\n                  passwordNew: \"\",\r\n                  passwordRepeat: \"\",\r\n               },\r\n               removeUser: { isShowing: false, user: null },\r\n               changeUserType: { isShowing: false, user: null, userType: \"\" },\r\n            },\r\n         };\r\n      },\r\n      computed: {\r\n         isLoading: (c) => c.userStore.getters.isLoading,\r\n         user: (c) => c.loginStore.getters.user,\r\n         users: (c) => {\r\n            return (c.user ? c.userStore.getters.items : []).filter((userParse) => {\r\n               return userParse.username !== c.user.username;\r\n            });\r\n         },\r\n      },\r\n      mounted() {\r\n         this.onIntentRefresh();\r\n      },\r\n      methods: {\r\n         getTextByKeyUserType(key) {\r\n            if (key === UserType.Admin) return \"Admin\";\r\n            if (key === UserType.Staff) return \"Staff\";\r\n            if (key === UserType.Customer) return \"Customer\";\r\n            return \"Other\";\r\n         },\r\n         getKeyUserTypeByText(text) {\r\n            if (text === \"Admin\") return UserType.Admin;\r\n            if (text === \"Staff\") return UserType.Staff;\r\n            if (text === \"Customer\") return UserType.Customer;\r\n            return -1;\r\n         },\r\n\r\n         onIntentRefresh() {\r\n            this.userStore.dispatch(\"refresh\").catch((error) => {\r\n               this.$root.feedback(\"Failed to validate user\");\r\n            });\r\n         },\r\n\r\n         onIntentAddUser() {\r\n            this.onResetAddUser();\r\n            this.window.addUser.isShowing = true;\r\n         },\r\n         onDismissAddUser() {\r\n            this.window.addUser.isShowing = false;\r\n            this.onResetAddUser();\r\n         },\r\n         onFinishAddUser() {\r\n            this.userStore\r\n               .dispatch(\"addUser\", {\r\n                  username: this.window.addUser.username,\r\n                  name: this.window.addUser.name,\r\n                  passwordNew: this.window.addUser.passwordNew,\r\n                  passwordRepeat: this.window.addUser.passwordRepeat,\r\n               })\r\n               .then((user) => {\r\n                  if (user) {\r\n                     this.window.addUser.isShowing = false;\r\n                     this.onResetAddUser();\r\n                  } else {\r\n                     this.$root.feedback(\"Failed to add user\");\r\n                     throw new Error();\r\n                  }\r\n               })\r\n               .catch((error) => {\r\n                  this.$root.feedback(\"Error to add user\");\r\n               });\r\n         },\r\n         onResetAddUser() {\r\n            this.window.addUser.username = \"\";\r\n            this.window.addUser.name = \"\";\r\n            this.window.addUser.passwordNew = \"\";\r\n            this.window.addUser.passwordRepeat = \"\";\r\n         },\r\n\r\n         onIntentRemoveUser(user) {\r\n            this.onResetRemoveUser();\r\n            this.window.removeUser.user = user;\r\n            this.window.removeUser.isShowing = true;\r\n         },\r\n         onDismissRemoveUser() {\r\n            this.window.removeUser.isShowing = false;\r\n            this.onResetRemoveUser();\r\n         },\r\n         onFinishRemoveUser() {\r\n            const interfaceWindow = this.window.removeUser;\r\n            this.userStore\r\n               .dispatch(\"removeUserByUsername\", {\r\n                  username: interfaceWindow.user.username,\r\n               })\r\n               .then((result) => {\r\n                  if (result) {\r\n                     interfaceWindow.isShowing = false;\r\n                     this.onResetRemoveUser();\r\n                  } else {\r\n                     this.$root.feedback(\"Failed to remove user\");\r\n                     throw new Error();\r\n                  }\r\n               })\r\n               .catch((error) => {\r\n                  this.$root.feedback(\"Error to remove user\");\r\n               });\r\n         },\r\n         onResetRemoveUser() {\r\n            this.window.removeUser.user = null;\r\n         },\r\n\r\n         onIntentChangeUserType(user) {\r\n            this.onResetChangeUserType();\r\n            this.window.changeUserType.isShowing = true;\r\n            this.window.changeUserType.user = user;\r\n            this.window.changeUserType.userType = user.type;\r\n         },\r\n         onDismissChangeUserType() {\r\n            this.window.changeUserType.isShowing = false;\r\n            this.onResetChangeUserType();\r\n         },\r\n         onFinishChangeUserType() {\r\n            return this.userStore\r\n               .dispatch(\"updateTypeOfUserByUsername\", {\r\n                  username: this.window.changeUserType.user.username,\r\n                  userType: this.window.changeUserType.userType,\r\n               })\r\n               .then((userChange) => {\r\n                  if (userChange) {\r\n                     this.window.changeUserType.isShowing = false;\r\n                     this.onResetChangeUserType();\r\n                  } else {\r\n                     this.$root.feedback(\"Failed to change user priviledge\");\r\n                     throw new Error();\r\n                  }\r\n               })\r\n               .catch((error) => {\r\n                  this.$root.feedback(\"Error to change user priviledge\");\r\n               });\r\n         },\r\n         onResetChangeUserType() {\r\n            this.window.changeUserType.user = null;\r\n            this.window.changeUserType.userType = \"\";\r\n         },\r\n      },\r\n   };\r\n</script>\r\n\r\n<template>\r\n   <div class=\"PageUsers\" @scroll=\"(event) => (scrollTop = event.target.scrollTop)\">\r\n      <ActionBarManage\r\n         :hasShadow=\"scrollTop > 0\"\r\n         :title=\"$options.title\"\r\n         :rightMenus=\"[\r\n            {\r\n               key: 'addUser',\r\n               title: 'Add User',\r\n               icon: host.res('icon/add-2A4858.svg'),\r\n               click: onIntentAddUser,\r\n            },\r\n            {\r\n               key: 'refresh',\r\n               title: 'Refresh',\r\n               icon: host.res('icon/refresh-2A4858.svg'),\r\n               click: () => onIntentRefresh(),\r\n            },\r\n         ]\"\r\n         @click-drawer-expand=\"$emit('click-drawer-expand')\"\r\n      />\r\n\r\n      <div\r\n         class=\"PageUsers-body\"\r\n         v-if=\"user && user.type === UserType.Admin && users.length\"\r\n      >\r\n         <div class=\"PageUsers-user-root\" v-for=\"user in users\" :key=\"user.username\">\r\n            <div class=\"PageUsers-user-root-separator\" v-if=\"users.indexOf(user) !== 0\" />\r\n\r\n            <div class=\"PageUsers-user\">\r\n               <span class=\"PageUsers-title\">{{ user.name }}</span>\r\n               <div class=\"PageUsers-content\">\r\n                  <span class=\"PageUsers-username\">{{ user.username }}</span>\r\n                  <span class=\"PageUsers-type\">{{\r\n                     getTextByKeyUserType(user.type)\r\n                  }}</span>\r\n               </div>\r\n               <MenuButton\r\n                  :menus=\"[\r\n                     {\r\n                        key: 'changeUserType',\r\n                        title: 'Change User Type',\r\n                        interact: () => onIntentChangeUserType(user),\r\n                     },\r\n                     {\r\n                        key: 'removeUser',\r\n                        title: 'Remove User',\r\n                        interact: () => onIntentRemoveUser(user),\r\n                     },\r\n                  ]\"\r\n               />\r\n            </div>\r\n         </div>\r\n      </div>\r\n\r\n      <Empty v-if=\"!users.length && !isLoading\" />\r\n\r\n      <Loadingv1 class=\"PageUsers-loading\" :isRunning=\"isLoading\" />\r\n\r\n      <!-- add user -->\r\n      <PopupWindowAction\r\n         title=\"Add User\"\r\n         :isShowing=\"window.addUser.isShowing\"\r\n         @click-dismiss=\"onDismissAddUser\"\r\n         @click-cancel=\"onDismissAddUser\"\r\n         @click-ok=\"onFinishAddUser\"\r\n      >\r\n         <div class=\"PageUsers-window\">\r\n            <Input\r\n               label=\"Username\"\r\n               :isRequired=\"true\"\r\n               :bindValue=\"window.addUser.username\"\r\n               @input=\"(comp) => (window.addUser.username = comp.value)\"\r\n            />\r\n            <Input\r\n               label=\"Name\"\r\n               :isRequired=\"true\"\r\n               :bindValue=\"window.addUser.name\"\r\n               @input=\"(comp) => (window.addUser.name = comp.value)\"\r\n            />\r\n            <Input\r\n               label=\"Password\"\r\n               type=\"password\"\r\n               :isRequired=\"true\"\r\n               :bindValue=\"window.addUser.passwordNew\"\r\n               @input=\"(comp) => (window.addUser.passwordNew = comp.value)\"\r\n            />\r\n            <Input\r\n               label=\"Repeat Password\"\r\n               type=\"password\"\r\n               :isRequired=\"true\"\r\n               :bindValue=\"window.addUser.passwordRepeat\"\r\n               @input=\"(comp) => (window.addUser.passwordRepeat = comp.value)\"\r\n            />\r\n         </div>\r\n      </PopupWindowAction>\r\n\r\n      <!-- remove user -->\r\n      <PopupWindowAction\r\n         title=\"Remove User?\"\r\n         :isShowing=\"window.removeUser.isShowing\"\r\n         @click-dismiss=\"onDismissRemoveUser\"\r\n         @click-cancel=\"onDismissRemoveUser\"\r\n         @click-ok=\"onFinishRemoveUser\"\r\n      >\r\n         <div class=\"PageUsers-window\">\r\n            <div class=\"PageUsers-window-main\">\r\n               <p class=\"PageUsers-window-text\">Once removed, cannot be undone</p>\r\n            </div>\r\n         </div>\r\n      </PopupWindowAction>\r\n\r\n      <!-- change user -->\r\n      <PopupWindowAction\r\n         title=\"Change User Type\"\r\n         :isShowing=\"window.changeUserType.isShowing\"\r\n         @click-dismiss=\"onDismissChangeUserType\"\r\n         @click-cancel=\"onDismissChangeUserType\"\r\n         @click-ok=\"onFinishChangeUserType\"\r\n      >\r\n         <div class=\"PageUsers-window\">\r\n            <div class=\"PageUsers-window-main\">\r\n               <span class=\"PageUsers-window-text\">\r\n                  {{\r\n                     window.changeUserType.user\r\n                        ? window.changeUserType.user.name\r\n                        : \"Unknown\"\r\n                  }}\r\n                  is\r\n                  {{\r\n                     getTextByKeyUserType(\r\n                        window.changeUserType.user ? window.changeUserType.user.type : \"\"\r\n                     )\r\n                  }}</span\r\n               >\r\n            </div>\r\n\r\n            <div class=\"PageUsers-window-main\">\r\n               <span class=\"PageUsers-window-title\">New User Type</span>\r\n               <span class=\"PageUsers-window-required\">Required</span>\r\n               <Selector\r\n                  :list=\"[\r\n                     {\r\n                        key: getTextByKeyUserType(UserType.Admin),\r\n                        title: 'Admin',\r\n                     },\r\n                     {\r\n                        key: getTextByKeyUserType(UserType.Staff),\r\n                        title: 'Staff',\r\n                     },\r\n                  ]\"\r\n                  :keySelected=\"getTextByKeyUserType(window.changeUserType.userType)\"\r\n                  @callback-select=\"\r\n                     (key) => {\r\n                        window.changeUserType.userType = getKeyUserTypeByText(key);\r\n                     }\r\n                  \"\r\n               />\r\n            </div>\r\n         </div>\r\n      </PopupWindowAction>\r\n   </div>\r\n</template>\r\n\r\n<style lang=\"scss\" scoped>\r\n   .PageUsers {\r\n      position: relative;\r\n      width: 100%;\r\n      height: 100%;\r\n      display: flex;\r\n      flex-direction: column;\r\n      overflow-y: auto;\r\n\r\n      .PageUsers-body {\r\n         width: 100%;\r\n         height: 100%;\r\n         display: flex;\r\n         flex-direction: column;\r\n         align-items: center;\r\n         padding: 4rem;\r\n      }\r\n\r\n      .PageUsers-loading {\r\n         position: absolute;\r\n         width: 100%;\r\n         z-index: 100;\r\n      }\r\n\r\n      .PageUsers-user-root {\r\n         width: 100%;\r\n         max-width: 24rem;\r\n         display: flex;\r\n         flex-direction: column;\r\n         align-items: stretch;\r\n         &-separator {\r\n            min-height: 1px;\r\n            background: hsla(0, 0%, 0%, 0.1);\r\n            margin: 1rem 0;\r\n         }\r\n         .PageUsers-user {\r\n            display: flex;\r\n            flex-direction: column;\r\n            flex-direction: row;\r\n            align-items: stretch;\r\n            column-gap: 2rem;\r\n            .PageUsers-title {\r\n               flex-grow: 1;\r\n               font-size: 1rem;\r\n               display: flex;\r\n               flex-direction: row;\r\n               align-items: center;\r\n            }\r\n            .PageUsers-content {\r\n               display: flex;\r\n               flex-direction: row;\r\n               flex-direction: column;\r\n               justify-content: center;\r\n               font-size: 0.8rem;\r\n               color: hsl(0, 0%, 30%);\r\n               line-height: 1.2;\r\n            }\r\n            .PageUsers-buttonOption {\r\n               width: 2.4rem;\r\n               height: 2.4rem;\r\n               padding: 0.6rem;\r\n               display: flex;\r\n               flex-direction: row;\r\n               align-items: center;\r\n               justify-content: center;\r\n               border: none;\r\n               border-radius: 50%;\r\n               background: none;\r\n               cursor: pointer;\r\n               transition: var(--animation-duration);\r\n               &:hover,\r\n               &:focus {\r\n                  background: hsla(0, 0%, 0%, 0.1);\r\n               }\r\n               &-icon {\r\n                  width: 100%;\r\n                  height: 100%;\r\n               }\r\n            }\r\n         }\r\n      }\r\n\r\n      .PageUsers-window {\r\n         width: 20rem;\r\n         max-width: 100%;\r\n         display: flex;\r\n         flex-direction: column;\r\n         gap: 2rem;\r\n\r\n         .PageUsers-window-main {\r\n            display: flex;\r\n            flex-direction: column;\r\n            gap: 10px;\r\n            .PageUsers-window-title {\r\n               font-size: 1.1rem;\r\n               font-weight: 900;\r\n            }\r\n            .PageUsers-window-inputText {\r\n               flex-grow: 1;\r\n               font-size: 1rem;\r\n               border: none;\r\n               border-bottom: 1px solid hsl(0, 0%, 70%);\r\n               background: none;\r\n               padding: 4px 0;\r\n            }\r\n            .PageUsers-window-text {\r\n               flex-grow: 1;\r\n               font-size: 1rem;\r\n               padding: 4px 0;\r\n            }\r\n            .PageUsers-window-required {\r\n               color: hsl(0, 50%, 50%);\r\n               font-size: 0.8rem;\r\n            }\r\n         }\r\n      }\r\n   }\r\n</style>\r\n"]}]}