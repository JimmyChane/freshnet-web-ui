{"remainingRequest":"C:\\dev\\freshnet-v2\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\dev\\freshnet-v2\\vue\\src\\app\\App_LeftNavigation_Section.vue?vue&type=style&index=0&id=6f029466&lang=scss&scoped=true&","dependencies":[{"path":"C:\\dev\\freshnet-v2\\vue\\src\\app\\App_LeftNavigation_Section.vue","mtime":1664457001606},{"path":"C:\\dev\\freshnet-v2\\vue\\node_modules\\css-loader\\index.js","mtime":1662650920109},{"path":"C:\\dev\\freshnet-v2\\vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1662650934772},{"path":"C:\\dev\\freshnet-v2\\vue\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1662650932744},{"path":"C:\\dev\\freshnet-v2\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1662650916242},{"path":"C:\\dev\\freshnet-v2\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1662650934771}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouTGVmdE5hdmlnYXRpb25TZWN0aW9uIHsKICAgZGlzcGxheTogZmxleDsKICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKCiAgIC5MZWZ0TmF2aWdhdGlvblNlY3Rpb24tdGl0bGUgewogICAgICB3aWR0aDogZml0LWNvbnRlbnQ7CiAgICAgIG1hcmdpbi1sZWZ0OiAwLjRlbTsKICAgICAgcGFkZGluZzogMC42cmVtIDFyZW07CgogICAgICBmb250LXNpemU6IDAuN2VtOwogICAgICBmb250LXdlaWdodDogOTAwOwogICAgICBvcGFjaXR5OiAxOwogICAgICBsZXR0ZXItc3BhY2luZzogMC40ZW07CiAgICAgIGNvbG9yOiB2YXIoLS1wcmltYXJ5LWNvbG9yKTsKICAgfQoKICAgLkxlZnROYXZpZ2F0aW9uU2VjdGlvbi1saW5rcyB7CiAgICAgIGRpc3BsYXk6IGZsZXg7CiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47CiAgICAgIGFsaWduLWl0ZW1zOiBzdHJldGNoOwogICB9CiAgIC5MZWZ0TmF2aWdhdGlvblNlY3Rpb24tcXVlcmllcyB7CiAgICAgIGRpc3BsYXk6IGZsZXg7CiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47CiAgICAgIGFsaWduLWl0ZW1zOiBzdHJldGNoOwogICB9Cn0KCi5MZWZ0TmF2aWdhdGlvblNlY3Rpb24taXNXaWRlIHsKICAgd2lkdGg6IDEwMCU7CiAgIC5MZWZ0TmF2aWdhdGlvblNlY3Rpb24tdmlld3MgewogICAgICB3aWR0aDogMTAwJTsKICAgfQp9Cg=="},{"version":3,"sources":["App_LeftNavigation_Section.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4FA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"App_LeftNavigation_Section.vue","sourceRoot":"src/app","sourcesContent":["<script>\r\n   import LeftNavigationLink from \"./App_LeftNavigation_Link.vue\";\r\n   import LeftNavigationQuery from \"./App_LeftNavigation_Query.vue\";\r\n   export default {\r\n      emits: [\"click-section-view\"],\r\n      components: { LeftNavigationLink, LeftNavigationQuery },\r\n      props: {\r\n         page: { type: Object, default: () => null },\r\n         section: { type: Object, default: () => null },\r\n         selectedViewKey: { type: String, default: \"\" },\r\n         isWide: { type: Boolean, default: true },\r\n      },\r\n      computed: {\r\n         views: (context) => context.section.views,\r\n         title: (context) => context.section.title,\r\n\r\n         isLink: (context) => context.section.isLink,\r\n         isQuery: (context) => context.section.isQuery,\r\n      },\r\n      methods: {\r\n         hasQueryKey(key) {\r\n            const { query } = this.$route;\r\n            return Object.keys(query).includes(key);\r\n         },\r\n         getQueryValue(key) {\r\n            const { query } = this.$route;\r\n            return query[key];\r\n         },\r\n         clickQuery(view) {\r\n            const key = this.section.key;\r\n            const nextValue = view.key;\r\n\r\n            const currentValue = this.getQueryValue(key);\r\n            if (currentValue === nextValue) return;\r\n\r\n            console.log(this.hasQueryKey(\"\"));\r\n\r\n            if (\r\n               (this.hasQueryKey(\"\") && this.getQueryValue(\"\") === undefined) ||\r\n               (key === \"\" && nextValue === \"\")\r\n            ) {\r\n               this.$root.replaceRoute({});\r\n               return;\r\n            }\r\n\r\n            const query = {};\r\n            query[key] = nextValue;\r\n\r\n            this.$root.replaceRoute({ query });\r\n         },\r\n      },\r\n   };\r\n</script>\r\n\r\n<template>\r\n   <div\r\n      class=\"LeftNavigationSection\"\r\n      :class=\"[`LeftNavigationSection-${isWide ? 'isWide' : 'isThin'}`]\"\r\n   >\r\n      <span class=\"LeftNavigationSection-title\" v-if=\"isWide && title\">{{ title }}</span>\r\n      <div class=\"LeftNavigationSection-links\" v-if=\"views.length && !isQuery\">\r\n         <LeftNavigationLink\r\n            v-for=\"view of views\"\r\n            :key=\"view.key\"\r\n            :item=\"view\"\r\n            :href=\"`/${page.key}/${view.key}`\"\r\n            :isSelected=\"selectedViewKey === view.key\"\r\n            :isWide=\"isWide\"\r\n            @click=\"$emit('click-section-view', { section, view })\"\r\n         />\r\n      </div>\r\n\r\n      <div class=\"LeftNavigationSection-queries\" v-if=\"views.length && isQuery\">\r\n         <LeftNavigationQuery\r\n            class=\"LeftNavigationSection-query\"\r\n            v-for=\"view of views\"\r\n            :key=\"view.key\"\r\n            :item=\"view\"\r\n            :isSelected=\"getQueryValue(section.key) === view.key\"\r\n            :isWide=\"isWide\"\r\n            @click=\"\r\n               () => {\r\n                  clickQuery(view);\r\n                  $emit('click-section-view', { section, view });\r\n               }\r\n            \"\r\n         />\r\n      </div>\r\n   </div>\r\n</template>\r\n\r\n<style lang=\"scss\" scoped>\r\n   .LeftNavigationSection {\r\n      display: flex;\r\n      flex-direction: column;\r\n\r\n      .LeftNavigationSection-title {\r\n         width: fit-content;\r\n         margin-left: 0.4em;\r\n         padding: 0.6rem 1rem;\r\n\r\n         font-size: 0.7em;\r\n         font-weight: 900;\r\n         opacity: 1;\r\n         letter-spacing: 0.4em;\r\n         color: var(--primary-color);\r\n      }\r\n\r\n      .LeftNavigationSection-links {\r\n         display: flex;\r\n         flex-direction: column;\r\n         align-items: stretch;\r\n      }\r\n      .LeftNavigationSection-queries {\r\n         display: flex;\r\n         flex-direction: column;\r\n         align-items: stretch;\r\n      }\r\n   }\r\n\r\n   .LeftNavigationSection-isWide {\r\n      width: 100%;\r\n      .LeftNavigationSection-views {\r\n         width: 100%;\r\n      }\r\n   }\r\n</style>\r\n"]}]}