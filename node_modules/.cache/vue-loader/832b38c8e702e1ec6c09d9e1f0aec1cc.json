{"remainingRequest":"C:\\dev\\freshnet-vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\dev\\freshnet-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\dev\\freshnet-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\dev\\freshnet-vue\\src\\pages\\service\\PageService.vue?vue&type=template&id=1f362050&scoped=true&","dependencies":[{"path":"C:\\dev\\freshnet-vue\\src\\pages\\service\\PageService.vue","mtime":1667307837093},{"path":"C:\\dev\\freshnet-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1662650916242},{"path":"C:\\dev\\freshnet-vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1662650934773},{"path":"C:\\dev\\freshnet-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1662650916242},{"path":"C:\\dev\\freshnet-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1662650934771}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}